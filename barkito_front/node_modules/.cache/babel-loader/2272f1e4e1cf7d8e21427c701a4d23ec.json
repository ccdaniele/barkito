{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nclass BaseAwsSdkPlugin extends Plugin {\n  get serviceIdentifier() {\n    const id = this.constructor.name.toLowerCase();\n    Object.defineProperty(this, 'serviceIdentifier', {\n      configurable: true,\n      writable: true,\n      enumerable: true,\n      value: id\n    });\n    return id;\n  }\n\n  constructor() {\n    super(...arguments);\n    this.addSub(`apm:aws:request:start:${this.serviceIdentifier}`, _ref => {\n      let {\n        request,\n        operation,\n        awsRegion,\n        awsService,\n        serviceIdentifier\n      } = _ref;\n\n      if (!this.isEnabled(request)) {\n        return;\n      }\n\n      const serviceName = this.getServiceName(serviceIdentifier);\n      const childOf = this.tracer.scope().active();\n      const tags = {\n        'span.kind': 'client',\n        'service.name': serviceName,\n        'aws.operation': operation,\n        'aws.region': awsRegion,\n        'aws.service': awsService,\n        'component': 'aws-sdk'\n      };\n      if (this.requestTags) this.requestTags.set(request, tags);\n      const span = this.tracer.startSpan('aws.request', {\n        childOf,\n        tags\n      });\n      analyticsSampler.sample(span, this.config.measured);\n      this.requestInject(span, request);\n      const store = storage.getStore();\n      this.enter(span, store);\n    });\n    this.addSub(`apm:aws:request:complete:${this.serviceIdentifier}`, _ref2 => {\n      let {\n        response\n      } = _ref2;\n      const store = storage.getStore();\n      if (!store) return;\n      const {\n        span\n      } = store;\n      if (!span) return;\n      this.addResponseTags(span, response);\n      this.finish(span, response, response.error);\n    });\n  }\n\n  requestInject(span, request) {// implemented by subclasses, or not\n  }\n\n  isEnabled(request) {\n    return true;\n  }\n\n  addResponseTags(span, response) {\n    if (!span || !response.request) return;\n    const params = response.request.params;\n    const operation = response.request.operation;\n    const extraTags = this.generateTags(params, operation, response) || {};\n    const tags = Object.assign({\n      'aws.response.request_id': response.requestId,\n      'resource.name': operation,\n      'span.kind': 'client'\n    }, extraTags);\n    span.addTags(tags);\n  }\n\n  generateTags() {// implemented by subclasses, or not\n  }\n\n  finish(span, response, err) {\n    if (err) {\n      span.setTag('error', err);\n\n      if (err.requestId) {\n        span.addTags({\n          'aws.response.request_id': err.requestId\n        });\n      }\n    }\n\n    if (response) {\n      this.config.hooks.request(span, response);\n    }\n\n    span.finish();\n  }\n\n  configure(config) {\n    super.configure(normalizeConfig(config, this.serviceIdentifier));\n  } // TODO: test splitByAwsService when the test suite is fixed\n\n\n  getServiceName(serviceIdentifier) {\n    return this.config.service ? this.config.service : `${this.tracer._service}-aws-${serviceIdentifier}`;\n  }\n\n}\n\nfunction normalizeConfig(config, serviceIdentifier) {\n  const hooks = getHooks(config);\n  let specificConfig = config[serviceIdentifier];\n\n  switch (typeof specificConfig) {\n    case 'undefined':\n      specificConfig = {};\n      break;\n\n    case 'boolean':\n      specificConfig = {\n        enabled: specificConfig\n      };\n      break;\n  }\n\n  return Object.assign({}, config, specificConfig, {\n    splitByAwsService: config.splitByAwsService !== false,\n    hooks\n  });\n}\n\nfunction getHooks(config) {\n  const noop = () => {};\n\n  const request = config.hooks && config.hooks.request || noop;\n  return {\n    request\n  };\n}\n\nmodule.exports = BaseAwsSdkPlugin;","map":{"version":3,"names":["analyticsSampler","require","Plugin","storage","BaseAwsSdkPlugin","serviceIdentifier","id","constructor","name","toLowerCase","Object","defineProperty","configurable","writable","enumerable","value","addSub","request","operation","awsRegion","awsService","isEnabled","serviceName","getServiceName","childOf","tracer","scope","active","tags","requestTags","set","span","startSpan","sample","config","measured","requestInject","store","getStore","enter","response","addResponseTags","finish","error","params","extraTags","generateTags","assign","requestId","addTags","err","setTag","hooks","configure","normalizeConfig","service","_service","getHooks","specificConfig","enabled","splitByAwsService","noop","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-aws-sdk/src/base.js"],"sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\n\nclass BaseAwsSdkPlugin extends Plugin {\n  get serviceIdentifier () {\n    const id = this.constructor.name.toLowerCase()\n    Object.defineProperty(this, 'serviceIdentifier', {\n      configurable: true,\n      writable: true,\n      enumerable: true,\n      value: id\n    })\n    return id\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSub(`apm:aws:request:start:${this.serviceIdentifier}`, ({\n      request,\n      operation,\n      awsRegion,\n      awsService,\n      serviceIdentifier\n    }) => {\n      if (!this.isEnabled(request)) {\n        return\n      }\n      const serviceName = this.getServiceName(serviceIdentifier)\n      const childOf = this.tracer.scope().active()\n      const tags = {\n        'span.kind': 'client',\n        'service.name': serviceName,\n        'aws.operation': operation,\n        'aws.region': awsRegion,\n        'aws.service': awsService,\n        'component': 'aws-sdk'\n      }\n      if (this.requestTags) this.requestTags.set(request, tags)\n\n      const span = this.tracer.startSpan('aws.request', { childOf, tags })\n\n      analyticsSampler.sample(span, this.config.measured)\n\n      this.requestInject(span, request)\n\n      const store = storage.getStore()\n\n      this.enter(span, store)\n    })\n\n    this.addSub(`apm:aws:request:complete:${this.serviceIdentifier}`, ({ response }) => {\n      const store = storage.getStore()\n      if (!store) return\n      const { span } = store\n      if (!span) return\n      this.addResponseTags(span, response)\n      this.finish(span, response, response.error)\n    })\n  }\n\n  requestInject (span, request) {\n    // implemented by subclasses, or not\n  }\n\n  isEnabled (request) {\n    return true\n  }\n\n  addResponseTags (span, response) {\n    if (!span || !response.request) return\n    const params = response.request.params\n    const operation = response.request.operation\n    const extraTags = this.generateTags(params, operation, response) || {}\n    const tags = Object.assign({\n      'aws.response.request_id': response.requestId,\n      'resource.name': operation,\n      'span.kind': 'client'\n    }, extraTags)\n\n    span.addTags(tags)\n  }\n\n  generateTags () {\n    // implemented by subclasses, or not\n  }\n\n  finish (span, response, err) {\n    if (err) {\n      span.setTag('error', err)\n\n      if (err.requestId) {\n        span.addTags({ 'aws.response.request_id': err.requestId })\n      }\n    }\n\n    if (response) {\n      this.config.hooks.request(span, response)\n    }\n\n    span.finish()\n  }\n\n  configure (config) {\n    super.configure(normalizeConfig(config, this.serviceIdentifier))\n  }\n\n  // TODO: test splitByAwsService when the test suite is fixed\n  getServiceName (serviceIdentifier) {\n    return this.config.service\n      ? this.config.service\n      : `${this.tracer._service}-aws-${serviceIdentifier}`\n  }\n}\n\nfunction normalizeConfig (config, serviceIdentifier) {\n  const hooks = getHooks(config)\n\n  let specificConfig = config[serviceIdentifier]\n  switch (typeof specificConfig) {\n    case 'undefined':\n      specificConfig = {}\n      break\n    case 'boolean':\n      specificConfig = { enabled: specificConfig }\n      break\n  }\n\n  return Object.assign({}, config, specificConfig, {\n    splitByAwsService: config.splitByAwsService !== false,\n    hooks\n  })\n}\n\nfunction getHooks (config) {\n  const noop = () => {}\n  const request = (config.hooks && config.hooks.request) || noop\n\n  return { request }\n}\n\nmodule.exports = BaseAwsSdkPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}