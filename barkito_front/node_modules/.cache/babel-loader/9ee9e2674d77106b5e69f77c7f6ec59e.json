{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\naddHook({\n  name: 'memcached',\n  versions: ['>=2.2']\n}, Memcached => {\n  const startCh = channel('apm:memcached:command:start');\n  const finishCh = channel('apm:memcached:command:finish');\n  const errorCh = channel('apm:memcached:command:error');\n  shimmer.wrap(Memcached.prototype, 'command', command => function (queryCompiler, server) {\n    if (!startCh.hasSubscribers) {\n      return command.apply(this, arguments);\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    const client = this;\n    const wrappedQueryCompiler = asyncResource.bind(function () {\n      const query = queryCompiler.apply(this, arguments);\n      const callback = callbackResource.bind(query.callback);\n      query.callback = asyncResource.bind(function (err) {\n        if (err) {\n          errorCh.publish(err);\n        }\n\n        finishCh.publish();\n        return callback.apply(this, arguments);\n      });\n      startCh.publish({\n        client,\n        server,\n        query\n      });\n      return query;\n    });\n    return asyncResource.runInAsyncScope(() => {\n      arguments[0] = wrappedQueryCompiler;\n      const result = command.apply(this, arguments);\n      return result;\n    });\n  });\n  return Memcached;\n});","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","name","versions","Memcached","startCh","finishCh","errorCh","wrap","prototype","command","queryCompiler","server","hasSubscribers","apply","arguments","callbackResource","asyncResource","client","wrappedQueryCompiler","bind","query","callback","err","publish","runInAsyncScope","result"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/memcached.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\naddHook({ name: 'memcached', versions: ['>=2.2'] }, Memcached => {\n  const startCh = channel('apm:memcached:command:start')\n  const finishCh = channel('apm:memcached:command:finish')\n  const errorCh = channel('apm:memcached:command:error')\n\n  shimmer.wrap(Memcached.prototype, 'command', command => function (queryCompiler, server) {\n    if (!startCh.hasSubscribers) {\n      return command.apply(this, arguments)\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn')\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n\n    const client = this\n\n    const wrappedQueryCompiler = asyncResource.bind(function () {\n      const query = queryCompiler.apply(this, arguments)\n      const callback = callbackResource.bind(query.callback)\n\n      query.callback = asyncResource.bind(function (err) {\n        if (err) {\n          errorCh.publish(err)\n        }\n        finishCh.publish()\n\n        return callback.apply(this, arguments)\n      })\n      startCh.publish({ client, server, query })\n\n      return query\n    })\n\n    return asyncResource.runInAsyncScope(() => {\n      arguments[0] = wrappedQueryCompiler\n\n      const result = command.apply(this, arguments)\n\n      return result\n    })\n  })\n\n  return Memcached\n})\n"],"mappings":"AAAA;;AAEA,MAAM;EACJA,OADI;EAEJC,OAFI;EAGJC;AAHI,IAIFC,OAAO,CAAC,sBAAD,CAJX;;AAKA,MAAMC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAAvB;;AAEAF,OAAO,CAAC;EAAEI,IAAI,EAAE,WAAR;EAAqBC,QAAQ,EAAE,CAAC,OAAD;AAA/B,CAAD,EAA6CC,SAAS,IAAI;EAC/D,MAAMC,OAAO,GAAGR,OAAO,CAAC,6BAAD,CAAvB;EACA,MAAMS,QAAQ,GAAGT,OAAO,CAAC,8BAAD,CAAxB;EACA,MAAMU,OAAO,GAAGV,OAAO,CAAC,6BAAD,CAAvB;EAEAI,OAAO,CAACO,IAAR,CAAaJ,SAAS,CAACK,SAAvB,EAAkC,SAAlC,EAA6CC,OAAO,IAAI,UAAUC,aAAV,EAAyBC,MAAzB,EAAiC;IACvF,IAAI,CAACP,OAAO,CAACQ,cAAb,EAA6B;MAC3B,OAAOH,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBC,SAApB,CAAP;IACD;;IAED,MAAMC,gBAAgB,GAAG,IAAIjB,aAAJ,CAAkB,oBAAlB,CAAzB;IACA,MAAMkB,aAAa,GAAG,IAAIlB,aAAJ,CAAkB,oBAAlB,CAAtB;IAEA,MAAMmB,MAAM,GAAG,IAAf;IAEA,MAAMC,oBAAoB,GAAGF,aAAa,CAACG,IAAd,CAAmB,YAAY;MAC1D,MAAMC,KAAK,GAAGV,aAAa,CAACG,KAAd,CAAoB,IAApB,EAA0BC,SAA1B,CAAd;MACA,MAAMO,QAAQ,GAAGN,gBAAgB,CAACI,IAAjB,CAAsBC,KAAK,CAACC,QAA5B,CAAjB;MAEAD,KAAK,CAACC,QAAN,GAAiBL,aAAa,CAACG,IAAd,CAAmB,UAAUG,GAAV,EAAe;QACjD,IAAIA,GAAJ,EAAS;UACPhB,OAAO,CAACiB,OAAR,CAAgBD,GAAhB;QACD;;QACDjB,QAAQ,CAACkB,OAAT;QAEA,OAAOF,QAAQ,CAACR,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAP;MACD,CAPgB,CAAjB;MAQAV,OAAO,CAACmB,OAAR,CAAgB;QAAEN,MAAF;QAAUN,MAAV;QAAkBS;MAAlB,CAAhB;MAEA,OAAOA,KAAP;IACD,CAf4B,CAA7B;IAiBA,OAAOJ,aAAa,CAACQ,eAAd,CAA8B,MAAM;MACzCV,SAAS,CAAC,CAAD,CAAT,GAAeI,oBAAf;MAEA,MAAMO,MAAM,GAAGhB,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBC,SAApB,CAAf;MAEA,OAAOW,MAAP;IACD,CANM,CAAP;EAOD,CAlCD;EAoCA,OAAOtB,SAAP;AACD,CA1CM,CAAP"},"metadata":{},"sourceType":"script"}