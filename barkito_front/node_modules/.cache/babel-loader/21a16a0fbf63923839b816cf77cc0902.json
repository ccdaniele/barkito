{"ast":null,"code":"const {\n  sendVulnerabilities\n} = require('./vulnerability-reporter');\n\nconst {\n  enableAllAnalyzers,\n  disableAllAnalyzers\n} = require('./analyzers');\n\nconst web = require('../../plugins/util/web');\n\nconst {\n  storage\n} = require('../../../../datadog-core');\n\nconst overheadController = require('./overhead-controller');\n\nconst dc = require('diagnostics_channel');\n\nconst {\n  saveIastContext,\n  getIastContext,\n  cleanIastContext\n} = require('./iast-context'); // TODO Change to `apm:http:server:request:[start|close]` when the subscription\n//  order of the callbacks can be enforce\n\n\nconst requestStart = dc.channel('dd-trace:incomingHttpRequestStart');\nconst requestClose = dc.channel('dd-trace:incomingHttpRequestEnd');\n\nfunction enable(config) {\n  enableAllAnalyzers();\n  requestStart.subscribe(onIncomingHttpRequestStart);\n  requestClose.subscribe(onIncomingHttpRequestEnd);\n  overheadController.configure(config.iast);\n}\n\nfunction disable() {\n  disableAllAnalyzers();\n  if (requestStart.hasSubscribers) requestStart.unsubscribe(onIncomingHttpRequestStart);\n  if (requestClose.hasSubscribers) requestClose.unsubscribe(onIncomingHttpRequestEnd);\n}\n\nfunction onIncomingHttpRequestStart(data) {\n  if (data && data.req) {\n    const store = storage.getStore();\n\n    if (store) {\n      const topContext = web.getContext(data.req);\n\n      if (topContext) {\n        const rootSpan = topContext.span;\n        const isRequestAcquired = overheadController.acquireRequest(rootSpan);\n\n        if (isRequestAcquired) {\n          const iastContext = saveIastContext(store, topContext, {\n            rootSpan,\n            req: data.req\n          });\n          overheadController.initializeRequestContext(iastContext);\n        }\n      }\n    }\n  }\n}\n\nfunction onIncomingHttpRequestEnd(data) {\n  if (data && data.req) {\n    const store = storage.getStore();\n    const iastContext = getIastContext(storage.getStore());\n\n    if (iastContext && iastContext.rootSpan) {\n      overheadController.releaseRequest();\n      sendVulnerabilities(iastContext, iastContext.rootSpan);\n    } // TODO web.getContext(data.req) is required when the request is aborted\n\n\n    if (cleanIastContext(store, web.getContext(data.req), iastContext)) {\n      overheadController.releaseRequest();\n    }\n  }\n}\n\nmodule.exports = {\n  enable,\n  disable,\n  onIncomingHttpRequestEnd,\n  onIncomingHttpRequestStart\n};","map":{"version":3,"names":["sendVulnerabilities","require","enableAllAnalyzers","disableAllAnalyzers","web","storage","overheadController","dc","saveIastContext","getIastContext","cleanIastContext","requestStart","channel","requestClose","enable","config","subscribe","onIncomingHttpRequestStart","onIncomingHttpRequestEnd","configure","iast","disable","hasSubscribers","unsubscribe","data","req","store","getStore","topContext","getContext","rootSpan","span","isRequestAcquired","acquireRequest","iastContext","initializeRequestContext","releaseRequest","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/iast/index.js"],"sourcesContent":["const { sendVulnerabilities } = require('./vulnerability-reporter')\nconst { enableAllAnalyzers, disableAllAnalyzers } = require('./analyzers')\nconst web = require('../../plugins/util/web')\nconst { storage } = require('../../../../datadog-core')\nconst overheadController = require('./overhead-controller')\nconst dc = require('diagnostics_channel')\nconst { saveIastContext, getIastContext, cleanIastContext } = require('./iast-context')\n\n// TODO Change to `apm:http:server:request:[start|close]` when the subscription\n//  order of the callbacks can be enforce\nconst requestStart = dc.channel('dd-trace:incomingHttpRequestStart')\nconst requestClose = dc.channel('dd-trace:incomingHttpRequestEnd')\n\nfunction enable (config) {\n  enableAllAnalyzers()\n  requestStart.subscribe(onIncomingHttpRequestStart)\n  requestClose.subscribe(onIncomingHttpRequestEnd)\n  overheadController.configure(config.iast)\n}\n\nfunction disable () {\n  disableAllAnalyzers()\n  if (requestStart.hasSubscribers) requestStart.unsubscribe(onIncomingHttpRequestStart)\n  if (requestClose.hasSubscribers) requestClose.unsubscribe(onIncomingHttpRequestEnd)\n}\n\nfunction onIncomingHttpRequestStart (data) {\n  if (data && data.req) {\n    const store = storage.getStore()\n    if (store) {\n      const topContext = web.getContext(data.req)\n      if (topContext) {\n        const rootSpan = topContext.span\n        const isRequestAcquired = overheadController.acquireRequest(rootSpan)\n        if (isRequestAcquired) {\n          const iastContext = saveIastContext(store, topContext, { rootSpan, req: data.req })\n          overheadController.initializeRequestContext(iastContext)\n        }\n      }\n    }\n  }\n}\n\nfunction onIncomingHttpRequestEnd (data) {\n  if (data && data.req) {\n    const store = storage.getStore()\n    const iastContext = getIastContext(storage.getStore())\n    if (iastContext && iastContext.rootSpan) {\n      overheadController.releaseRequest()\n      sendVulnerabilities(iastContext, iastContext.rootSpan)\n    }\n    // TODO web.getContext(data.req) is required when the request is aborted\n    if (cleanIastContext(store, web.getContext(data.req), iastContext)) {\n      overheadController.releaseRequest()\n    }\n  }\n}\n\nmodule.exports = { enable, disable, onIncomingHttpRequestEnd, onIncomingHttpRequestStart }\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,MAAM;EAAEC,kBAAF;EAAsBC;AAAtB,IAA8CF,OAAO,CAAC,aAAD,CAA3D;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,wBAAD,CAAnB;;AACA,MAAM;EAAEI;AAAF,IAAcJ,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAMK,kBAAkB,GAAGL,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAMM,EAAE,GAAGN,OAAO,CAAC,qBAAD,CAAlB;;AACA,MAAM;EAAEO,eAAF;EAAmBC,cAAnB;EAAmCC;AAAnC,IAAwDT,OAAO,CAAC,gBAAD,CAArE,C,CAEA;AACA;;;AACA,MAAMU,YAAY,GAAGJ,EAAE,CAACK,OAAH,CAAW,mCAAX,CAArB;AACA,MAAMC,YAAY,GAAGN,EAAE,CAACK,OAAH,CAAW,iCAAX,CAArB;;AAEA,SAASE,MAAT,CAAiBC,MAAjB,EAAyB;EACvBb,kBAAkB;EAClBS,YAAY,CAACK,SAAb,CAAuBC,0BAAvB;EACAJ,YAAY,CAACG,SAAb,CAAuBE,wBAAvB;EACAZ,kBAAkB,CAACa,SAAnB,CAA6BJ,MAAM,CAACK,IAApC;AACD;;AAED,SAASC,OAAT,GAAoB;EAClBlB,mBAAmB;EACnB,IAAIQ,YAAY,CAACW,cAAjB,EAAiCX,YAAY,CAACY,WAAb,CAAyBN,0BAAzB;EACjC,IAAIJ,YAAY,CAACS,cAAjB,EAAiCT,YAAY,CAACU,WAAb,CAAyBL,wBAAzB;AAClC;;AAED,SAASD,0BAAT,CAAqCO,IAArC,EAA2C;EACzC,IAAIA,IAAI,IAAIA,IAAI,CAACC,GAAjB,EAAsB;IACpB,MAAMC,KAAK,GAAGrB,OAAO,CAACsB,QAAR,EAAd;;IACA,IAAID,KAAJ,EAAW;MACT,MAAME,UAAU,GAAGxB,GAAG,CAACyB,UAAJ,CAAeL,IAAI,CAACC,GAApB,CAAnB;;MACA,IAAIG,UAAJ,EAAgB;QACd,MAAME,QAAQ,GAAGF,UAAU,CAACG,IAA5B;QACA,MAAMC,iBAAiB,GAAG1B,kBAAkB,CAAC2B,cAAnB,CAAkCH,QAAlC,CAA1B;;QACA,IAAIE,iBAAJ,EAAuB;UACrB,MAAME,WAAW,GAAG1B,eAAe,CAACkB,KAAD,EAAQE,UAAR,EAAoB;YAAEE,QAAF;YAAYL,GAAG,EAAED,IAAI,CAACC;UAAtB,CAApB,CAAnC;UACAnB,kBAAkB,CAAC6B,wBAAnB,CAA4CD,WAA5C;QACD;MACF;IACF;EACF;AACF;;AAED,SAAShB,wBAAT,CAAmCM,IAAnC,EAAyC;EACvC,IAAIA,IAAI,IAAIA,IAAI,CAACC,GAAjB,EAAsB;IACpB,MAAMC,KAAK,GAAGrB,OAAO,CAACsB,QAAR,EAAd;IACA,MAAMO,WAAW,GAAGzB,cAAc,CAACJ,OAAO,CAACsB,QAAR,EAAD,CAAlC;;IACA,IAAIO,WAAW,IAAIA,WAAW,CAACJ,QAA/B,EAAyC;MACvCxB,kBAAkB,CAAC8B,cAAnB;MACApC,mBAAmB,CAACkC,WAAD,EAAcA,WAAW,CAACJ,QAA1B,CAAnB;IACD,CANmB,CAOpB;;;IACA,IAAIpB,gBAAgB,CAACgB,KAAD,EAAQtB,GAAG,CAACyB,UAAJ,CAAeL,IAAI,CAACC,GAApB,CAAR,EAAkCS,WAAlC,CAApB,EAAoE;MAClE5B,kBAAkB,CAAC8B,cAAnB;IACD;EACF;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EAAExB,MAAF;EAAUO,OAAV;EAAmBH,wBAAnB;EAA6CD;AAA7C,CAAjB"},"metadata":{},"sourceType":"script"}