{"ast":null,"code":"'use strict';\n\nconst pick = require('lodash.pick');\n\nconst id = require('../../id');\n\nconst DatadogSpanContext = require('../span_context');\n\nconst log = require('../../log');\n\nconst {\n  AUTO_KEEP,\n  AUTO_REJECT,\n  USER_KEEP\n} = require('../../../../../ext/priority');\n\nconst traceKey = 'x-datadog-trace-id';\nconst spanKey = 'x-datadog-parent-id';\nconst originKey = 'x-datadog-origin';\nconst samplingKey = 'x-datadog-sampling-priority';\nconst tagsKey = 'x-datadog-tags';\nconst baggagePrefix = 'ot-baggage-';\nconst b3TraceKey = 'x-b3-traceid';\nconst b3TraceExpr = /^([0-9a-f]{16}){1,2}$/i;\nconst b3SpanKey = 'x-b3-spanid';\nconst b3SpanExpr = /^[0-9a-f]{16}$/i;\nconst b3ParentKey = 'x-b3-parentspanid';\nconst b3SampledKey = 'x-b3-sampled';\nconst b3FlagsKey = 'x-b3-flags';\nconst b3HeaderKey = 'b3';\nconst sqsdHeaderHey = 'x-aws-sqsd-attr-_datadog';\nconst b3HeaderExpr = /^(([0-9a-f]{16}){1,2}-[0-9a-f]{16}(-[01d](-[0-9a-f]{16})?)?|[01d])$/i;\nconst baggageExpr = new RegExp(`^${baggagePrefix}(.+)$`);\nconst tagKeyExpr = /^_dd\\.p\\.[\\x21-\\x2b\\x2d-\\x7e]+$/; // ASCII minus spaces and commas\n\nconst tagValueExpr = /^[\\x20-\\x2b\\x2d-\\x7e]*$/; // ASCII minus commas\n\nconst ddKeys = [traceKey, spanKey, samplingKey, originKey];\nconst b3Keys = [b3TraceKey, b3SpanKey, b3ParentKey, b3SampledKey, b3FlagsKey, b3HeaderKey];\nconst logKeys = ddKeys.concat(b3Keys);\nconst traceparentExpr = /^(\\d{2})-([A-Fa-f0-9]{32})-([A-Fa-f0-9]{16})-(\\d{2})$/i;\nconst traceparentKey = 'traceparent';\n\nclass TextMapPropagator {\n  constructor(config) {\n    this._config = config;\n  }\n\n  inject(spanContext, carrier) {\n    carrier[traceKey] = spanContext.toTraceId();\n    carrier[spanKey] = spanContext.toSpanId();\n\n    this._injectOrigin(spanContext, carrier);\n\n    this._injectSamplingPriority(spanContext, carrier);\n\n    this._injectBaggageItems(spanContext, carrier);\n\n    this._injectB3(spanContext, carrier);\n\n    this._injectTraceparent(spanContext, carrier);\n\n    this._injectTags(spanContext, carrier);\n\n    log.debug(() => `Inject into carrier: ${JSON.stringify(pick(carrier, logKeys))}.`);\n  }\n\n  extract(carrier) {\n    const spanContext = this._extractSpanContext(carrier);\n\n    if (!spanContext) return spanContext;\n    log.debug(() => `Extract from carrier: ${JSON.stringify(pick(carrier, logKeys))}.`);\n    return spanContext;\n  }\n\n  _injectOrigin(spanContext, carrier) {\n    const origin = spanContext._trace.origin;\n\n    if (origin) {\n      carrier[originKey] = origin;\n    }\n  }\n\n  _injectSamplingPriority(spanContext, carrier) {\n    const priority = spanContext._sampling.priority;\n\n    if (Number.isInteger(priority)) {\n      carrier[samplingKey] = priority.toString();\n    }\n  }\n\n  _injectBaggageItems(spanContext, carrier) {\n    spanContext._baggageItems && Object.keys(spanContext._baggageItems).forEach(key => {\n      carrier[baggagePrefix + key] = String(spanContext._baggageItems[key]);\n    });\n  }\n\n  _injectTags(spanContext, carrier) {\n    const trace = spanContext._trace;\n\n    if (this._config.tagsHeaderMaxLength === 0) {\n      log.debug('Trace tag propagation is disabled, skipping injection.');\n      return;\n    }\n\n    const tags = [];\n\n    for (const key in trace.tags) {\n      if (!trace.tags[key] || !key.startsWith('_dd.p.')) continue;\n\n      if (!this._validateTagKey(key) || !this._validateTagValue(trace.tags[key])) {\n        log.error('Trace tags from span are invalid, skipping injection.');\n        return;\n      }\n\n      tags.push(`${key}=${trace.tags[key]}`);\n    }\n\n    const header = tags.join(',');\n\n    if (header.length > this._config.tagsHeaderMaxLength) {\n      log.error('Trace tags from span are too large, skipping injection.');\n    } else if (header) {\n      carrier[tagsKey] = header;\n    }\n  }\n\n  _injectB3(spanContext, carrier) {\n    if (!this._config.experimental.b3) return;\n    carrier[b3TraceKey] = spanContext._traceId.toString(16);\n    carrier[b3SpanKey] = spanContext._spanId.toString(16);\n    carrier[b3SampledKey] = spanContext._sampling.priority >= AUTO_KEEP ? '1' : '0';\n\n    if (spanContext._sampling.priority > AUTO_KEEP) {\n      carrier[b3FlagsKey] = '1';\n    }\n\n    if (spanContext._parentId) {\n      carrier[b3ParentKey] = spanContext._parentId.toString(16);\n    }\n  }\n\n  _injectTraceparent(spanContext, carrier) {\n    if (!this._config.experimental.traceparent) return;\n    const sampling = spanContext._sampling.priority >= AUTO_KEEP ? '01' : '00';\n\n    const traceId = spanContext._traceId.toString(16).padStart(32, '0');\n\n    const spanId = spanContext._spanId.toString(16).padStart(16, '0');\n\n    carrier[traceparentKey] = `01-${traceId}-${spanId}-${sampling}`;\n  }\n\n  _extractSpanContext(carrier) {\n    return this._extractDatadogContext(carrier) || this._extractTraceparentContext(carrier) || this._extractB3Context(carrier) || this._extractSqsdContext(carrier);\n  }\n\n  _extractDatadogContext(carrier) {\n    const spanContext = this._extractGenericContext(carrier, traceKey, spanKey, 10);\n\n    if (spanContext) {\n      this._extractOrigin(carrier, spanContext);\n\n      this._extractBaggageItems(carrier, spanContext);\n\n      this._extractSamplingPriority(carrier, spanContext);\n\n      this._extractTags(carrier, spanContext);\n    }\n\n    return spanContext;\n  }\n\n  _extractB3Context(carrier) {\n    if (!this._config.experimental.b3) return null;\n\n    const b3 = this._extractB3Headers(carrier);\n\n    const debug = b3[b3FlagsKey] === '1';\n\n    const priority = this._getPriority(b3[b3SampledKey], debug);\n\n    const spanContext = this._extractGenericContext(b3, b3TraceKey, b3SpanKey, 16);\n\n    if (priority !== undefined) {\n      if (!spanContext) {\n        // B3 can force a sampling decision without providing IDs\n        return new DatadogSpanContext({\n          traceId: id(),\n          spanId: null,\n          sampling: {\n            priority\n          }\n        });\n      }\n\n      spanContext._sampling.priority = priority;\n    }\n\n    return spanContext;\n  }\n\n  _extractSqsdContext(carrier) {\n    const headerValue = carrier[sqsdHeaderHey];\n\n    if (!headerValue) {\n      return null;\n    }\n\n    let parsed;\n\n    try {\n      parsed = JSON.parse(headerValue);\n    } catch (e) {\n      return null;\n    }\n\n    return this._extractDatadogContext(parsed);\n  }\n\n  _extractTraceparentContext(carrier) {\n    if (!this._config.experimental.traceparent) return null;\n    const headerValue = carrier[traceparentKey];\n\n    if (!headerValue) {\n      return null;\n    }\n\n    const matches = headerValue.match(traceparentExpr);\n\n    if (matches.length) {\n      return new DatadogSpanContext({\n        traceId: id(matches[2], 16),\n        spanId: id(matches[3], 16),\n        sampling: {\n          priority: matches[4] === '01' ? 1 : 0\n        }\n      });\n    }\n\n    return null;\n  }\n\n  _extractGenericContext(carrier, traceKey, spanKey, radix) {\n    if (carrier[traceKey] && carrier[spanKey]) {\n      return new DatadogSpanContext({\n        traceId: id(carrier[traceKey], radix),\n        spanId: id(carrier[spanKey], radix)\n      });\n    }\n\n    return null;\n  }\n\n  _extractB3Headers(carrier) {\n    if (b3HeaderExpr.test(carrier[b3HeaderKey])) {\n      return this._extractB3SingleHeader(carrier);\n    } else {\n      return this._extractB3MultipleHeaders(carrier);\n    }\n  }\n\n  _extractB3MultipleHeaders(carrier) {\n    const b3 = {};\n\n    if (b3TraceExpr.test(carrier[b3TraceKey]) && b3SpanExpr.test(carrier[b3SpanKey])) {\n      b3[b3TraceKey] = carrier[b3TraceKey];\n      b3[b3SpanKey] = carrier[b3SpanKey];\n    }\n\n    if (carrier[b3SampledKey]) {\n      b3[b3SampledKey] = carrier[b3SampledKey];\n    }\n\n    if (carrier[b3FlagsKey]) {\n      b3[b3FlagsKey] = carrier[b3FlagsKey];\n    }\n\n    return b3;\n  }\n\n  _extractB3SingleHeader(carrier) {\n    const parts = carrier[b3HeaderKey].split('-');\n\n    if (parts[0] === 'd') {\n      return {\n        [b3SampledKey]: '1',\n        [b3FlagsKey]: '1'\n      };\n    } else if (parts.length === 1) {\n      return {\n        [b3SampledKey]: parts[0]\n      };\n    } else {\n      const b3 = {\n        [b3TraceKey]: parts[0],\n        [b3SpanKey]: parts[1]\n      };\n\n      if (parts[2]) {\n        b3[b3SampledKey] = parts[2] !== '0' ? '1' : '0';\n\n        if (parts[2] === 'd') {\n          b3[b3FlagsKey] = '1';\n        }\n      }\n\n      return b3;\n    }\n  }\n\n  _extractOrigin(carrier, spanContext) {\n    const origin = carrier[originKey];\n\n    if (typeof carrier[originKey] === 'string') {\n      spanContext._trace.origin = origin;\n    }\n  }\n\n  _extractBaggageItems(carrier, spanContext) {\n    Object.keys(carrier).forEach(key => {\n      const match = key.match(baggageExpr);\n\n      if (match) {\n        spanContext._baggageItems[match[1]] = carrier[key];\n      }\n    });\n  }\n\n  _extractSamplingPriority(carrier, spanContext) {\n    const priority = parseInt(carrier[samplingKey], 10);\n\n    if (Number.isInteger(priority)) {\n      spanContext._sampling.priority = parseInt(carrier[samplingKey], 10);\n    }\n  }\n\n  _extractTags(carrier, spanContext) {\n    if (!carrier[tagsKey]) return;\n    const trace = spanContext._trace;\n\n    if (this._config.tagsHeaderMaxLength === 0) {\n      log.debug('Trace tag propagation is disabled, skipping extraction.');\n    } else if (carrier[tagsKey].length > this._config.tagsHeaderMaxLength) {\n      log.error('Trace tags from carrier are too large, skipping extraction.');\n    } else {\n      const pairs = carrier[tagsKey].split(',');\n      const tags = {};\n\n      for (const pair of pairs) {\n        const [key, ...rest] = pair.split('=');\n        const value = rest.join('=');\n\n        if (!this._validateTagKey(key) || !this._validateTagValue(value)) {\n          log.error('Trace tags from carrier are invalid, skipping extraction.');\n          return;\n        }\n\n        tags[key] = value;\n      }\n\n      Object.assign(trace.tags, tags);\n    }\n  }\n\n  _validateTagKey(key) {\n    return tagKeyExpr.test(key);\n  }\n\n  _validateTagValue(value) {\n    return tagValueExpr.test(value);\n  }\n\n  _getPriority(sampled, debug) {\n    if (debug) {\n      return USER_KEEP;\n    } else if (sampled === '1') {\n      return AUTO_KEEP;\n    } else if (sampled === '0') {\n      return AUTO_REJECT;\n    }\n  }\n\n}\n\nmodule.exports = TextMapPropagator;","map":{"version":3,"names":["pick","require","id","DatadogSpanContext","log","AUTO_KEEP","AUTO_REJECT","USER_KEEP","traceKey","spanKey","originKey","samplingKey","tagsKey","baggagePrefix","b3TraceKey","b3TraceExpr","b3SpanKey","b3SpanExpr","b3ParentKey","b3SampledKey","b3FlagsKey","b3HeaderKey","sqsdHeaderHey","b3HeaderExpr","baggageExpr","RegExp","tagKeyExpr","tagValueExpr","ddKeys","b3Keys","logKeys","concat","traceparentExpr","traceparentKey","TextMapPropagator","constructor","config","_config","inject","spanContext","carrier","toTraceId","toSpanId","_injectOrigin","_injectSamplingPriority","_injectBaggageItems","_injectB3","_injectTraceparent","_injectTags","debug","JSON","stringify","extract","_extractSpanContext","origin","_trace","priority","_sampling","Number","isInteger","toString","_baggageItems","Object","keys","forEach","key","String","trace","tagsHeaderMaxLength","tags","startsWith","_validateTagKey","_validateTagValue","error","push","header","join","length","experimental","b3","_traceId","_spanId","_parentId","traceparent","sampling","traceId","padStart","spanId","_extractDatadogContext","_extractTraceparentContext","_extractB3Context","_extractSqsdContext","_extractGenericContext","_extractOrigin","_extractBaggageItems","_extractSamplingPriority","_extractTags","_extractB3Headers","_getPriority","undefined","headerValue","parsed","parse","e","matches","match","radix","test","_extractB3SingleHeader","_extractB3MultipleHeaders","parts","split","parseInt","pairs","pair","rest","value","assign","sampled","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/opentracing/propagation/text_map.js"],"sourcesContent":["'use strict'\n\nconst pick = require('lodash.pick')\nconst id = require('../../id')\nconst DatadogSpanContext = require('../span_context')\nconst log = require('../../log')\n\nconst { AUTO_KEEP, AUTO_REJECT, USER_KEEP } = require('../../../../../ext/priority')\n\nconst traceKey = 'x-datadog-trace-id'\nconst spanKey = 'x-datadog-parent-id'\nconst originKey = 'x-datadog-origin'\nconst samplingKey = 'x-datadog-sampling-priority'\nconst tagsKey = 'x-datadog-tags'\nconst baggagePrefix = 'ot-baggage-'\nconst b3TraceKey = 'x-b3-traceid'\nconst b3TraceExpr = /^([0-9a-f]{16}){1,2}$/i\nconst b3SpanKey = 'x-b3-spanid'\nconst b3SpanExpr = /^[0-9a-f]{16}$/i\nconst b3ParentKey = 'x-b3-parentspanid'\nconst b3SampledKey = 'x-b3-sampled'\nconst b3FlagsKey = 'x-b3-flags'\nconst b3HeaderKey = 'b3'\nconst sqsdHeaderHey = 'x-aws-sqsd-attr-_datadog'\nconst b3HeaderExpr = /^(([0-9a-f]{16}){1,2}-[0-9a-f]{16}(-[01d](-[0-9a-f]{16})?)?|[01d])$/i\nconst baggageExpr = new RegExp(`^${baggagePrefix}(.+)$`)\nconst tagKeyExpr = /^_dd\\.p\\.[\\x21-\\x2b\\x2d-\\x7e]+$/ // ASCII minus spaces and commas\nconst tagValueExpr = /^[\\x20-\\x2b\\x2d-\\x7e]*$/ // ASCII minus commas\nconst ddKeys = [traceKey, spanKey, samplingKey, originKey]\nconst b3Keys = [b3TraceKey, b3SpanKey, b3ParentKey, b3SampledKey, b3FlagsKey, b3HeaderKey]\nconst logKeys = ddKeys.concat(b3Keys)\nconst traceparentExpr = /^(\\d{2})-([A-Fa-f0-9]{32})-([A-Fa-f0-9]{16})-(\\d{2})$/i\nconst traceparentKey = 'traceparent'\n\nclass TextMapPropagator {\n  constructor (config) {\n    this._config = config\n  }\n\n  inject (spanContext, carrier) {\n    carrier[traceKey] = spanContext.toTraceId()\n    carrier[spanKey] = spanContext.toSpanId()\n\n    this._injectOrigin(spanContext, carrier)\n    this._injectSamplingPriority(spanContext, carrier)\n    this._injectBaggageItems(spanContext, carrier)\n    this._injectB3(spanContext, carrier)\n    this._injectTraceparent(spanContext, carrier)\n    this._injectTags(spanContext, carrier)\n\n    log.debug(() => `Inject into carrier: ${JSON.stringify(pick(carrier, logKeys))}.`)\n  }\n\n  extract (carrier) {\n    const spanContext = this._extractSpanContext(carrier)\n\n    if (!spanContext) return spanContext\n\n    log.debug(() => `Extract from carrier: ${JSON.stringify(pick(carrier, logKeys))}.`)\n\n    return spanContext\n  }\n\n  _injectOrigin (spanContext, carrier) {\n    const origin = spanContext._trace.origin\n\n    if (origin) {\n      carrier[originKey] = origin\n    }\n  }\n\n  _injectSamplingPriority (spanContext, carrier) {\n    const priority = spanContext._sampling.priority\n\n    if (Number.isInteger(priority)) {\n      carrier[samplingKey] = priority.toString()\n    }\n  }\n\n  _injectBaggageItems (spanContext, carrier) {\n    spanContext._baggageItems && Object.keys(spanContext._baggageItems).forEach(key => {\n      carrier[baggagePrefix + key] = String(spanContext._baggageItems[key])\n    })\n  }\n\n  _injectTags (spanContext, carrier) {\n    const trace = spanContext._trace\n\n    if (this._config.tagsHeaderMaxLength === 0) {\n      log.debug('Trace tag propagation is disabled, skipping injection.')\n      return\n    }\n\n    const tags = []\n\n    for (const key in trace.tags) {\n      if (!trace.tags[key] || !key.startsWith('_dd.p.')) continue\n      if (!this._validateTagKey(key) || !this._validateTagValue(trace.tags[key])) {\n        log.error('Trace tags from span are invalid, skipping injection.')\n        return\n      }\n\n      tags.push(`${key}=${trace.tags[key]}`)\n    }\n\n    const header = tags.join(',')\n\n    if (header.length > this._config.tagsHeaderMaxLength) {\n      log.error('Trace tags from span are too large, skipping injection.')\n    } else if (header) {\n      carrier[tagsKey] = header\n    }\n  }\n\n  _injectB3 (spanContext, carrier) {\n    if (!this._config.experimental.b3) return\n\n    carrier[b3TraceKey] = spanContext._traceId.toString(16)\n    carrier[b3SpanKey] = spanContext._spanId.toString(16)\n    carrier[b3SampledKey] = spanContext._sampling.priority >= AUTO_KEEP ? '1' : '0'\n\n    if (spanContext._sampling.priority > AUTO_KEEP) {\n      carrier[b3FlagsKey] = '1'\n    }\n\n    if (spanContext._parentId) {\n      carrier[b3ParentKey] = spanContext._parentId.toString(16)\n    }\n  }\n\n  _injectTraceparent (spanContext, carrier) {\n    if (!this._config.experimental.traceparent) return\n\n    const sampling = spanContext._sampling.priority >= AUTO_KEEP ? '01' : '00'\n    const traceId = spanContext._traceId.toString(16).padStart(32, '0')\n    const spanId = spanContext._spanId.toString(16).padStart(16, '0')\n    carrier[traceparentKey] = `01-${traceId}-${spanId}-${sampling}`\n  }\n\n  _extractSpanContext (carrier) {\n    return this._extractDatadogContext(carrier) ||\n      this._extractTraceparentContext(carrier) ||\n      this._extractB3Context(carrier) ||\n      this._extractSqsdContext(carrier)\n  }\n\n  _extractDatadogContext (carrier) {\n    const spanContext = this._extractGenericContext(carrier, traceKey, spanKey, 10)\n\n    if (spanContext) {\n      this._extractOrigin(carrier, spanContext)\n      this._extractBaggageItems(carrier, spanContext)\n      this._extractSamplingPriority(carrier, spanContext)\n      this._extractTags(carrier, spanContext)\n    }\n\n    return spanContext\n  }\n\n  _extractB3Context (carrier) {\n    if (!this._config.experimental.b3) return null\n\n    const b3 = this._extractB3Headers(carrier)\n    const debug = b3[b3FlagsKey] === '1'\n    const priority = this._getPriority(b3[b3SampledKey], debug)\n    const spanContext = this._extractGenericContext(b3, b3TraceKey, b3SpanKey, 16)\n\n    if (priority !== undefined) {\n      if (!spanContext) {\n        // B3 can force a sampling decision without providing IDs\n        return new DatadogSpanContext({\n          traceId: id(),\n          spanId: null,\n          sampling: { priority }\n        })\n      }\n\n      spanContext._sampling.priority = priority\n    }\n\n    return spanContext\n  }\n\n  _extractSqsdContext (carrier) {\n    const headerValue = carrier[sqsdHeaderHey]\n    if (!headerValue) {\n      return null\n    }\n    let parsed\n    try {\n      parsed = JSON.parse(headerValue)\n    } catch (e) {\n      return null\n    }\n    return this._extractDatadogContext(parsed)\n  }\n\n  _extractTraceparentContext (carrier) {\n    if (!this._config.experimental.traceparent) return null\n\n    const headerValue = carrier[traceparentKey]\n    if (!headerValue) {\n      return null\n    }\n    const matches = headerValue.match(traceparentExpr)\n    if (matches.length) {\n      return new DatadogSpanContext({\n        traceId: id(matches[2], 16),\n        spanId: id(matches[3], 16),\n        sampling: { priority: matches[4] === '01' ? 1 : 0 }\n      })\n    }\n    return null\n  }\n\n  _extractGenericContext (carrier, traceKey, spanKey, radix) {\n    if (carrier[traceKey] && carrier[spanKey]) {\n      return new DatadogSpanContext({\n        traceId: id(carrier[traceKey], radix),\n        spanId: id(carrier[spanKey], radix)\n      })\n    }\n\n    return null\n  }\n\n  _extractB3Headers (carrier) {\n    if (b3HeaderExpr.test(carrier[b3HeaderKey])) {\n      return this._extractB3SingleHeader(carrier)\n    } else {\n      return this._extractB3MultipleHeaders(carrier)\n    }\n  }\n\n  _extractB3MultipleHeaders (carrier) {\n    const b3 = {}\n\n    if (b3TraceExpr.test(carrier[b3TraceKey]) && b3SpanExpr.test(carrier[b3SpanKey])) {\n      b3[b3TraceKey] = carrier[b3TraceKey]\n      b3[b3SpanKey] = carrier[b3SpanKey]\n    }\n\n    if (carrier[b3SampledKey]) {\n      b3[b3SampledKey] = carrier[b3SampledKey]\n    }\n\n    if (carrier[b3FlagsKey]) {\n      b3[b3FlagsKey] = carrier[b3FlagsKey]\n    }\n\n    return b3\n  }\n\n  _extractB3SingleHeader (carrier) {\n    const parts = carrier[b3HeaderKey].split('-')\n\n    if (parts[0] === 'd') {\n      return {\n        [b3SampledKey]: '1',\n        [b3FlagsKey]: '1'\n      }\n    } else if (parts.length === 1) {\n      return {\n        [b3SampledKey]: parts[0]\n      }\n    } else {\n      const b3 = {\n        [b3TraceKey]: parts[0],\n        [b3SpanKey]: parts[1]\n      }\n\n      if (parts[2]) {\n        b3[b3SampledKey] = parts[2] !== '0' ? '1' : '0'\n\n        if (parts[2] === 'd') {\n          b3[b3FlagsKey] = '1'\n        }\n      }\n\n      return b3\n    }\n  }\n\n  _extractOrigin (carrier, spanContext) {\n    const origin = carrier[originKey]\n\n    if (typeof carrier[originKey] === 'string') {\n      spanContext._trace.origin = origin\n    }\n  }\n\n  _extractBaggageItems (carrier, spanContext) {\n    Object.keys(carrier).forEach(key => {\n      const match = key.match(baggageExpr)\n\n      if (match) {\n        spanContext._baggageItems[match[1]] = carrier[key]\n      }\n    })\n  }\n\n  _extractSamplingPriority (carrier, spanContext) {\n    const priority = parseInt(carrier[samplingKey], 10)\n\n    if (Number.isInteger(priority)) {\n      spanContext._sampling.priority = parseInt(carrier[samplingKey], 10)\n    }\n  }\n\n  _extractTags (carrier, spanContext) {\n    if (!carrier[tagsKey]) return\n\n    const trace = spanContext._trace\n\n    if (this._config.tagsHeaderMaxLength === 0) {\n      log.debug('Trace tag propagation is disabled, skipping extraction.')\n    } else if (carrier[tagsKey].length > this._config.tagsHeaderMaxLength) {\n      log.error('Trace tags from carrier are too large, skipping extraction.')\n    } else {\n      const pairs = carrier[tagsKey].split(',')\n      const tags = {}\n\n      for (const pair of pairs) {\n        const [key, ...rest] = pair.split('=')\n        const value = rest.join('=')\n\n        if (!this._validateTagKey(key) || !this._validateTagValue(value)) {\n          log.error('Trace tags from carrier are invalid, skipping extraction.')\n          return\n        }\n\n        tags[key] = value\n      }\n\n      Object.assign(trace.tags, tags)\n    }\n  }\n\n  _validateTagKey (key) {\n    return tagKeyExpr.test(key)\n  }\n\n  _validateTagValue (value) {\n    return tagValueExpr.test(value)\n  }\n\n  _getPriority (sampled, debug) {\n    if (debug) {\n      return USER_KEEP\n    } else if (sampled === '1') {\n      return AUTO_KEEP\n    } else if (sampled === '0') {\n      return AUTO_REJECT\n    }\n  }\n}\n\nmodule.exports = TextMapPropagator\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}