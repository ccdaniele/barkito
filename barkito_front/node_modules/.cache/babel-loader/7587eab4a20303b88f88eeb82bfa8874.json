{"ast":null,"code":"'use strict';\n\nconst {\n  AgentEncoder\n} = require('./0.4');\n\nconst {\n  MAX_NAME_LENGTH,\n  MAX_SERVICE_LENGTH,\n  MAX_RESOURCE_NAME_LENGTH,\n  MAX_TYPE_LENGTH,\n  DEFAULT_SPAN_NAME,\n  DEFAULT_SERVICE_NAME\n} = require('./tags-processors');\n\nfunction truncate(value, maxLength) {\n  let suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (!value) {\n    return value;\n  }\n\n  if (value.length > maxLength) {\n    return `${value.slice(0, maxLength)}${suffix}`;\n  }\n\n  return value;\n}\n\nclass SpanStatsEncoder extends AgentEncoder {\n  _encodeBool(bytes, value) {\n    this._encodeByte(bytes, value ? 0xc3 : 0xc2);\n  }\n\n  makePayload() {\n    const traceSize = this._traceBytes.length;\n    const buffer = Buffer.allocUnsafe(traceSize);\n\n    this._traceBytes.copy(buffer, 0, traceSize);\n\n    this._reset();\n\n    return buffer;\n  }\n\n  _encodeMapPrefix(bytes, length) {\n    const offset = bytes.length;\n    bytes.reserve(1);\n    bytes.length += 1;\n    bytes.buffer[offset] = 0x80 + length;\n  }\n\n  _encodeBuffer(bytes, buffer) {\n    const length = buffer.length;\n    const offset = bytes.length;\n    bytes.reserve(5);\n    bytes.length += 5;\n    bytes.buffer[offset] = 0xc6;\n    bytes.buffer[offset + 1] = length >> 24;\n    bytes.buffer[offset + 2] = length >> 16;\n    bytes.buffer[offset + 3] = length >> 8;\n    bytes.buffer[offset + 4] = length;\n    buffer.copy(bytes.buffer, offset + 5);\n    bytes.length += length;\n  }\n\n  _encodeStat(bytes, stat) {\n    this._encodeMapPrefix(bytes, 12);\n\n    this._encodeString(bytes, 'Service');\n\n    const service = stat.Service || DEFAULT_SERVICE_NAME;\n\n    this._encodeString(bytes, truncate(service, MAX_SERVICE_LENGTH));\n\n    this._encodeString(bytes, 'Name');\n\n    const name = stat.Name || DEFAULT_SPAN_NAME;\n\n    this._encodeString(bytes, truncate(name, MAX_NAME_LENGTH));\n\n    this._encodeString(bytes, 'Resource');\n\n    this._encodeString(bytes, truncate(stat.Resource, MAX_RESOURCE_NAME_LENGTH, '...'));\n\n    this._encodeString(bytes, 'HTTPStatusCode');\n\n    this._encodeInteger(bytes, stat.HTTPStatusCode);\n\n    this._encodeString(bytes, 'Type');\n\n    this._encodeString(bytes, truncate(stat.Type, MAX_TYPE_LENGTH));\n\n    this._encodeString(bytes, 'Hits');\n\n    this._encodeLong(bytes, stat.Hits);\n\n    this._encodeString(bytes, 'Errors');\n\n    this._encodeLong(bytes, stat.Errors);\n\n    this._encodeString(bytes, 'Duration');\n\n    this._encodeLong(bytes, stat.Duration);\n\n    this._encodeString(bytes, 'OkSummary');\n\n    this._encodeBuffer(bytes, stat.OkSummary);\n\n    this._encodeString(bytes, 'ErrorSummary');\n\n    this._encodeBuffer(bytes, stat.ErrorSummary);\n\n    this._encodeString(bytes, 'Synthetics');\n\n    this._encodeBool(bytes, stat.Synthetics);\n\n    this._encodeString(bytes, 'TopLevelHits');\n\n    this._encodeLong(bytes, stat.TopLevelHits);\n  }\n\n  _encodeBucket(bytes, bucket) {\n    this._encodeMapPrefix(bytes, 3);\n\n    this._encodeString(bytes, 'Start');\n\n    this._encodeLong(bytes, bucket.Start);\n\n    this._encodeString(bytes, 'Duration');\n\n    this._encodeLong(bytes, bucket.Duration);\n\n    this._encodeString(bytes, 'Stats');\n\n    this._encodeArrayPrefix(bytes, bucket.Stats);\n\n    for (const stat of bucket.Stats) {\n      this._encodeStat(bytes, stat);\n    }\n  }\n\n  _encode(bytes, stats) {\n    this._encodeMapPrefix(bytes, 8);\n\n    this._encodeString(bytes, 'Hostname');\n\n    this._encodeString(bytes, stats.Hostname);\n\n    this._encodeString(bytes, 'Env');\n\n    this._encodeString(bytes, stats.Env);\n\n    this._encodeString(bytes, 'Version');\n\n    this._encodeString(bytes, stats.Version);\n\n    this._encodeString(bytes, 'Stats');\n\n    this._encodeArrayPrefix(bytes, stats.Stats);\n\n    for (const bucket of stats.Stats) {\n      this._encodeBucket(bytes, bucket);\n    }\n\n    this._encodeString(bytes, 'Lang');\n\n    this._encodeString(bytes, stats.Lang);\n\n    this._encodeString(bytes, 'TracerVersion');\n\n    this._encodeString(bytes, stats.TracerVersion);\n\n    this._encodeString(bytes, 'RuntimeID');\n\n    this._encodeString(bytes, stats.RuntimeID);\n\n    this._encodeString(bytes, 'Sequence');\n\n    this._encodeLong(bytes, stats.Sequence);\n  }\n\n}\n\nmodule.exports = {\n  SpanStatsEncoder\n};","map":{"version":3,"names":["AgentEncoder","require","MAX_NAME_LENGTH","MAX_SERVICE_LENGTH","MAX_RESOURCE_NAME_LENGTH","MAX_TYPE_LENGTH","DEFAULT_SPAN_NAME","DEFAULT_SERVICE_NAME","truncate","value","maxLength","suffix","length","slice","SpanStatsEncoder","_encodeBool","bytes","_encodeByte","makePayload","traceSize","_traceBytes","buffer","Buffer","allocUnsafe","copy","_reset","_encodeMapPrefix","offset","reserve","_encodeBuffer","_encodeStat","stat","_encodeString","service","Service","name","Name","Resource","_encodeInteger","HTTPStatusCode","Type","_encodeLong","Hits","Errors","Duration","OkSummary","ErrorSummary","Synthetics","TopLevelHits","_encodeBucket","bucket","Start","_encodeArrayPrefix","Stats","_encode","stats","Hostname","Env","Version","Lang","TracerVersion","RuntimeID","Sequence","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/encode/span-stats.js"],"sourcesContent":["'use strict'\n\nconst { AgentEncoder } = require('./0.4')\n\nconst {\n  MAX_NAME_LENGTH,\n  MAX_SERVICE_LENGTH,\n  MAX_RESOURCE_NAME_LENGTH,\n  MAX_TYPE_LENGTH,\n  DEFAULT_SPAN_NAME,\n  DEFAULT_SERVICE_NAME\n} = require('./tags-processors')\n\nfunction truncate (value, maxLength, suffix = '') {\n  if (!value) {\n    return value\n  }\n  if (value.length > maxLength) {\n    return `${value.slice(0, maxLength)}${suffix}`\n  }\n  return value\n}\n\nclass SpanStatsEncoder extends AgentEncoder {\n  _encodeBool (bytes, value) {\n    this._encodeByte(bytes, value ? 0xc3 : 0xc2)\n  }\n\n  makePayload () {\n    const traceSize = this._traceBytes.length\n    const buffer = Buffer.allocUnsafe(traceSize)\n    this._traceBytes.copy(buffer, 0, traceSize)\n    this._reset()\n    return buffer\n  }\n\n  _encodeMapPrefix (bytes, length) {\n    const offset = bytes.length\n\n    bytes.reserve(1)\n    bytes.length += 1\n\n    bytes.buffer[offset] = 0x80 + length\n  }\n\n  _encodeBuffer (bytes, buffer) {\n    const length = buffer.length\n    const offset = bytes.length\n\n    bytes.reserve(5)\n    bytes.length += 5\n\n    bytes.buffer[offset] = 0xc6\n    bytes.buffer[offset + 1] = length >> 24\n    bytes.buffer[offset + 2] = length >> 16\n    bytes.buffer[offset + 3] = length >> 8\n    bytes.buffer[offset + 4] = length\n\n    buffer.copy(bytes.buffer, offset + 5)\n    bytes.length += length\n  }\n\n  _encodeStat (bytes, stat) {\n    this._encodeMapPrefix(bytes, 12)\n\n    this._encodeString(bytes, 'Service')\n    const service = stat.Service || DEFAULT_SERVICE_NAME\n    this._encodeString(bytes, truncate(service, MAX_SERVICE_LENGTH))\n\n    this._encodeString(bytes, 'Name')\n    const name = stat.Name || DEFAULT_SPAN_NAME\n    this._encodeString(bytes, truncate(name, MAX_NAME_LENGTH))\n\n    this._encodeString(bytes, 'Resource')\n    this._encodeString(bytes, truncate(stat.Resource, MAX_RESOURCE_NAME_LENGTH, '...'))\n\n    this._encodeString(bytes, 'HTTPStatusCode')\n    this._encodeInteger(bytes, stat.HTTPStatusCode)\n\n    this._encodeString(bytes, 'Type')\n    this._encodeString(bytes, truncate(stat.Type, MAX_TYPE_LENGTH))\n\n    this._encodeString(bytes, 'Hits')\n    this._encodeLong(bytes, stat.Hits)\n\n    this._encodeString(bytes, 'Errors')\n    this._encodeLong(bytes, stat.Errors)\n\n    this._encodeString(bytes, 'Duration')\n    this._encodeLong(bytes, stat.Duration)\n\n    this._encodeString(bytes, 'OkSummary')\n    this._encodeBuffer(bytes, stat.OkSummary)\n\n    this._encodeString(bytes, 'ErrorSummary')\n    this._encodeBuffer(bytes, stat.ErrorSummary)\n\n    this._encodeString(bytes, 'Synthetics')\n    this._encodeBool(bytes, stat.Synthetics)\n\n    this._encodeString(bytes, 'TopLevelHits')\n    this._encodeLong(bytes, stat.TopLevelHits)\n  }\n\n  _encodeBucket (bytes, bucket) {\n    this._encodeMapPrefix(bytes, 3)\n\n    this._encodeString(bytes, 'Start')\n    this._encodeLong(bytes, bucket.Start)\n\n    this._encodeString(bytes, 'Duration')\n    this._encodeLong(bytes, bucket.Duration)\n\n    this._encodeString(bytes, 'Stats')\n    this._encodeArrayPrefix(bytes, bucket.Stats)\n    for (const stat of bucket.Stats) {\n      this._encodeStat(bytes, stat)\n    }\n  }\n\n  _encode (bytes, stats) {\n    this._encodeMapPrefix(bytes, 8)\n\n    this._encodeString(bytes, 'Hostname')\n    this._encodeString(bytes, stats.Hostname)\n\n    this._encodeString(bytes, 'Env')\n    this._encodeString(bytes, stats.Env)\n\n    this._encodeString(bytes, 'Version')\n    this._encodeString(bytes, stats.Version)\n\n    this._encodeString(bytes, 'Stats')\n    this._encodeArrayPrefix(bytes, stats.Stats)\n    for (const bucket of stats.Stats) {\n      this._encodeBucket(bytes, bucket)\n    }\n\n    this._encodeString(bytes, 'Lang')\n    this._encodeString(bytes, stats.Lang)\n\n    this._encodeString(bytes, 'TracerVersion')\n    this._encodeString(bytes, stats.TracerVersion)\n\n    this._encodeString(bytes, 'RuntimeID')\n    this._encodeString(bytes, stats.RuntimeID)\n\n    this._encodeString(bytes, 'Sequence')\n    this._encodeLong(bytes, stats.Sequence)\n  }\n}\n\nmodule.exports = {\n  SpanStatsEncoder\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}