{"ast":null,"code":"'use strict';\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  moleculerTags\n} = require('./util');\n\nclass MoleculerServerPlugin extends Plugin {\n  constructor() {\n    super(...arguments);\n    this.addSub('apm:moleculer:action:start', _ref => {\n      let {\n        action,\n        ctx,\n        broker\n      } = _ref;\n      const store = storage.getStore();\n      const followsFrom = this.tracer.extract('text_map', ctx.meta);\n      const span = this.tracer.startSpan('moleculer.action', {\n        childOf: followsFrom || store && store.span,\n        tags: {\n          'service.name': this.config.service || this.tracer._service,\n          'span.type': 'web',\n          'span.kind': 'server',\n          'resource.name': action.name,\n          ...moleculerTags(broker, ctx, this.config)\n        }\n      });\n      this.enter(span, store);\n    });\n    this.addSub('apm:moleculer:action:finish', () => {\n      const store = storage.getStore();\n      const span = store.span;\n      span.finish();\n    });\n    this.addSub('apm:moleculer:action:error', this.addError);\n  }\n\n}\n\nmodule.exports = MoleculerServerPlugin;","map":{"version":3,"names":["storage","require","Plugin","moleculerTags","MoleculerServerPlugin","constructor","addSub","action","ctx","broker","store","getStore","followsFrom","tracer","extract","meta","span","startSpan","childOf","tags","config","service","_service","name","enter","finish","addError","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-moleculer/src/server.js"],"sourcesContent":["'use strict'\n\nconst { storage } = require('../../datadog-core')\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { moleculerTags } = require('./util')\n\nclass MoleculerServerPlugin extends Plugin {\n  constructor (...args) {\n    super(...args)\n\n    this.addSub('apm:moleculer:action:start', ({ action, ctx, broker }) => {\n      const store = storage.getStore()\n      const followsFrom = this.tracer.extract('text_map', ctx.meta)\n      const span = this.tracer.startSpan('moleculer.action', {\n        childOf: followsFrom || (store && store.span),\n        tags: {\n          'service.name': this.config.service || this.tracer._service,\n          'span.type': 'web',\n          'span.kind': 'server',\n          'resource.name': action.name,\n          ...moleculerTags(broker, ctx, this.config)\n        }\n      })\n\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:moleculer:action:finish', () => {\n      const store = storage.getStore()\n      const span = store.span\n\n      span.finish()\n    })\n\n    this.addSub('apm:moleculer:action:error', this.addError)\n  }\n}\n\nmodule.exports = MoleculerServerPlugin\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAcC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,mCAAD,CAAtB;;AACA,MAAM;EAAEE;AAAF,IAAoBF,OAAO,CAAC,QAAD,CAAjC;;AAEA,MAAMG,qBAAN,SAAoCF,MAApC,CAA2C;EACzCG,WAAW,GAAW;IACpB,MAAM,YAAN;IAEA,KAAKC,MAAL,CAAY,4BAAZ,EAA0C,QAA6B;MAAA,IAA5B;QAAEC,MAAF;QAAUC,GAAV;QAAeC;MAAf,CAA4B;MACrE,MAAMC,KAAK,GAAGV,OAAO,CAACW,QAAR,EAAd;MACA,MAAMC,WAAW,GAAG,KAAKC,MAAL,CAAYC,OAAZ,CAAoB,UAApB,EAAgCN,GAAG,CAACO,IAApC,CAApB;MACA,MAAMC,IAAI,GAAG,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,kBAAtB,EAA0C;QACrDC,OAAO,EAAEN,WAAW,IAAKF,KAAK,IAAIA,KAAK,CAACM,IADa;QAErDG,IAAI,EAAE;UACJ,gBAAgB,KAAKC,MAAL,CAAYC,OAAZ,IAAuB,KAAKR,MAAL,CAAYS,QAD/C;UAEJ,aAAa,KAFT;UAGJ,aAAa,QAHT;UAIJ,iBAAiBf,MAAM,CAACgB,IAJpB;UAKJ,GAAGpB,aAAa,CAACM,MAAD,EAASD,GAAT,EAAc,KAAKY,MAAnB;QALZ;MAF+C,CAA1C,CAAb;MAWA,KAAKI,KAAL,CAAWR,IAAX,EAAiBN,KAAjB;IACD,CAfD;IAiBA,KAAKJ,MAAL,CAAY,6BAAZ,EAA2C,MAAM;MAC/C,MAAMI,KAAK,GAAGV,OAAO,CAACW,QAAR,EAAd;MACA,MAAMK,IAAI,GAAGN,KAAK,CAACM,IAAnB;MAEAA,IAAI,CAACS,MAAL;IACD,CALD;IAOA,KAAKnB,MAAL,CAAY,4BAAZ,EAA0C,KAAKoB,QAA/C;EACD;;AA7BwC;;AAgC3CC,MAAM,CAACC,OAAP,GAAiBxB,qBAAjB"},"metadata":{},"sourceType":"script"}