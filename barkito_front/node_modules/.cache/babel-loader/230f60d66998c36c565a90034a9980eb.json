{"ast":null,"code":"'use strict';\n\nconst log = require('./log');\n\nfunction add(carrier, keyValuePairs) {\n  if (!carrier || !keyValuePairs) return;\n\n  if (Array.isArray(keyValuePairs)) {\n    return keyValuePairs.forEach(tags => add(carrier, tags));\n  }\n\n  try {\n    if (typeof keyValuePairs === 'string') {\n      const segments = keyValuePairs.split(',');\n\n      for (const segment of segments) {\n        const separatorIndex = segment.indexOf(':');\n        if (separatorIndex === -1) continue;\n        const key = segment.slice(0, separatorIndex);\n        const value = segment.slice(separatorIndex + 1);\n        carrier[key.trim()] = value.trim();\n      }\n    } else {\n      Object.assign(carrier, keyValuePairs);\n    }\n  } catch (e) {\n    log.error(e);\n  }\n}\n\nmodule.exports = {\n  add\n};","map":{"version":3,"names":["log","require","add","carrier","keyValuePairs","Array","isArray","forEach","tags","segments","split","segment","separatorIndex","indexOf","key","slice","value","trim","Object","assign","e","error","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/tagger.js"],"sourcesContent":["'use strict'\n\nconst log = require('./log')\n\nfunction add (carrier, keyValuePairs) {\n  if (!carrier || !keyValuePairs) return\n\n  if (Array.isArray(keyValuePairs)) {\n    return keyValuePairs.forEach(tags => add(carrier, tags))\n  }\n\n  try {\n    if (typeof keyValuePairs === 'string') {\n      const segments = keyValuePairs.split(',')\n      for (const segment of segments) {\n        const separatorIndex = segment.indexOf(':')\n        if (separatorIndex === -1) continue\n\n        const key = segment.slice(0, separatorIndex)\n        const value = segment.slice(separatorIndex + 1)\n\n        carrier[key.trim()] = value.trim()\n      }\n    } else {\n      Object.assign(carrier, keyValuePairs)\n    }\n  } catch (e) {\n    log.error(e)\n  }\n}\n\nmodule.exports = { add }\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,SAASC,GAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;EACpC,IAAI,CAACD,OAAD,IAAY,CAACC,aAAjB,EAAgC;;EAEhC,IAAIC,KAAK,CAACC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;IAChC,OAAOA,aAAa,CAACG,OAAd,CAAsBC,IAAI,IAAIN,GAAG,CAACC,OAAD,EAAUK,IAAV,CAAjC,CAAP;EACD;;EAED,IAAI;IACF,IAAI,OAAOJ,aAAP,KAAyB,QAA7B,EAAuC;MACrC,MAAMK,QAAQ,GAAGL,aAAa,CAACM,KAAd,CAAoB,GAApB,CAAjB;;MACA,KAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;QAC9B,MAAMG,cAAc,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAvB;QACA,IAAID,cAAc,KAAK,CAAC,CAAxB,EAA2B;QAE3B,MAAME,GAAG,GAAGH,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,cAAjB,CAAZ;QACA,MAAMI,KAAK,GAAGL,OAAO,CAACI,KAAR,CAAcH,cAAc,GAAG,CAA/B,CAAd;QAEAT,OAAO,CAACW,GAAG,CAACG,IAAJ,EAAD,CAAP,GAAsBD,KAAK,CAACC,IAAN,EAAtB;MACD;IACF,CAXD,MAWO;MACLC,MAAM,CAACC,MAAP,CAAchB,OAAd,EAAuBC,aAAvB;IACD;EACF,CAfD,CAeE,OAAOgB,CAAP,EAAU;IACVpB,GAAG,CAACqB,KAAJ,CAAUD,CAAV;EACD;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiB;EAAErB;AAAF,CAAjB"},"metadata":{},"sourceType":"script"}