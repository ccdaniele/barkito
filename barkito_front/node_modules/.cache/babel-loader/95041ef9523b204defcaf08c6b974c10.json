{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst {\n  CI_APP_ORIGIN,\n  TEST_SKIP_REASON,\n  ERROR_MESSAGE,\n  TEST_STATUS,\n  TEST_CODE_OWNERS,\n  finishAllTraceSpans,\n  getTestEnvironmentMetadata,\n  getTestSuitePath,\n  getCodeOwnersFileEntries,\n  getCodeOwnersForFilename,\n  getTestCommonTags\n} = require('../../dd-trace/src/plugins/util/test');\n\nconst {\n  RESOURCE_NAME\n} = require('../../../ext/tags');\n\nclass CucumberPlugin extends Plugin {\n  static get name() {\n    return 'cucumber';\n  }\n\n  constructor() {\n    super(...arguments);\n    const testEnvironmentMetadata = getTestEnvironmentMetadata('cucumber', this.config);\n    const sourceRoot = process.cwd();\n    const codeOwnersEntries = getCodeOwnersFileEntries(sourceRoot);\n    this.addSub('ci:cucumber:session:finish', () => {\n      this.tracer._exporter._writer.flush();\n    });\n    this.addSub('ci:cucumber:run:start', _ref => {\n      let {\n        pickleName,\n        pickleUri\n      } = _ref;\n      const store = storage.getStore();\n      const childOf = store ? store.span : store;\n      const testSuite = getTestSuitePath(pickleUri, sourceRoot);\n      const commonTags = getTestCommonTags(pickleName, testSuite, this.tracer._version);\n      const codeOwners = getCodeOwnersForFilename(testSuite, codeOwnersEntries);\n\n      if (codeOwners) {\n        commonTags[TEST_CODE_OWNERS] = codeOwners;\n      }\n\n      const span = this.tracer.startSpan('cucumber.test', {\n        childOf,\n        tags: { ...commonTags,\n          ...testEnvironmentMetadata\n        }\n      });\n      span.context()._trace.origin = CI_APP_ORIGIN;\n      this.enter(span, store);\n    });\n    this.addSub('ci:cucumber:run-step:start', _ref2 => {\n      let {\n        resource\n      } = _ref2;\n      const store = storage.getStore();\n      const childOf = store ? store.span : store;\n      const span = this.tracer.startSpan('cucumber.step', {\n        childOf,\n        tags: {\n          'cucumber.step': resource,\n          [RESOURCE_NAME]: resource\n        }\n      });\n      this.enter(span, store);\n    });\n    this.addSub('ci:cucumber:run:finish', _ref3 => {\n      let {\n        isStep,\n        status,\n        skipReason,\n        errorMessage\n      } = _ref3;\n      const span = storage.getStore().span;\n      const statusTag = isStep ? 'step.status' : TEST_STATUS;\n      span.setTag(statusTag, status);\n\n      if (skipReason) {\n        span.setTag(TEST_SKIP_REASON, skipReason);\n      }\n\n      if (errorMessage) {\n        span.setTag(ERROR_MESSAGE, errorMessage);\n      }\n\n      span.finish();\n\n      if (!isStep) {\n        finishAllTraceSpans(span);\n      }\n    });\n    this.addSub('ci:cucumber:error', err => {\n      if (err) {\n        const span = storage.getStore().span;\n        span.setTag('error', err);\n      }\n    });\n  }\n\n}\n\nmodule.exports = CucumberPlugin;","map":{"version":3,"names":["Plugin","require","storage","CI_APP_ORIGIN","TEST_SKIP_REASON","ERROR_MESSAGE","TEST_STATUS","TEST_CODE_OWNERS","finishAllTraceSpans","getTestEnvironmentMetadata","getTestSuitePath","getCodeOwnersFileEntries","getCodeOwnersForFilename","getTestCommonTags","RESOURCE_NAME","CucumberPlugin","name","constructor","testEnvironmentMetadata","config","sourceRoot","process","cwd","codeOwnersEntries","addSub","tracer","_exporter","_writer","flush","pickleName","pickleUri","store","getStore","childOf","span","testSuite","commonTags","_version","codeOwners","startSpan","tags","context","_trace","origin","enter","resource","isStep","status","skipReason","errorMessage","statusTag","setTag","finish","err","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-cucumber/src/index.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\n\nconst {\n  CI_APP_ORIGIN,\n  TEST_SKIP_REASON,\n  ERROR_MESSAGE,\n  TEST_STATUS,\n  TEST_CODE_OWNERS,\n  finishAllTraceSpans,\n  getTestEnvironmentMetadata,\n  getTestSuitePath,\n  getCodeOwnersFileEntries,\n  getCodeOwnersForFilename,\n  getTestCommonTags\n} = require('../../dd-trace/src/plugins/util/test')\nconst { RESOURCE_NAME } = require('../../../ext/tags')\n\nclass CucumberPlugin extends Plugin {\n  static get name () {\n    return 'cucumber'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    const testEnvironmentMetadata = getTestEnvironmentMetadata('cucumber', this.config)\n    const sourceRoot = process.cwd()\n    const codeOwnersEntries = getCodeOwnersFileEntries(sourceRoot)\n\n    this.addSub('ci:cucumber:session:finish', () => {\n      this.tracer._exporter._writer.flush()\n    })\n\n    this.addSub('ci:cucumber:run:start', ({ pickleName, pickleUri }) => {\n      const store = storage.getStore()\n      const childOf = store ? store.span : store\n      const testSuite = getTestSuitePath(pickleUri, sourceRoot)\n\n      const commonTags = getTestCommonTags(pickleName, testSuite, this.tracer._version)\n\n      const codeOwners = getCodeOwnersForFilename(testSuite, codeOwnersEntries)\n      if (codeOwners) {\n        commonTags[TEST_CODE_OWNERS] = codeOwners\n      }\n\n      const span = this.tracer.startSpan('cucumber.test', {\n        childOf,\n        tags: {\n          ...commonTags,\n          ...testEnvironmentMetadata\n        }\n      })\n\n      span.context()._trace.origin = CI_APP_ORIGIN\n      this.enter(span, store)\n    })\n\n    this.addSub('ci:cucumber:run-step:start', ({ resource }) => {\n      const store = storage.getStore()\n      const childOf = store ? store.span : store\n      const span = this.tracer.startSpan('cucumber.step', {\n        childOf,\n        tags: {\n          'cucumber.step': resource,\n          [RESOURCE_NAME]: resource\n        }\n      })\n      this.enter(span, store)\n    })\n\n    this.addSub('ci:cucumber:run:finish', ({ isStep, status, skipReason, errorMessage }) => {\n      const span = storage.getStore().span\n      const statusTag = isStep ? 'step.status' : TEST_STATUS\n\n      span.setTag(statusTag, status)\n\n      if (skipReason) {\n        span.setTag(TEST_SKIP_REASON, skipReason)\n      }\n\n      if (errorMessage) {\n        span.setTag(ERROR_MESSAGE, errorMessage)\n      }\n\n      span.finish()\n      if (!isStep) {\n        finishAllTraceSpans(span)\n      }\n    })\n\n    this.addSub('ci:cucumber:error', (err) => {\n      if (err) {\n        const span = storage.getStore().span\n        span.setTag('error', err)\n      }\n    })\n  }\n}\n\nmodule.exports = CucumberPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}