{"ast":null,"code":"'use strict';\n\nconst dc = require('diagnostics_channel'); // TODO: use TBD naming convention\n//       or directly use http plugin's channels\n//       when it gets converted to new plugin system\n\n\nmodule.exports = {\n  incomingHttpRequestStart: dc.channel('dd-trace:incomingHttpRequestStart'),\n  incomingHttpRequestEnd: dc.channel('dd-trace:incomingHttpRequestEnd')\n};","map":{"version":3,"names":["dc","require","module","exports","incomingHttpRequestStart","channel","incomingHttpRequestEnd"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/gateway/channels.js"],"sourcesContent":["'use strict'\n\nconst dc = require('diagnostics_channel')\n\n// TODO: use TBD naming convention\n//       or directly use http plugin's channels\n//       when it gets converted to new plugin system\nmodule.exports = {\n  incomingHttpRequestStart: dc.channel('dd-trace:incomingHttpRequestStart'),\n  incomingHttpRequestEnd: dc.channel('dd-trace:incomingHttpRequestEnd')\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,qBAAD,CAAlB,C,CAEA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;EACfC,wBAAwB,EAAEJ,EAAE,CAACK,OAAH,CAAW,mCAAX,CADX;EAEfC,sBAAsB,EAAEN,EAAE,CAACK,OAAH,CAAW,iCAAX;AAFT,CAAjB"},"metadata":{},"sourceType":"script"}