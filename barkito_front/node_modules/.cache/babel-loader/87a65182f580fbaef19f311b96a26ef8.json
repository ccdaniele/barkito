{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst connectionAttributes = new WeakMap();\nconst poolAttributes = new WeakMap();\nconst startChannel = channel('apm:oracledb:query:start');\nconst errorChannel = channel('apm:oracledb:query:error');\nconst finishChannel = channel('apm:oracledb:query:finish');\n\nfunction finish(err) {\n  if (err) {\n    errorChannel.publish(err);\n  }\n\n  finishChannel.publish(undefined);\n}\n\naddHook({\n  name: 'oracledb',\n  versions: ['5']\n}, oracledb => {\n  shimmer.wrap(oracledb.Connection.prototype, 'execute', execute => {\n    return function wrappedExecute(dbQuery) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (!startChannel.hasSubscribers) {\n        return execute.apply(this, arguments);\n      }\n\n      if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        const cb = arguments[arguments.length - 1];\n        const outerAr = new AsyncResource('apm:oracledb:outer-scope');\n\n        arguments[arguments.length - 1] = function wrappedCb(err, result) {\n          finish(err);\n          return outerAr.runInAsyncScope(() => cb.apply(this, arguments));\n        };\n      }\n\n      return new AsyncResource('apm:oracledb:inner-scope').runInAsyncScope(() => {\n        const connAttrs = connectionAttributes.get(this);\n        startChannel.publish({\n          query: dbQuery,\n          connAttrs\n        });\n\n        try {\n          let result = execute.apply(this, arguments);\n\n          if (result && typeof result.then === 'function') {\n            result = result.then(x => {\n              finish();\n              return x;\n            }, e => {\n              finish(e);\n              throw e;\n            });\n          }\n\n          return result;\n        } catch (err) {\n          errorChannel.publish(err);\n          throw err;\n        }\n      });\n    };\n  });\n  shimmer.wrap(oracledb, 'getConnection', getConnection => {\n    return function wrappedGetConnection(connAttrs, callback) {\n      if (callback) {\n        arguments[1] = (err, connection) => {\n          if (connection) {\n            connectionAttributes.set(connection, connAttrs);\n          }\n\n          callback(err, connection);\n        };\n\n        getConnection.apply(this, arguments);\n      } else {\n        return getConnection.apply(this, arguments).then(connection => {\n          connectionAttributes.set(connection, connAttrs);\n          return connection;\n        });\n      }\n    };\n  });\n  shimmer.wrap(oracledb, 'createPool', createPool => {\n    return function wrappedCreatePool(poolAttrs, callback) {\n      if (callback) {\n        arguments[1] = (err, pool) => {\n          if (pool) {\n            poolAttributes.set(pool, poolAttrs);\n          }\n\n          callback(err, pool);\n        };\n\n        createPool.apply(this, arguments);\n      } else {\n        return createPool.apply(this, arguments).then(pool => {\n          poolAttributes.set(pool, poolAttrs);\n          return pool;\n        });\n      }\n    };\n  });\n  shimmer.wrap(oracledb.Pool.prototype, 'getConnection', getConnection => {\n    return function wrappedGetConnection() {\n      let callback;\n\n      if (typeof arguments[arguments.length - 1] === 'function') {\n        callback = arguments[arguments.length - 1];\n      }\n\n      if (callback) {\n        arguments[arguments.length - 1] = (err, connection) => {\n          if (connection) {\n            connectionAttributes.set(connection, poolAttributes.get(this));\n          }\n\n          callback(err, connection);\n        };\n\n        getConnection.apply(this, arguments);\n      } else {\n        return getConnection.apply(this, arguments).then(connection => {\n          connectionAttributes.set(connection, poolAttributes.get(this));\n          return connection;\n        });\n      }\n    };\n  });\n  return oracledb;\n});","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","connectionAttributes","WeakMap","poolAttributes","startChannel","errorChannel","finishChannel","finish","err","publish","undefined","name","versions","oracledb","wrap","Connection","prototype","execute","wrappedExecute","dbQuery","args","hasSubscribers","apply","arguments","length","cb","outerAr","wrappedCb","result","runInAsyncScope","connAttrs","get","query","then","x","e","getConnection","wrappedGetConnection","callback","connection","set","createPool","wrappedCreatePool","poolAttrs","pool","Pool"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/oracledb.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\nconst connectionAttributes = new WeakMap()\nconst poolAttributes = new WeakMap()\n\nconst startChannel = channel('apm:oracledb:query:start')\nconst errorChannel = channel('apm:oracledb:query:error')\nconst finishChannel = channel('apm:oracledb:query:finish')\n\nfunction finish (err) {\n  if (err) {\n    errorChannel.publish(err)\n  }\n  finishChannel.publish(undefined)\n}\n\naddHook({ name: 'oracledb', versions: ['5'] }, oracledb => {\n  shimmer.wrap(oracledb.Connection.prototype, 'execute', execute => {\n    return function wrappedExecute (dbQuery, ...args) {\n      if (!startChannel.hasSubscribers) {\n        return execute.apply(this, arguments)\n      }\n\n      if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        const cb = arguments[arguments.length - 1]\n        const outerAr = new AsyncResource('apm:oracledb:outer-scope')\n        arguments[arguments.length - 1] = function wrappedCb (err, result) {\n          finish(err)\n          return outerAr.runInAsyncScope(() => cb.apply(this, arguments))\n        }\n      }\n\n      return new AsyncResource('apm:oracledb:inner-scope').runInAsyncScope(() => {\n        const connAttrs = connectionAttributes.get(this)\n        startChannel.publish({ query: dbQuery, connAttrs })\n        try {\n          let result = execute.apply(this, arguments)\n\n          if (result && typeof result.then === 'function') {\n            result = result.then(\n              x => {\n                finish()\n                return x\n              },\n              e => {\n                finish(e)\n                throw e\n              }\n            )\n          }\n\n          return result\n        } catch (err) {\n          errorChannel.publish(err)\n          throw err\n        }\n      })\n    }\n  })\n  shimmer.wrap(oracledb, 'getConnection', getConnection => {\n    return function wrappedGetConnection (connAttrs, callback) {\n      if (callback) {\n        arguments[1] = (err, connection) => {\n          if (connection) {\n            connectionAttributes.set(connection, connAttrs)\n          }\n          callback(err, connection)\n        }\n\n        getConnection.apply(this, arguments)\n      } else {\n        return getConnection.apply(this, arguments).then((connection) => {\n          connectionAttributes.set(connection, connAttrs)\n          return connection\n        })\n      }\n    }\n  })\n  shimmer.wrap(oracledb, 'createPool', createPool => {\n    return function wrappedCreatePool (poolAttrs, callback) {\n      if (callback) {\n        arguments[1] = (err, pool) => {\n          if (pool) {\n            poolAttributes.set(pool, poolAttrs)\n          }\n          callback(err, pool)\n        }\n\n        createPool.apply(this, arguments)\n      } else {\n        return createPool.apply(this, arguments).then((pool) => {\n          poolAttributes.set(pool, poolAttrs)\n          return pool\n        })\n      }\n    }\n  })\n  shimmer.wrap(oracledb.Pool.prototype, 'getConnection', getConnection => {\n    return function wrappedGetConnection () {\n      let callback\n      if (typeof arguments[arguments.length - 1] === 'function') {\n        callback = arguments[arguments.length - 1]\n      }\n      if (callback) {\n        arguments[arguments.length - 1] = (err, connection) => {\n          if (connection) {\n            connectionAttributes.set(connection, poolAttributes.get(this))\n          }\n          callback(err, connection)\n        }\n        getConnection.apply(this, arguments)\n      } else {\n        return getConnection.apply(this, arguments).then((connection) => {\n          connectionAttributes.set(connection, poolAttributes.get(this))\n          return connection\n        })\n      }\n    }\n  })\n  return oracledb\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}