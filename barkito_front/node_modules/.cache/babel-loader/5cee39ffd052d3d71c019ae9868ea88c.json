{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst messageSpans = new WeakMap();\n\nclass GoogleCloudPubsubPlugin extends Plugin {\n  static get name() {\n    return 'google-cloud-pubsub';\n  }\n\n  constructor() {\n    super(...arguments);\n    this.addSub(`apm:google-cloud-pubsub:request:start`, _ref => {\n      let {\n        cfg,\n        projectId,\n        messages\n      } = _ref;\n      const store = storage.getStore();\n      const childOf = store ? store.span : store;\n      const topic = getTopic(cfg);\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': [cfg.method, topic].filter(x => x).join(' '),\n        'service.name': this.config.service || `${this.tracer._service}-pubsub`,\n        'span.kind': 'client',\n        'pubsub.method': cfg.method,\n        'gcloud.project_id': projectId,\n        'pubsub.topic': topic\n      };\n\n      if (cfg.method === 'publish') {\n        tags['span.kind'] = 'producer';\n      }\n\n      const span = this.tracer.startSpan('pubsub.request', {\n        childOf,\n        tags\n      });\n      analyticsSampler.sample(span, this.config.measured);\n      this.enter(span, store);\n\n      for (const msg of messages) {\n        if (!msg.attributes) {\n          msg.attributes = {};\n        }\n\n        this.tracer.inject(span, 'text_map', msg.attributes);\n      }\n    });\n    this.addSub(`apm:google-cloud-pubsub:receive:start`, _ref2 => {\n      let {\n        message\n      } = _ref2;\n      const store = storage.getStore();\n      const subscription = message._subscriber._subscription;\n      const topic = subscription.metadata && subscription.metadata.topic;\n      const childOf = this.tracer.extract('text_map', message.attributes);\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': topic,\n        'service.name': this.config.service || this.tracer._service,\n        'gcloud.project_id': subscription.pubsub.projectId,\n        'pubsub.topic': topic,\n        'span.kind': 'consumer',\n        'span.type': 'worker'\n      };\n      const span = this.tracer.startSpan('pubsub.receive', {\n        childOf,\n        tags\n      });\n      analyticsSampler.sample(span, this.config.measured, true);\n      this.enter(span, store);\n      messageSpans.set(message, span);\n    });\n    this.addSub(`apm:google-cloud-pubsub:request:error`, err => {\n      const span = storage.getStore().span;\n      span.setTag('error', err);\n    });\n    this.addSub(`apm:google-cloud-pubsub:request:finish`, () => {\n      const span = storage.getStore().span;\n      span.finish();\n    });\n    this.addSub(`apm:google-cloud-pubsub:receive:error`, _ref3 => {\n      let {\n        err,\n        message\n      } = _ref3;\n      const span = messageSpans.get(message);\n      if (!span) return undefined;\n      span.setTag('error', err);\n    });\n    this.addSub(`apm:google-cloud-pubsub:receive:finish`, _ref4 => {\n      let {\n        message\n      } = _ref4;\n      const span = messageSpans.get(message);\n      if (!span) return;\n      span.setTag('pubsub.ack', message._handled ? 1 : 0);\n      span.finish();\n    });\n  }\n\n}\n\nfunction getTopic(cfg) {\n  if (cfg.reqOpts) {\n    return cfg.reqOpts[cfg.method === 'createTopic' ? 'name' : 'topic'];\n  }\n}\n\nmodule.exports = GoogleCloudPubsubPlugin;","map":{"version":3,"names":["Plugin","require","storage","analyticsSampler","messageSpans","WeakMap","GoogleCloudPubsubPlugin","name","constructor","addSub","cfg","projectId","messages","store","getStore","childOf","span","topic","getTopic","tags","component","method","filter","x","join","config","service","tracer","_service","startSpan","sample","measured","enter","msg","attributes","inject","message","subscription","_subscriber","_subscription","metadata","extract","pubsub","set","err","setTag","finish","get","undefined","_handled","reqOpts","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-google-cloud-pubsub/src/index.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nconst messageSpans = new WeakMap()\nclass GoogleCloudPubsubPlugin extends Plugin {\n  static get name () {\n    return 'google-cloud-pubsub'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSub(`apm:google-cloud-pubsub:request:start`, ({ cfg, projectId, messages }) => {\n      const store = storage.getStore()\n      const childOf = store ? store.span : store\n      const topic = getTopic(cfg)\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': [cfg.method, topic].filter(x => x).join(' '),\n        'service.name': this.config.service || `${this.tracer._service}-pubsub`,\n        'span.kind': 'client',\n        'pubsub.method': cfg.method,\n        'gcloud.project_id': projectId,\n        'pubsub.topic': topic\n      }\n      if (cfg.method === 'publish') {\n        tags['span.kind'] = 'producer'\n      }\n      const span = this.tracer.startSpan('pubsub.request', {\n        childOf,\n        tags\n      })\n\n      analyticsSampler.sample(span, this.config.measured)\n      this.enter(span, store)\n\n      for (const msg of messages) {\n        if (!msg.attributes) {\n          msg.attributes = {}\n        }\n        this.tracer.inject(span, 'text_map', msg.attributes)\n      }\n    })\n\n    this.addSub(`apm:google-cloud-pubsub:receive:start`, ({ message }) => {\n      const store = storage.getStore()\n      const subscription = message._subscriber._subscription\n      const topic = subscription.metadata && subscription.metadata.topic\n      const childOf = this.tracer.extract('text_map', message.attributes)\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': topic,\n        'service.name': this.config.service || this.tracer._service,\n        'gcloud.project_id': subscription.pubsub.projectId,\n        'pubsub.topic': topic,\n        'span.kind': 'consumer',\n        'span.type': 'worker'\n      }\n\n      const span = this.tracer.startSpan('pubsub.receive', {\n        childOf,\n        tags\n      })\n\n      analyticsSampler.sample(span, this.config.measured, true)\n      this.enter(span, store)\n\n      messageSpans.set(message, span)\n    })\n\n    this.addSub(`apm:google-cloud-pubsub:request:error`, err => {\n      const span = storage.getStore().span\n      span.setTag('error', err)\n    })\n\n    this.addSub(`apm:google-cloud-pubsub:request:finish`, () => {\n      const span = storage.getStore().span\n      span.finish()\n    })\n\n    this.addSub(`apm:google-cloud-pubsub:receive:error`, ({ err, message }) => {\n      const span = messageSpans.get(message)\n      if (!span) return undefined\n      span.setTag('error', err)\n    })\n\n    this.addSub(`apm:google-cloud-pubsub:receive:finish`, ({ message }) => {\n      const span = messageSpans.get(message)\n      if (!span) return\n      span.setTag('pubsub.ack', message._handled ? 1 : 0)\n      span.finish()\n    })\n  }\n}\n\nfunction getTopic (cfg) {\n  if (cfg.reqOpts) {\n    return cfg.reqOpts[cfg.method === 'createTopic' ? 'name' : 'topic']\n  }\n}\n\nmodule.exports = GoogleCloudPubsubPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}