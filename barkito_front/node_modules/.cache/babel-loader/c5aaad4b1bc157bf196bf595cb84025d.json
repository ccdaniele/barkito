{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst startCh = channel('apm:ioredis:command:start');\nconst finishCh = channel('apm:ioredis:command:finish');\nconst errorCh = channel('apm:ioredis:command:error');\naddHook({\n  name: 'ioredis',\n  versions: ['>=2']\n}, Redis => {\n  shimmer.wrap(Redis.prototype, 'sendCommand', sendCommand => function (command, stream) {\n    if (!startCh.hasSubscribers) return sendCommand.apply(this, arguments);\n    if (!command || !command.promise) return sendCommand.apply(this, arguments);\n    const options = this.options || {};\n    const connectionName = options.connectionName;\n    const db = options.db;\n    const connectionOptions = {\n      host: options.host,\n      port: options.port\n    };\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        db,\n        command: command.name,\n        args: command.args,\n        connectionOptions,\n        connectionName\n      });\n      const onResolve = asyncResource.bind(() => finish(finishCh, errorCh));\n      const onReject = asyncResource.bind(err => finish(finishCh, errorCh, err));\n      command.promise.then(onResolve, onReject);\n\n      try {\n        return sendCommand.apply(this, arguments);\n      } catch (err) {\n        errorCh.publish(err);\n        throw err;\n      }\n    });\n  });\n  return Redis;\n});\n\nfunction finish(finishCh, errorCh, error) {\n  if (error) {\n    errorCh.publish(error);\n  }\n\n  finishCh.publish();\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","startCh","finishCh","errorCh","name","versions","Redis","wrap","prototype","sendCommand","command","stream","hasSubscribers","apply","arguments","promise","options","connectionName","db","connectionOptions","host","port","asyncResource","runInAsyncScope","publish","args","onResolve","bind","finish","onReject","err","then","error"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/ioredis.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\nconst startCh = channel('apm:ioredis:command:start')\nconst finishCh = channel('apm:ioredis:command:finish')\nconst errorCh = channel('apm:ioredis:command:error')\n\naddHook({ name: 'ioredis', versions: ['>=2'] }, Redis => {\n  shimmer.wrap(Redis.prototype, 'sendCommand', sendCommand => function (command, stream) {\n    if (!startCh.hasSubscribers) return sendCommand.apply(this, arguments)\n\n    if (!command || !command.promise) return sendCommand.apply(this, arguments)\n\n    const options = this.options || {}\n    const connectionName = options.connectionName\n    const db = options.db\n    const connectionOptions = { host: options.host, port: options.port }\n\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({ db, command: command.name, args: command.args, connectionOptions, connectionName })\n\n      const onResolve = asyncResource.bind(() => finish(finishCh, errorCh))\n      const onReject = asyncResource.bind(err => finish(finishCh, errorCh, err))\n\n      command.promise.then(onResolve, onReject)\n\n      try {\n        return sendCommand.apply(this, arguments)\n      } catch (err) {\n        errorCh.publish(err)\n\n        throw err\n      }\n    })\n  })\n  return Redis\n})\n\nfunction finish (finishCh, errorCh, error) {\n  if (error) {\n    errorCh.publish(error)\n  }\n  finishCh.publish()\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EACJA,OADI;EAEJC,OAFI;EAGJC;AAHI,IAIFC,OAAO,CAAC,sBAAD,CAJX;;AAKA,MAAMC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAAvB;;AAEA,MAAME,OAAO,GAAGL,OAAO,CAAC,2BAAD,CAAvB;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,4BAAD,CAAxB;AACA,MAAMO,OAAO,GAAGP,OAAO,CAAC,2BAAD,CAAvB;AAEAC,OAAO,CAAC;EAAEO,IAAI,EAAE,SAAR;EAAmBC,QAAQ,EAAE,CAAC,KAAD;AAA7B,CAAD,EAAyCC,KAAK,IAAI;EACvDN,OAAO,CAACO,IAAR,CAAaD,KAAK,CAACE,SAAnB,EAA8B,aAA9B,EAA6CC,WAAW,IAAI,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IACrF,IAAI,CAACV,OAAO,CAACW,cAAb,EAA6B,OAAOH,WAAW,CAACI,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;IAE7B,IAAI,CAACJ,OAAD,IAAY,CAACA,OAAO,CAACK,OAAzB,EAAkC,OAAON,WAAW,CAACI,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;IAElC,MAAME,OAAO,GAAG,KAAKA,OAAL,IAAgB,EAAhC;IACA,MAAMC,cAAc,GAAGD,OAAO,CAACC,cAA/B;IACA,MAAMC,EAAE,GAAGF,OAAO,CAACE,EAAnB;IACA,MAAMC,iBAAiB,GAAG;MAAEC,IAAI,EAAEJ,OAAO,CAACI,IAAhB;MAAsBC,IAAI,EAAEL,OAAO,CAACK;IAApC,CAA1B;IAEA,MAAMC,aAAa,GAAG,IAAIxB,aAAJ,CAAkB,oBAAlB,CAAtB;IACA,OAAOwB,aAAa,CAACC,eAAd,CAA8B,MAAM;MACzCtB,OAAO,CAACuB,OAAR,CAAgB;QAAEN,EAAF;QAAMR,OAAO,EAAEA,OAAO,CAACN,IAAvB;QAA6BqB,IAAI,EAAEf,OAAO,CAACe,IAA3C;QAAiDN,iBAAjD;QAAoEF;MAApE,CAAhB;MAEA,MAAMS,SAAS,GAAGJ,aAAa,CAACK,IAAd,CAAmB,MAAMC,MAAM,CAAC1B,QAAD,EAAWC,OAAX,CAA/B,CAAlB;MACA,MAAM0B,QAAQ,GAAGP,aAAa,CAACK,IAAd,CAAmBG,GAAG,IAAIF,MAAM,CAAC1B,QAAD,EAAWC,OAAX,EAAoB2B,GAApB,CAAhC,CAAjB;MAEApB,OAAO,CAACK,OAAR,CAAgBgB,IAAhB,CAAqBL,SAArB,EAAgCG,QAAhC;;MAEA,IAAI;QACF,OAAOpB,WAAW,CAACI,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;MACD,CAFD,CAEE,OAAOgB,GAAP,EAAY;QACZ3B,OAAO,CAACqB,OAAR,CAAgBM,GAAhB;QAEA,MAAMA,GAAN;MACD;IACF,CAfM,CAAP;EAgBD,CA3BD;EA4BA,OAAOxB,KAAP;AACD,CA9BM,CAAP;;AAgCA,SAASsB,MAAT,CAAiB1B,QAAjB,EAA2BC,OAA3B,EAAoC6B,KAApC,EAA2C;EACzC,IAAIA,KAAJ,EAAW;IACT7B,OAAO,CAACqB,OAAR,CAAgBQ,KAAhB;EACD;;EACD9B,QAAQ,CAACsB,OAAT;AACD"},"metadata":{},"sourceType":"script"}