{"ast":null,"code":"// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\nconst importHooks = []; // TODO should this be a Set?\n\nconst setters = new WeakMap();\nconst specifiers = new Map();\nconst toHook = [];\nconst proxyHandler = {\n  set(target, name, value) {\n    return setters.get(target)[name](value);\n  },\n\n  defineProperty(target, property, descriptor) {\n    if (!('value' in descriptor)) {\n      throw new Error('Getters/setters are not supported for exports property descriptors.');\n    }\n\n    return setters.get(target)[property](descriptor.value);\n  }\n\n};\n\nfunction register(name, namespace, set, specifier) {\n  specifiers.set(name, specifier);\n  setters.set(namespace, set);\n  const proxy = new Proxy(namespace, proxyHandler);\n  importHooks.forEach(hook => hook(name, proxy));\n  toHook.push([name, proxy]);\n}\n\nexports.register = register;\nexports.importHooks = importHooks;\nexports.specifiers = specifiers;\nexports.toHook = toHook;","map":{"version":3,"names":["importHooks","setters","WeakMap","specifiers","Map","toHook","proxyHandler","set","target","name","value","get","defineProperty","property","descriptor","Error","register","namespace","specifier","proxy","Proxy","forEach","hook","push","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/import-in-the-middle/lib/register.js"],"sourcesContent":["// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\n\nconst importHooks = [] // TODO should this be a Set?\nconst setters = new WeakMap()\nconst specifiers = new Map()\nconst toHook = []\n\nconst proxyHandler = {\n  set(target, name, value) {\n    return setters.get(target)[name](value)\n  },\n\n  defineProperty(target, property, descriptor) {\n    if ((!('value' in descriptor))) {\n      throw new Error('Getters/setters are not supported for exports property descriptors.')\n    }\n\n    return setters.get(target)[property](descriptor.value)\n  }\n}\n\nfunction register(name, namespace, set, specifier) {\n  specifiers.set(name, specifier)\n  setters.set(namespace, set)\n  const proxy = new Proxy(namespace, proxyHandler)\n  importHooks.forEach(hook => hook(name, proxy))\n  toHook.push([name, proxy])\n}\n\nexports.register = register\nexports.importHooks = importHooks\nexports.specifiers = specifiers\nexports.toHook = toHook\n"],"mappings":"AAAA;AACA;AACA;AAGA,MAAMA,WAAW,GAAG,EAApB,C,CAAuB;;AACvB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACA,MAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AACA,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,YAAY,GAAG;EACnBC,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsB;IACvB,OAAOT,OAAO,CAACU,GAAR,CAAYH,MAAZ,EAAoBC,IAApB,EAA0BC,KAA1B,CAAP;EACD,CAHkB;;EAKnBE,cAAc,CAACJ,MAAD,EAASK,QAAT,EAAmBC,UAAnB,EAA+B;IAC3C,IAAK,EAAE,WAAWA,UAAb,CAAL,EAAgC;MAC9B,MAAM,IAAIC,KAAJ,CAAU,qEAAV,CAAN;IACD;;IAED,OAAOd,OAAO,CAACU,GAAR,CAAYH,MAAZ,EAAoBK,QAApB,EAA8BC,UAAU,CAACJ,KAAzC,CAAP;EACD;;AAXkB,CAArB;;AAcA,SAASM,QAAT,CAAkBP,IAAlB,EAAwBQ,SAAxB,EAAmCV,GAAnC,EAAwCW,SAAxC,EAAmD;EACjDf,UAAU,CAACI,GAAX,CAAeE,IAAf,EAAqBS,SAArB;EACAjB,OAAO,CAACM,GAAR,CAAYU,SAAZ,EAAuBV,GAAvB;EACA,MAAMY,KAAK,GAAG,IAAIC,KAAJ,CAAUH,SAAV,EAAqBX,YAArB,CAAd;EACAN,WAAW,CAACqB,OAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACb,IAAD,EAAOU,KAAP,CAAhC;EACAd,MAAM,CAACkB,IAAP,CAAY,CAACd,IAAD,EAAOU,KAAP,CAAZ;AACD;;AAEDK,OAAO,CAACR,QAAR,GAAmBA,QAAnB;AACAQ,OAAO,CAACxB,WAAR,GAAsBA,WAAtB;AACAwB,OAAO,CAACrB,UAAR,GAAqBA,UAArB;AACAqB,OAAO,CAACnB,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}