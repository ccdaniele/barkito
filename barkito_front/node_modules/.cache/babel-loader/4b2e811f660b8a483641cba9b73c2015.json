{"ast":null,"code":"'use strict';\n\nconst retry = require('retry');\n\nconst {\n  request\n} = require('http'); // TODO: avoid using dd-trace internals. Make this a separate module?\n\n\nconst docker = require('../../exporters/common/docker');\n\nconst FormData = require('../../exporters/common/form-data');\n\nconst version = require('../../../../../package.json').version;\n\nconst containerId = docker.id();\n\nfunction sendRequest(options, form, callback) {\n  const req = request(options, res => {\n    if (res.statusCode >= 400) {\n      const error = new Error(`HTTP Error ${res.statusCode}`);\n      error.status = res.statusCode;\n      callback(error);\n    } else {\n      callback(null, res);\n    }\n  });\n  req.on('error', callback);\n  if (form) form.pipe(req);\n}\n\nfunction getBody(stream, callback) {\n  const chunks = [];\n  stream.on('error', callback);\n  stream.on('data', chunk => chunks.push(chunk));\n  stream.on('end', () => {\n    callback(null, Buffer.concat(chunks));\n  });\n}\n\nfunction computeRetries(uploadTimeout) {\n  let tries = 0;\n\n  while (tries < 2 || uploadTimeout > 1000) {\n    tries++;\n    uploadTimeout /= 2;\n  }\n\n  return [tries, Math.floor(uploadTimeout)];\n}\n\nclass AgentExporter {\n  constructor() {\n    let {\n      url,\n      logger,\n      uploadTimeout\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._url = url;\n    this._logger = logger;\n    const [backoffTries, backoffTime] = computeRetries(uploadTimeout);\n    this._backoffTime = backoffTime;\n    this._backoffTries = backoffTries;\n  }\n\n  export(_ref) {\n    let {\n      profiles,\n      start,\n      end,\n      tags\n    } = _ref;\n    const types = Object.keys(profiles);\n    const fields = [['recording-start', start.toISOString()], ['recording-end', end.toISOString()], ['language', 'javascript'], ['runtime', 'nodejs'], ['runtime_version', process.version], ['profiler_version', version], ['format', 'pprof'], ['tags[]', 'language:javascript'], ['tags[]', 'runtime:nodejs'], ['tags[]', `runtime_version:${process.version}`], ['tags[]', `profiler_version:${version}`], ['tags[]', 'format:pprof'], ...Object.entries(tags).map(_ref2 => {\n      let [key, value] = _ref2;\n      return ['tags[]', `${key}:${value}`];\n    })];\n\n    this._logger.debug(() => {\n      const body = fields.map(_ref3 => {\n        let [key, value] = _ref3;\n        return `  ${key}: ${value}`;\n      }).join('\\n');\n      return `Building agent export report: ${'\\n' + body}`;\n    });\n\n    for (let index = 0; index < types.length; index++) {\n      const type = types[index];\n      const buffer = profiles[type];\n\n      this._logger.debug(() => {\n        const bytes = buffer.toString('hex').match(/../g).join(' ');\n        return `Adding ${type} profile to agent export: ` + bytes;\n      });\n\n      fields.push([`types[${index}]`, type]);\n      fields.push([`data[${index}]`, buffer, {\n        filename: `${type}.pb.gz`,\n        contentType: 'application/octet-stream',\n        knownLength: buffer.length\n      }]);\n    }\n\n    return new Promise((resolve, reject) => {\n      const operation = retry.operation({\n        randomize: true,\n        minTimeout: this._backoffTime,\n        retries: this._backoffTries\n      });\n      operation.attempt(attempt => {\n        const form = new FormData();\n\n        for (const [key, value, options] of fields) {\n          form.append(key, value, options);\n        }\n\n        const options = {\n          method: 'POST',\n          path: '/profiling/v1/input',\n          headers: form.getHeaders(),\n          timeout: this._backoffTime * Math.pow(2, attempt)\n        };\n\n        if (containerId) {\n          options.headers['Datadog-Container-ID'] = containerId;\n        }\n\n        if (this._url.protocol === 'unix:') {\n          options.socketPath = this._url.pathname;\n        } else {\n          options.protocol = this._url.protocol;\n          options.hostname = this._url.hostname;\n          options.port = this._url.port;\n        }\n\n        this._logger.debug(() => {\n          return `Submitting profiler agent report attempt #${attempt} to: ${JSON.stringify(options)}`;\n        });\n\n        sendRequest(options, form, (err, response) => {\n          if (operation.retry(err)) {\n            this._logger.error(`Error from the agent: ${err.message}`);\n\n            return;\n          } else if (err) {\n            reject(new Error('Profiler agent export back-off period expired'));\n            return;\n          }\n\n          getBody(response, (err, body) => {\n            if (err) {\n              this._logger.error(`Error reading agent response: ${err.message}`);\n            } else {\n              this._logger.debug(() => {\n                const bytes = (body.toString('hex').match(/../g) || []).join(' ');\n                return `Agent export response: ${bytes}`;\n              });\n            }\n          });\n          resolve();\n        });\n      });\n    });\n  }\n\n}\n\nmodule.exports = {\n  AgentExporter,\n  computeRetries\n};","map":{"version":3,"names":["retry","require","request","docker","FormData","version","containerId","id","sendRequest","options","form","callback","req","res","statusCode","error","Error","status","on","pipe","getBody","stream","chunks","chunk","push","Buffer","concat","computeRetries","uploadTimeout","tries","Math","floor","AgentExporter","constructor","url","logger","_url","_logger","backoffTries","backoffTime","_backoffTime","_backoffTries","export","profiles","start","end","tags","types","Object","keys","fields","toISOString","process","entries","map","key","value","debug","body","join","index","length","type","buffer","bytes","toString","match","filename","contentType","knownLength","Promise","resolve","reject","operation","randomize","minTimeout","retries","attempt","append","method","path","headers","getHeaders","timeout","pow","protocol","socketPath","pathname","hostname","port","JSON","stringify","err","response","message","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/profiling/exporters/agent.js"],"sourcesContent":["'use strict'\n\nconst retry = require('retry')\nconst { request } = require('http')\n\n// TODO: avoid using dd-trace internals. Make this a separate module?\nconst docker = require('../../exporters/common/docker')\nconst FormData = require('../../exporters/common/form-data')\nconst version = require('../../../../../package.json').version\n\nconst containerId = docker.id()\n\nfunction sendRequest (options, form, callback) {\n  const req = request(options, res => {\n    if (res.statusCode >= 400) {\n      const error = new Error(`HTTP Error ${res.statusCode}`)\n      error.status = res.statusCode\n      callback(error)\n    } else {\n      callback(null, res)\n    }\n  })\n  req.on('error', callback)\n  if (form) form.pipe(req)\n}\n\nfunction getBody (stream, callback) {\n  const chunks = []\n  stream.on('error', callback)\n  stream.on('data', chunk => chunks.push(chunk))\n  stream.on('end', () => {\n    callback(null, Buffer.concat(chunks))\n  })\n}\n\nfunction computeRetries (uploadTimeout) {\n  let tries = 0\n  while (tries < 2 || uploadTimeout > 1000) {\n    tries++\n    uploadTimeout /= 2\n  }\n  return [tries, Math.floor(uploadTimeout)]\n}\n\nclass AgentExporter {\n  constructor ({ url, logger, uploadTimeout } = {}) {\n    this._url = url\n    this._logger = logger\n\n    const [backoffTries, backoffTime] = computeRetries(uploadTimeout)\n\n    this._backoffTime = backoffTime\n    this._backoffTries = backoffTries\n  }\n\n  export ({ profiles, start, end, tags }) {\n    const types = Object.keys(profiles)\n\n    const fields = [\n      ['recording-start', start.toISOString()],\n      ['recording-end', end.toISOString()],\n      ['language', 'javascript'],\n      ['runtime', 'nodejs'],\n      ['runtime_version', process.version],\n      ['profiler_version', version],\n      ['format', 'pprof'],\n\n      ['tags[]', 'language:javascript'],\n      ['tags[]', 'runtime:nodejs'],\n      ['tags[]', `runtime_version:${process.version}`],\n      ['tags[]', `profiler_version:${version}`],\n      ['tags[]', 'format:pprof'],\n      ...Object.entries(tags).map(([key, value]) => ['tags[]', `${key}:${value}`])\n    ]\n\n    this._logger.debug(() => {\n      const body = fields.map(([key, value]) => `  ${key}: ${value}`).join('\\n')\n      return `Building agent export report: ${'\\n' + body}`\n    })\n\n    for (let index = 0; index < types.length; index++) {\n      const type = types[index]\n      const buffer = profiles[type]\n\n      this._logger.debug(() => {\n        const bytes = buffer.toString('hex').match(/../g).join(' ')\n        return `Adding ${type} profile to agent export: ` + bytes\n      })\n\n      fields.push([`types[${index}]`, type])\n      fields.push([`data[${index}]`, buffer, {\n        filename: `${type}.pb.gz`,\n        contentType: 'application/octet-stream',\n        knownLength: buffer.length\n      }])\n    }\n\n    return new Promise((resolve, reject) => {\n      const operation = retry.operation({\n        randomize: true,\n        minTimeout: this._backoffTime,\n        retries: this._backoffTries\n      })\n\n      operation.attempt((attempt) => {\n        const form = new FormData()\n\n        for (const [key, value, options] of fields) {\n          form.append(key, value, options)\n        }\n\n        const options = {\n          method: 'POST',\n          path: '/profiling/v1/input',\n          headers: form.getHeaders(),\n          timeout: this._backoffTime * Math.pow(2, attempt)\n        }\n\n        if (containerId) {\n          options.headers['Datadog-Container-ID'] = containerId\n        }\n\n        if (this._url.protocol === 'unix:') {\n          options.socketPath = this._url.pathname\n        } else {\n          options.protocol = this._url.protocol\n          options.hostname = this._url.hostname\n          options.port = this._url.port\n        }\n\n        this._logger.debug(() => {\n          return `Submitting profiler agent report attempt #${attempt} to: ${JSON.stringify(options)}`\n        })\n\n        sendRequest(options, form, (err, response) => {\n          if (operation.retry(err)) {\n            this._logger.error(`Error from the agent: ${err.message}`)\n            return\n          } else if (err) {\n            reject(new Error('Profiler agent export back-off period expired'))\n            return\n          }\n\n          getBody(response, (err, body) => {\n            if (err) {\n              this._logger.error(`Error reading agent response: ${err.message}`)\n            } else {\n              this._logger.debug(() => {\n                const bytes = (body.toString('hex').match(/../g) || []).join(' ')\n                return `Agent export response: ${bytes}`\n              })\n            }\n          })\n\n          resolve()\n        })\n      })\n    })\n  }\n}\n\nmodule.exports = { AgentExporter, computeRetries }\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;EAAEC;AAAF,IAAcD,OAAO,CAAC,MAAD,CAA3B,C,CAEA;;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,+BAAD,CAAtB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,kCAAD,CAAxB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,6BAAD,CAAP,CAAuCI,OAAvD;;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,EAAP,EAApB;;AAEA,SAASC,WAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+C;EAC7C,MAAMC,GAAG,GAAGV,OAAO,CAACO,OAAD,EAAUI,GAAG,IAAI;IAClC,IAAIA,GAAG,CAACC,UAAJ,IAAkB,GAAtB,EAA2B;MACzB,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAW,cAAaH,GAAG,CAACC,UAAW,EAAvC,CAAd;MACAC,KAAK,CAACE,MAAN,GAAeJ,GAAG,CAACC,UAAnB;MACAH,QAAQ,CAACI,KAAD,CAAR;IACD,CAJD,MAIO;MACLJ,QAAQ,CAAC,IAAD,EAAOE,GAAP,CAAR;IACD;EACF,CARkB,CAAnB;EASAD,GAAG,CAACM,EAAJ,CAAO,OAAP,EAAgBP,QAAhB;EACA,IAAID,IAAJ,EAAUA,IAAI,CAACS,IAAL,CAAUP,GAAV;AACX;;AAED,SAASQ,OAAT,CAAkBC,MAAlB,EAA0BV,QAA1B,EAAoC;EAClC,MAAMW,MAAM,GAAG,EAAf;EACAD,MAAM,CAACH,EAAP,CAAU,OAAV,EAAmBP,QAAnB;EACAU,MAAM,CAACH,EAAP,CAAU,MAAV,EAAkBK,KAAK,IAAID,MAAM,CAACE,IAAP,CAAYD,KAAZ,CAA3B;EACAF,MAAM,CAACH,EAAP,CAAU,KAAV,EAAiB,MAAM;IACrBP,QAAQ,CAAC,IAAD,EAAOc,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAP,CAAR;EACD,CAFD;AAGD;;AAED,SAASK,cAAT,CAAyBC,aAAzB,EAAwC;EACtC,IAAIC,KAAK,GAAG,CAAZ;;EACA,OAAOA,KAAK,GAAG,CAAR,IAAaD,aAAa,GAAG,IAApC,EAA0C;IACxCC,KAAK;IACLD,aAAa,IAAI,CAAjB;EACD;;EACD,OAAO,CAACC,KAAD,EAAQC,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAR,CAAP;AACD;;AAED,MAAMI,aAAN,CAAoB;EAClBC,WAAW,GAAuC;IAAA,IAArC;MAAEC,GAAF;MAAOC,MAAP;MAAeP;IAAf,CAAqC,uEAAJ,EAAI;IAChD,KAAKQ,IAAL,GAAYF,GAAZ;IACA,KAAKG,OAAL,GAAeF,MAAf;IAEA,MAAM,CAACG,YAAD,EAAeC,WAAf,IAA8BZ,cAAc,CAACC,aAAD,CAAlD;IAEA,KAAKY,YAAL,GAAoBD,WAApB;IACA,KAAKE,aAAL,GAAqBH,YAArB;EACD;;EAEDI,MAAM,OAAkC;IAAA,IAAhC;MAAEC,QAAF;MAAYC,KAAZ;MAAmBC,GAAnB;MAAwBC;IAAxB,CAAgC;IACtC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAZ,CAAd;IAEA,MAAMO,MAAM,GAAG,CACb,CAAC,iBAAD,EAAoBN,KAAK,CAACO,WAAN,EAApB,CADa,EAEb,CAAC,eAAD,EAAkBN,GAAG,CAACM,WAAJ,EAAlB,CAFa,EAGb,CAAC,UAAD,EAAa,YAAb,CAHa,EAIb,CAAC,SAAD,EAAY,QAAZ,CAJa,EAKb,CAAC,iBAAD,EAAoBC,OAAO,CAAC/C,OAA5B,CALa,EAMb,CAAC,kBAAD,EAAqBA,OAArB,CANa,EAOb,CAAC,QAAD,EAAW,OAAX,CAPa,EASb,CAAC,QAAD,EAAW,qBAAX,CATa,EAUb,CAAC,QAAD,EAAW,gBAAX,CAVa,EAWb,CAAC,QAAD,EAAY,mBAAkB+C,OAAO,CAAC/C,OAAQ,EAA9C,CAXa,EAYb,CAAC,QAAD,EAAY,oBAAmBA,OAAQ,EAAvC,CAZa,EAab,CAAC,QAAD,EAAW,cAAX,CAba,EAcb,GAAG2C,MAAM,CAACK,OAAP,CAAeP,IAAf,EAAqBQ,GAArB,CAAyB;MAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;MAAA,OAAkB,CAAC,QAAD,EAAY,GAAED,GAAI,IAAGC,KAAM,EAA3B,CAAlB;IAAA,CAAzB,CAdU,CAAf;;IAiBA,KAAKnB,OAAL,CAAaoB,KAAb,CAAmB,MAAM;MACvB,MAAMC,IAAI,GAAGR,MAAM,CAACI,GAAP,CAAW;QAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;QAAA,OAAmB,KAAID,GAAI,KAAIC,KAAM,EAArC;MAAA,CAAX,EAAmDG,IAAnD,CAAwD,IAAxD,CAAb;MACA,OAAQ,iCAAgC,OAAOD,IAAK,EAApD;IACD,CAHD;;IAKA,KAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGb,KAAK,CAACc,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;MACjD,MAAME,IAAI,GAAGf,KAAK,CAACa,KAAD,CAAlB;MACA,MAAMG,MAAM,GAAGpB,QAAQ,CAACmB,IAAD,CAAvB;;MAEA,KAAKzB,OAAL,CAAaoB,KAAb,CAAmB,MAAM;QACvB,MAAMO,KAAK,GAAGD,MAAM,CAACE,QAAP,CAAgB,KAAhB,EAAuBC,KAAvB,CAA6B,KAA7B,EAAoCP,IAApC,CAAyC,GAAzC,CAAd;QACA,OAAQ,UAASG,IAAK,4BAAf,GAA6CE,KAApD;MACD,CAHD;;MAKAd,MAAM,CAAC1B,IAAP,CAAY,CAAE,SAAQoC,KAAM,GAAhB,EAAoBE,IAApB,CAAZ;MACAZ,MAAM,CAAC1B,IAAP,CAAY,CAAE,QAAOoC,KAAM,GAAf,EAAmBG,MAAnB,EAA2B;QACrCI,QAAQ,EAAG,GAAEL,IAAK,QADmB;QAErCM,WAAW,EAAE,0BAFwB;QAGrCC,WAAW,EAAEN,MAAM,CAACF;MAHiB,CAA3B,CAAZ;IAKD;;IAED,OAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMC,SAAS,GAAGzE,KAAK,CAACyE,SAAN,CAAgB;QAChCC,SAAS,EAAE,IADqB;QAEhCC,UAAU,EAAE,KAAKnC,YAFe;QAGhCoC,OAAO,EAAE,KAAKnC;MAHkB,CAAhB,CAAlB;MAMAgC,SAAS,CAACI,OAAV,CAAmBA,OAAD,IAAa;QAC7B,MAAMnE,IAAI,GAAG,IAAIN,QAAJ,EAAb;;QAEA,KAAK,MAAM,CAACmD,GAAD,EAAMC,KAAN,EAAa/C,OAAb,CAAX,IAAoCyC,MAApC,EAA4C;UAC1CxC,IAAI,CAACoE,MAAL,CAAYvB,GAAZ,EAAiBC,KAAjB,EAAwB/C,OAAxB;QACD;;QAED,MAAMA,OAAO,GAAG;UACdsE,MAAM,EAAE,MADM;UAEdC,IAAI,EAAE,qBAFQ;UAGdC,OAAO,EAAEvE,IAAI,CAACwE,UAAL,EAHK;UAIdC,OAAO,EAAE,KAAK3C,YAAL,GAAoBV,IAAI,CAACsD,GAAL,CAAS,CAAT,EAAYP,OAAZ;QAJf,CAAhB;;QAOA,IAAIvE,WAAJ,EAAiB;UACfG,OAAO,CAACwE,OAAR,CAAgB,sBAAhB,IAA0C3E,WAA1C;QACD;;QAED,IAAI,KAAK8B,IAAL,CAAUiD,QAAV,KAAuB,OAA3B,EAAoC;UAClC5E,OAAO,CAAC6E,UAAR,GAAqB,KAAKlD,IAAL,CAAUmD,QAA/B;QACD,CAFD,MAEO;UACL9E,OAAO,CAAC4E,QAAR,GAAmB,KAAKjD,IAAL,CAAUiD,QAA7B;UACA5E,OAAO,CAAC+E,QAAR,GAAmB,KAAKpD,IAAL,CAAUoD,QAA7B;UACA/E,OAAO,CAACgF,IAAR,GAAe,KAAKrD,IAAL,CAAUqD,IAAzB;QACD;;QAED,KAAKpD,OAAL,CAAaoB,KAAb,CAAmB,MAAM;UACvB,OAAQ,6CAA4CoB,OAAQ,QAAOa,IAAI,CAACC,SAAL,CAAelF,OAAf,CAAwB,EAA3F;QACD,CAFD;;QAIAD,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB,CAACkF,GAAD,EAAMC,QAAN,KAAmB;UAC5C,IAAIpB,SAAS,CAACzE,KAAV,CAAgB4F,GAAhB,CAAJ,EAA0B;YACxB,KAAKvD,OAAL,CAAatB,KAAb,CAAoB,yBAAwB6E,GAAG,CAACE,OAAQ,EAAxD;;YACA;UACD,CAHD,MAGO,IAAIF,GAAJ,EAAS;YACdpB,MAAM,CAAC,IAAIxD,KAAJ,CAAU,+CAAV,CAAD,CAAN;YACA;UACD;;UAEDI,OAAO,CAACyE,QAAD,EAAW,CAACD,GAAD,EAAMlC,IAAN,KAAe;YAC/B,IAAIkC,GAAJ,EAAS;cACP,KAAKvD,OAAL,CAAatB,KAAb,CAAoB,iCAAgC6E,GAAG,CAACE,OAAQ,EAAhE;YACD,CAFD,MAEO;cACL,KAAKzD,OAAL,CAAaoB,KAAb,CAAmB,MAAM;gBACvB,MAAMO,KAAK,GAAG,CAACN,IAAI,CAACO,QAAL,CAAc,KAAd,EAAqBC,KAArB,CAA2B,KAA3B,KAAqC,EAAtC,EAA0CP,IAA1C,CAA+C,GAA/C,CAAd;gBACA,OAAQ,0BAAyBK,KAAM,EAAvC;cACD,CAHD;YAID;UACF,CATM,CAAP;UAWAO,OAAO;QACR,CArBU,CAAX;MAsBD,CApDD;IAqDD,CA5DM,CAAP;EA6DD;;AAlHiB;;AAqHpBwB,MAAM,CAACC,OAAP,GAAiB;EAAEhE,aAAF;EAAiBL;AAAjB,CAAjB"},"metadata":{},"sourceType":"script"}