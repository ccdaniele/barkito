{"ast":null,"code":"'use strict';\n\nclass NativeWallProfiler {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.type = 'wall';\n    this._samplingInterval = options.samplingInterval || 1e6 / 99; // 99hz\n\n    this._mapper = undefined;\n    this._pprof = undefined;\n  }\n\n  start() {\n    let {\n      mapper\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._mapper = mapper;\n    this._pprof = require('@datadog/pprof'); // pprof otherwise crashes in worker threads\n\n    if (!process._startProfilerIdleNotifier) {\n      process._startProfilerIdleNotifier = () => {};\n    }\n\n    if (!process._stopProfilerIdleNotifier) {\n      process._stopProfilerIdleNotifier = () => {};\n    }\n\n    this._record();\n  }\n\n  profile() {\n    if (!this._stop) return;\n    return this._stop(true);\n  }\n\n  encode(profile) {\n    return this._pprof.encode(profile);\n  }\n\n  stop() {\n    if (!this._stop) return;\n\n    this._stop();\n  }\n\n  _record() {\n    this._stop = this._pprof.time.start(this._samplingInterval, null, this._mapper, false);\n  }\n\n}\n\nmodule.exports = NativeWallProfiler;","map":{"version":3,"names":["NativeWallProfiler","constructor","options","type","_samplingInterval","samplingInterval","_mapper","undefined","_pprof","start","mapper","require","process","_startProfilerIdleNotifier","_stopProfilerIdleNotifier","_record","profile","_stop","encode","stop","time","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/profiling/profilers/wall.js"],"sourcesContent":["'use strict'\n\nclass NativeWallProfiler {\n  constructor (options = {}) {\n    this.type = 'wall'\n    this._samplingInterval = options.samplingInterval || 1e6 / 99 // 99hz\n    this._mapper = undefined\n    this._pprof = undefined\n  }\n\n  start ({ mapper } = {}) {\n    this._mapper = mapper\n    this._pprof = require('@datadog/pprof')\n\n    // pprof otherwise crashes in worker threads\n    if (!process._startProfilerIdleNotifier) {\n      process._startProfilerIdleNotifier = () => {}\n    }\n    if (!process._stopProfilerIdleNotifier) {\n      process._stopProfilerIdleNotifier = () => {}\n    }\n\n    this._record()\n  }\n\n  profile () {\n    if (!this._stop) return\n    return this._stop(true)\n  }\n\n  encode (profile) {\n    return this._pprof.encode(profile)\n  }\n\n  stop () {\n    if (!this._stop) return\n    this._stop()\n  }\n\n  _record () {\n    this._stop = this._pprof.time.start(this._samplingInterval, null,\n      this._mapper, false)\n  }\n}\n\nmodule.exports = NativeWallProfiler\n"],"mappings":"AAAA;;AAEA,MAAMA,kBAAN,CAAyB;EACvBC,WAAW,GAAgB;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACzB,KAAKC,IAAL,GAAY,MAAZ;IACA,KAAKC,iBAAL,GAAyBF,OAAO,CAACG,gBAAR,IAA4B,MAAM,EAA3D,CAFyB,CAEqC;;IAC9D,KAAKC,OAAL,GAAeC,SAAf;IACA,KAAKC,MAAL,GAAcD,SAAd;EACD;;EAEDE,KAAK,GAAmB;IAAA,IAAjB;MAAEC;IAAF,CAAiB,uEAAJ,EAAI;IACtB,KAAKJ,OAAL,GAAeI,MAAf;IACA,KAAKF,MAAL,GAAcG,OAAO,CAAC,gBAAD,CAArB,CAFsB,CAItB;;IACA,IAAI,CAACC,OAAO,CAACC,0BAAb,EAAyC;MACvCD,OAAO,CAACC,0BAAR,GAAqC,MAAM,CAAE,CAA7C;IACD;;IACD,IAAI,CAACD,OAAO,CAACE,yBAAb,EAAwC;MACtCF,OAAO,CAACE,yBAAR,GAAoC,MAAM,CAAE,CAA5C;IACD;;IAED,KAAKC,OAAL;EACD;;EAEDC,OAAO,GAAI;IACT,IAAI,CAAC,KAAKC,KAAV,EAAiB;IACjB,OAAO,KAAKA,KAAL,CAAW,IAAX,CAAP;EACD;;EAEDC,MAAM,CAAEF,OAAF,EAAW;IACf,OAAO,KAAKR,MAAL,CAAYU,MAAZ,CAAmBF,OAAnB,CAAP;EACD;;EAEDG,IAAI,GAAI;IACN,IAAI,CAAC,KAAKF,KAAV,EAAiB;;IACjB,KAAKA,KAAL;EACD;;EAEDF,OAAO,GAAI;IACT,KAAKE,KAAL,GAAa,KAAKT,MAAL,CAAYY,IAAZ,CAAiBX,KAAjB,CAAuB,KAAKL,iBAA5B,EAA+C,IAA/C,EACX,KAAKE,OADM,EACG,KADH,CAAb;EAED;;AAxCsB;;AA2CzBe,MAAM,CAACC,OAAP,GAAiBtB,kBAAjB"},"metadata":{},"sourceType":"script"}