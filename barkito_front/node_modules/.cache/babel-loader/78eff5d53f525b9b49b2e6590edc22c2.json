{"ast":null,"code":"'use strict';\n\nconst {\n  LOG\n} = require('../../../../ext/formats');\n\nconst Plugin = require('./plugin');\n\nconst {\n  storage\n} = require('../../../datadog-core');\n\nconst hasOwn = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nfunction messageProxy(message, holder) {\n  return new Proxy(message, {\n    get(target, p, receiver) {\n      if (p === Symbol.toStringTag) {\n        return Object.prototype.toString.call(target).slice(8, -1);\n      }\n\n      if (shouldOverride(target, p)) {\n        return holder.dd;\n      }\n\n      return Reflect.get(target, p, receiver);\n    },\n\n    ownKeys(target) {\n      const ownKeys = Reflect.ownKeys(target);\n      return hasOwn(target, 'dd') || !Reflect.isExtensible(target) ? ownKeys : ['dd', ...ownKeys];\n    },\n\n    getOwnPropertyDescriptor(target, p) {\n      return Reflect.getOwnPropertyDescriptor(shouldOverride(target, p) ? holder : target, p);\n    }\n\n  });\n}\n\nfunction shouldOverride(target, p) {\n  return p === 'dd' && !Reflect.has(target, p) && Reflect.isExtensible(target);\n}\n\nmodule.exports = class LogPlugin extends Plugin {\n  constructor() {\n    super(...arguments);\n    this.addSub(`apm:${this.constructor.name}:log`, arg => {\n      const store = storage.getStore();\n      const span = store && store.span;\n      if (!span) return;\n      const holder = {};\n      this.tracer.inject(span, LOG, holder);\n      arg.message = messageProxy(arg.message, holder);\n    });\n  }\n\n  configure(config) {\n    return super.configure({ ...config,\n      enabled: config.enabled && config.logInjection\n    });\n  }\n\n};","map":{"version":3,"names":["LOG","require","Plugin","storage","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","messageProxy","message","holder","Proxy","get","target","p","receiver","Symbol","toStringTag","toString","slice","shouldOverride","dd","Reflect","ownKeys","isExtensible","getOwnPropertyDescriptor","has","module","exports","LogPlugin","constructor","addSub","name","arg","store","getStore","span","tracer","inject","configure","config","enabled","logInjection"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/plugins/log_plugin.js"],"sourcesContent":["'use strict'\n\nconst { LOG } = require('../../../../ext/formats')\nconst Plugin = require('./plugin')\nconst { storage } = require('../../../datadog-core')\n\nconst hasOwn = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\n\nfunction messageProxy (message, holder) {\n  return new Proxy(message, {\n    get (target, p, receiver) {\n      if (p === Symbol.toStringTag) {\n        return Object.prototype.toString.call(target).slice(8, -1)\n      }\n\n      if (shouldOverride(target, p)) {\n        return holder.dd\n      }\n\n      return Reflect.get(target, p, receiver)\n    },\n    ownKeys (target) {\n      const ownKeys = Reflect.ownKeys(target)\n      return hasOwn(target, 'dd') || !Reflect.isExtensible(target)\n        ? ownKeys\n        : ['dd', ...ownKeys]\n    },\n    getOwnPropertyDescriptor (target, p) {\n      return Reflect.getOwnPropertyDescriptor(shouldOverride(target, p) ? holder : target, p)\n    }\n  })\n}\n\nfunction shouldOverride (target, p) {\n  return p === 'dd' && !Reflect.has(target, p) && Reflect.isExtensible(target)\n}\n\nmodule.exports = class LogPlugin extends Plugin {\n  constructor (...args) {\n    super(...args)\n\n    this.addSub(`apm:${this.constructor.name}:log`, (arg) => {\n      const store = storage.getStore()\n      const span = store && store.span\n\n      if (!span) return\n\n      const holder = {}\n      this.tracer.inject(span, LOG, holder)\n      arg.message = messageProxy(arg.message, holder)\n    })\n  }\n\n  configure (config) {\n    return super.configure({\n      ...config,\n      enabled: config.enabled && config.logInjection\n    })\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAUC,OAAO,CAAC,yBAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;EAAEE;AAAF,IAAcF,OAAO,CAAC,uBAAD,CAA3B;;AAEA,MAAMG,MAAM,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAeC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,IAA1C,CAA9B;;AAEA,SAASK,YAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EACtC,OAAO,IAAIC,KAAJ,CAAUF,OAAV,EAAmB;IACxBG,GAAG,CAAEC,MAAF,EAAUC,CAAV,EAAaC,QAAb,EAAuB;MACxB,IAAID,CAAC,KAAKE,MAAM,CAACC,WAAjB,EAA8B;QAC5B,OAAOb,MAAM,CAACC,SAAP,CAAiBa,QAAjB,CAA0BX,IAA1B,CAA+BM,MAA/B,EAAuCM,KAAvC,CAA6C,CAA7C,EAAgD,CAAC,CAAjD,CAAP;MACD;;MAED,IAAIC,cAAc,CAACP,MAAD,EAASC,CAAT,CAAlB,EAA+B;QAC7B,OAAOJ,MAAM,CAACW,EAAd;MACD;;MAED,OAAOC,OAAO,CAACV,GAAR,CAAYC,MAAZ,EAAoBC,CAApB,EAAuBC,QAAvB,CAAP;IACD,CAXuB;;IAYxBQ,OAAO,CAAEV,MAAF,EAAU;MACf,MAAMU,OAAO,GAAGD,OAAO,CAACC,OAAR,CAAgBV,MAAhB,CAAhB;MACA,OAAOZ,MAAM,CAACY,MAAD,EAAS,IAAT,CAAN,IAAwB,CAACS,OAAO,CAACE,YAAR,CAAqBX,MAArB,CAAzB,GACHU,OADG,GAEH,CAAC,IAAD,EAAO,GAAGA,OAAV,CAFJ;IAGD,CAjBuB;;IAkBxBE,wBAAwB,CAAEZ,MAAF,EAAUC,CAAV,EAAa;MACnC,OAAOQ,OAAO,CAACG,wBAAR,CAAiCL,cAAc,CAACP,MAAD,EAASC,CAAT,CAAd,GAA4BJ,MAA5B,GAAqCG,MAAtE,EAA8EC,CAA9E,CAAP;IACD;;EApBuB,CAAnB,CAAP;AAsBD;;AAED,SAASM,cAAT,CAAyBP,MAAzB,EAAiCC,CAAjC,EAAoC;EAClC,OAAOA,CAAC,KAAK,IAAN,IAAc,CAACQ,OAAO,CAACI,GAAR,CAAYb,MAAZ,EAAoBC,CAApB,CAAf,IAAyCQ,OAAO,CAACE,YAAR,CAAqBX,MAArB,CAAhD;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,SAAwB9B,MAAxB,CAA+B;EAC9C+B,WAAW,GAAW;IACpB,MAAM,YAAN;IAEA,KAAKC,MAAL,CAAa,OAAM,KAAKD,WAAL,CAAiBE,IAAK,MAAzC,EAAiDC,GAAD,IAAS;MACvD,MAAMC,KAAK,GAAGlC,OAAO,CAACmC,QAAR,EAAd;MACA,MAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACE,IAA5B;MAEA,IAAI,CAACA,IAAL,EAAW;MAEX,MAAM1B,MAAM,GAAG,EAAf;MACA,KAAK2B,MAAL,CAAYC,MAAZ,CAAmBF,IAAnB,EAAyBvC,GAAzB,EAA8Ba,MAA9B;MACAuB,GAAG,CAACxB,OAAJ,GAAcD,YAAY,CAACyB,GAAG,CAACxB,OAAL,EAAcC,MAAd,CAA1B;IACD,CATD;EAUD;;EAED6B,SAAS,CAAEC,MAAF,EAAU;IACjB,OAAO,MAAMD,SAAN,CAAgB,EACrB,GAAGC,MADkB;MAErBC,OAAO,EAAED,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACE;IAFb,CAAhB,CAAP;EAID;;AArB6C,CAAhD"},"metadata":{},"sourceType":"script"}