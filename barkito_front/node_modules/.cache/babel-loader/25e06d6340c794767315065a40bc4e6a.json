{"ast":null,"code":"'use strict';\n\nconst log = require('../../../dd-trace/src/log');\n\nconst BaseAwsSdkPlugin = require('../base');\n\nclass Kinesis extends BaseAwsSdkPlugin {\n  generateTags(params, operation, response) {\n    if (!params || !params.StreamName) return {};\n    return {\n      'resource.name': `${operation} ${params.StreamName}`,\n      'aws.kinesis.stream_name': params.StreamName\n    };\n  } // AWS-SDK will b64 kinesis payloads\n  // or will accept an already b64 encoded payload\n  // This method handles both\n\n\n  _tryParse(body) {\n    try {\n      return JSON.parse(body);\n    } catch (e) {\n      log.info('Not JSON string. Trying Base64 encoded JSON string');\n    }\n\n    try {\n      return JSON.parse(Buffer.from(body, 'base64').toString('ascii'), true);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  requestInject(span, request) {\n    const operation = request.operation;\n\n    if (operation === 'putRecord' || operation === 'putRecords') {\n      if (!request.params) {\n        return;\n      }\n\n      const traceData = {};\n      this.tracer.inject(span, 'text_map', traceData);\n      let injectPath;\n\n      if (request.params.Records && request.params.Records.length > 0) {\n        injectPath = request.params.Records[0];\n      } else if (request.params.Data) {\n        injectPath = request.params;\n      } else {\n        log.error('No valid payload passed, unable to pass trace context');\n        return;\n      }\n\n      const parsedData = this._tryParse(injectPath.Data);\n\n      if (parsedData) {\n        parsedData._datadog = traceData;\n        const finalData = JSON.stringify(parsedData);\n        const byteSize = Buffer.byteLength(finalData, 'ascii'); // Kinesis max payload size is 1MB\n        // So we must ensure adding DD context won't go over that (512b is an estimate)\n\n        if (byteSize >= 1048576) {\n          log.info('Payload size too large to pass context');\n          return;\n        }\n\n        injectPath.Data = finalData;\n      } else {\n        log.error('Unable to parse payload, unable to pass trace context');\n      }\n    }\n  }\n\n}\n\nmodule.exports = Kinesis;","map":{"version":3,"names":["log","require","BaseAwsSdkPlugin","Kinesis","generateTags","params","operation","response","StreamName","_tryParse","body","JSON","parse","e","info","Buffer","from","toString","requestInject","span","request","traceData","tracer","inject","injectPath","Records","length","Data","error","parsedData","_datadog","finalData","stringify","byteSize","byteLength","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-aws-sdk/src/services/kinesis.js"],"sourcesContent":["'use strict'\nconst log = require('../../../dd-trace/src/log')\nconst BaseAwsSdkPlugin = require('../base')\nclass Kinesis extends BaseAwsSdkPlugin {\n  generateTags (params, operation, response) {\n    if (!params || !params.StreamName) return {}\n\n    return {\n      'resource.name': `${operation} ${params.StreamName}`,\n      'aws.kinesis.stream_name': params.StreamName\n    }\n  }\n\n  // AWS-SDK will b64 kinesis payloads\n  // or will accept an already b64 encoded payload\n  // This method handles both\n  _tryParse (body) {\n    try {\n      return JSON.parse(body)\n    } catch (e) {\n      log.info('Not JSON string. Trying Base64 encoded JSON string')\n    }\n    try {\n      return JSON.parse(Buffer.from(body, 'base64').toString('ascii'), true)\n    } catch (e) {\n      return null\n    }\n  }\n\n  requestInject (span, request) {\n    const operation = request.operation\n    if (operation === 'putRecord' || operation === 'putRecords') {\n      if (!request.params) {\n        return\n      }\n\n      const traceData = {}\n      this.tracer.inject(span, 'text_map', traceData)\n      let injectPath\n      if (request.params.Records && request.params.Records.length > 0) {\n        injectPath = request.params.Records[0]\n      } else if (request.params.Data) {\n        injectPath = request.params\n      } else {\n        log.error('No valid payload passed, unable to pass trace context')\n        return\n      }\n      const parsedData = this._tryParse(injectPath.Data)\n      if (parsedData) {\n        parsedData._datadog = traceData\n        const finalData = JSON.stringify(parsedData)\n        const byteSize = Buffer.byteLength(finalData, 'ascii')\n        // Kinesis max payload size is 1MB\n        // So we must ensure adding DD context won't go over that (512b is an estimate)\n        if (byteSize >= 1048576) {\n          log.info('Payload size too large to pass context')\n          return\n        }\n        injectPath.Data = finalData\n      } else {\n        log.error('Unable to parse payload, unable to pass trace context')\n      }\n    }\n  }\n}\n\nmodule.exports = Kinesis\n"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,2BAAD,CAAnB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,SAAD,CAAhC;;AACA,MAAME,OAAN,SAAsBD,gBAAtB,CAAuC;EACrCE,YAAY,CAAEC,MAAF,EAAUC,SAAV,EAAqBC,QAArB,EAA+B;IACzC,IAAI,CAACF,MAAD,IAAW,CAACA,MAAM,CAACG,UAAvB,EAAmC,OAAO,EAAP;IAEnC,OAAO;MACL,iBAAkB,GAAEF,SAAU,IAAGD,MAAM,CAACG,UAAW,EAD9C;MAEL,2BAA2BH,MAAM,CAACG;IAF7B,CAAP;EAID,CARoC,CAUrC;EACA;EACA;;;EACAC,SAAS,CAAEC,IAAF,EAAQ;IACf,IAAI;MACF,OAAOC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;IACD,CAFD,CAEE,OAAOG,CAAP,EAAU;MACVb,GAAG,CAACc,IAAJ,CAAS,oDAAT;IACD;;IACD,IAAI;MACF,OAAOH,IAAI,CAACC,KAAL,CAAWG,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkB,QAAlB,EAA4BO,QAA5B,CAAqC,OAArC,CAAX,EAA0D,IAA1D,CAAP;IACD,CAFD,CAEE,OAAOJ,CAAP,EAAU;MACV,OAAO,IAAP;IACD;EACF;;EAEDK,aAAa,CAAEC,IAAF,EAAQC,OAAR,EAAiB;IAC5B,MAAMd,SAAS,GAAGc,OAAO,CAACd,SAA1B;;IACA,IAAIA,SAAS,KAAK,WAAd,IAA6BA,SAAS,KAAK,YAA/C,EAA6D;MAC3D,IAAI,CAACc,OAAO,CAACf,MAAb,EAAqB;QACnB;MACD;;MAED,MAAMgB,SAAS,GAAG,EAAlB;MACA,KAAKC,MAAL,CAAYC,MAAZ,CAAmBJ,IAAnB,EAAyB,UAAzB,EAAqCE,SAArC;MACA,IAAIG,UAAJ;;MACA,IAAIJ,OAAO,CAACf,MAAR,CAAeoB,OAAf,IAA0BL,OAAO,CAACf,MAAR,CAAeoB,OAAf,CAAuBC,MAAvB,GAAgC,CAA9D,EAAiE;QAC/DF,UAAU,GAAGJ,OAAO,CAACf,MAAR,CAAeoB,OAAf,CAAuB,CAAvB,CAAb;MACD,CAFD,MAEO,IAAIL,OAAO,CAACf,MAAR,CAAesB,IAAnB,EAAyB;QAC9BH,UAAU,GAAGJ,OAAO,CAACf,MAArB;MACD,CAFM,MAEA;QACLL,GAAG,CAAC4B,KAAJ,CAAU,uDAAV;QACA;MACD;;MACD,MAAMC,UAAU,GAAG,KAAKpB,SAAL,CAAee,UAAU,CAACG,IAA1B,CAAnB;;MACA,IAAIE,UAAJ,EAAgB;QACdA,UAAU,CAACC,QAAX,GAAsBT,SAAtB;QACA,MAAMU,SAAS,GAAGpB,IAAI,CAACqB,SAAL,CAAeH,UAAf,CAAlB;QACA,MAAMI,QAAQ,GAAGlB,MAAM,CAACmB,UAAP,CAAkBH,SAAlB,EAA6B,OAA7B,CAAjB,CAHc,CAId;QACA;;QACA,IAAIE,QAAQ,IAAI,OAAhB,EAAyB;UACvBjC,GAAG,CAACc,IAAJ,CAAS,wCAAT;UACA;QACD;;QACDU,UAAU,CAACG,IAAX,GAAkBI,SAAlB;MACD,CAXD,MAWO;QACL/B,GAAG,CAAC4B,KAAJ,CAAU,uDAAV;MACD;IACF;EACF;;AA5DoC;;AA+DvCO,MAAM,CAACC,OAAP,GAAiBjC,OAAjB"},"metadata":{},"sourceType":"script"}