{"ast":null,"code":"'use strict';\n\nconst RateLimiter = require('./rate_limiter');\n\nconst Sampler = require('./sampler');\n\nconst ext = require('../../../ext');\n\nconst {\n  setSamplingRules\n} = require('./startup-log');\n\nconst {\n  SAMPLING_MECHANISM_DEFAULT,\n  SAMPLING_MECHANISM_AGENT,\n  SAMPLING_MECHANISM_RULE,\n  SAMPLING_MECHANISM_MANUAL,\n  SAMPLING_RULE_DECISION,\n  SAMPLING_LIMIT_DECISION,\n  SAMPLING_AGENT_DECISION,\n  DECISION_MAKER_KEY\n} = require('./constants');\n\nconst SERVICE_NAME = ext.tags.SERVICE_NAME;\nconst SAMPLING_PRIORITY = ext.tags.SAMPLING_PRIORITY;\nconst MANUAL_KEEP = ext.tags.MANUAL_KEEP;\nconst MANUAL_DROP = ext.tags.MANUAL_DROP;\nconst USER_REJECT = ext.priority.USER_REJECT;\nconst AUTO_REJECT = ext.priority.AUTO_REJECT;\nconst AUTO_KEEP = ext.priority.AUTO_KEEP;\nconst USER_KEEP = ext.priority.USER_KEEP;\nconst DEFAULT_KEY = 'service:,env:';\nconst defaultSampler = new Sampler(AUTO_KEEP);\n\nclass PrioritySampler {\n  constructor(env) {\n    let {\n      sampleRate,\n      rateLimit = 100,\n      rules = []\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._env = env;\n    this._rules = this._normalizeRules(rules, sampleRate);\n    this._limiter = new RateLimiter(rateLimit);\n    setSamplingRules(this._rules);\n    this.update({});\n  }\n\n  isSampled(span) {\n    const priority = this._getPriorityFromAuto(span);\n\n    return priority === USER_KEEP || priority === AUTO_KEEP;\n  }\n\n  sample(span) {\n    let auto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!span) return;\n\n    const context = this._getContext(span);\n\n    const root = context._trace.started[0]; // TODO: remove the decision maker tag when priority is less than AUTO_KEEP\n\n    if (context._sampling.priority !== undefined) return;\n    if (!root) return; // noop span\n\n    const tag = this._getPriorityFromTags(context._tags);\n\n    if (this.validate(tag)) {\n      context._sampling.priority = tag;\n      context._sampling.mechanism = SAMPLING_MECHANISM_MANUAL;\n    } else if (auto) {\n      context._sampling.priority = this._getPriorityFromAuto(root);\n    } else {\n      return;\n    }\n\n    this._addDecisionMaker(root);\n  }\n\n  update(rates) {\n    const samplers = {};\n\n    for (const key in rates) {\n      const rate = rates[key];\n      const sampler = new Sampler(rate);\n      samplers[key] = sampler;\n    }\n\n    samplers[DEFAULT_KEY] = samplers[DEFAULT_KEY] || defaultSampler;\n    this._samplers = samplers;\n  }\n\n  validate(samplingPriority) {\n    switch (samplingPriority) {\n      case USER_REJECT:\n      case USER_KEEP:\n      case AUTO_REJECT:\n      case AUTO_KEEP:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  _getContext(span) {\n    return typeof span.context === 'function' ? span.context() : span;\n  }\n\n  _getPriorityFromAuto(span) {\n    const context = this._getContext(span);\n\n    const rule = this._findRule(context);\n\n    return rule ? this._getPriorityByRule(context, rule) : this._getPriorityByAgent(context);\n  }\n\n  _getPriorityFromTags(tags) {\n    if (tags.hasOwnProperty(MANUAL_KEEP) && tags[MANUAL_KEEP] !== false) {\n      return USER_KEEP;\n    } else if (tags.hasOwnProperty(MANUAL_DROP) && tags[MANUAL_DROP] !== false) {\n      return USER_REJECT;\n    } else {\n      const priority = parseInt(tags[SAMPLING_PRIORITY], 10);\n\n      if (priority === 1 || priority === 2) {\n        return USER_KEEP;\n      } else if (priority === 0 || priority === -1) {\n        return USER_REJECT;\n      }\n    }\n  }\n\n  _getPriorityByRule(context, rule) {\n    context._trace[SAMPLING_RULE_DECISION] = rule.sampleRate;\n    context._sampling.mechanism = SAMPLING_MECHANISM_RULE;\n    return rule.sampler.isSampled(context) && this._isSampledByRateLimit(context) ? USER_KEEP : USER_REJECT;\n  }\n\n  _isSampledByRateLimit(context) {\n    const allowed = this._limiter.isAllowed();\n\n    context._trace[SAMPLING_LIMIT_DECISION] = this._limiter.effectiveRate();\n    return allowed;\n  }\n\n  _getPriorityByAgent(context) {\n    const key = `service:${context._tags[SERVICE_NAME]},env:${this._env}`;\n    const sampler = this._samplers[key] || this._samplers[DEFAULT_KEY];\n    context._trace[SAMPLING_AGENT_DECISION] = sampler.rate();\n\n    if (sampler === defaultSampler) {\n      context._sampling.mechanism = SAMPLING_MECHANISM_DEFAULT;\n    } else {\n      context._sampling.mechanism = SAMPLING_MECHANISM_AGENT;\n    }\n\n    return sampler.isSampled(context) ? AUTO_KEEP : AUTO_REJECT;\n  }\n\n  _addDecisionMaker(span) {\n    const context = span.context();\n    const trace = context._trace;\n    const priority = context._sampling.priority;\n    const mechanism = context._sampling.mechanism;\n\n    if (priority >= AUTO_KEEP) {\n      if (!trace.tags[DECISION_MAKER_KEY]) {\n        trace.tags[DECISION_MAKER_KEY] = `-${mechanism}`;\n      }\n    } else {\n      delete trace.tags[DECISION_MAKER_KEY];\n    }\n  }\n\n  _normalizeRules(rules, sampleRate) {\n    rules = [].concat(rules || []);\n    return rules.concat({\n      sampleRate\n    }).map(rule => ({ ...rule,\n      sampleRate: parseFloat(rule.sampleRate)\n    })).filter(rule => !isNaN(rule.sampleRate)).map(rule => ({ ...rule,\n      sampler: new Sampler(rule.sampleRate)\n    }));\n  }\n\n  _findRule(context) {\n    for (let i = 0, l = this._rules.length; i < l; i++) {\n      if (this._matchRule(context, this._rules[i])) return this._rules[i];\n    }\n  }\n\n  _matchRule(context, rule) {\n    const name = context._name;\n    const service = context._tags['service.name'];\n    if (rule.name instanceof RegExp && !rule.name.test(name)) return false;\n    if (typeof rule.name === 'string' && rule.name !== name) return false;\n    if (rule.service instanceof RegExp && !rule.service.test(service)) return false;\n    if (typeof rule.service === 'string' && rule.service !== service) return false;\n    return true;\n  }\n\n}\n\nmodule.exports = PrioritySampler;","map":{"version":3,"names":["RateLimiter","require","Sampler","ext","setSamplingRules","SAMPLING_MECHANISM_DEFAULT","SAMPLING_MECHANISM_AGENT","SAMPLING_MECHANISM_RULE","SAMPLING_MECHANISM_MANUAL","SAMPLING_RULE_DECISION","SAMPLING_LIMIT_DECISION","SAMPLING_AGENT_DECISION","DECISION_MAKER_KEY","SERVICE_NAME","tags","SAMPLING_PRIORITY","MANUAL_KEEP","MANUAL_DROP","USER_REJECT","priority","AUTO_REJECT","AUTO_KEEP","USER_KEEP","DEFAULT_KEY","defaultSampler","PrioritySampler","constructor","env","sampleRate","rateLimit","rules","_env","_rules","_normalizeRules","_limiter","update","isSampled","span","_getPriorityFromAuto","sample","auto","context","_getContext","root","_trace","started","_sampling","undefined","tag","_getPriorityFromTags","_tags","validate","mechanism","_addDecisionMaker","rates","samplers","key","rate","sampler","_samplers","samplingPriority","rule","_findRule","_getPriorityByRule","_getPriorityByAgent","hasOwnProperty","parseInt","_isSampledByRateLimit","allowed","isAllowed","effectiveRate","trace","concat","map","parseFloat","filter","isNaN","i","l","length","_matchRule","name","_name","service","RegExp","test","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/priority_sampler.js"],"sourcesContent":["'use strict'\n\nconst RateLimiter = require('./rate_limiter')\nconst Sampler = require('./sampler')\nconst ext = require('../../../ext')\nconst { setSamplingRules } = require('./startup-log')\n\nconst {\n  SAMPLING_MECHANISM_DEFAULT,\n  SAMPLING_MECHANISM_AGENT,\n  SAMPLING_MECHANISM_RULE,\n  SAMPLING_MECHANISM_MANUAL,\n  SAMPLING_RULE_DECISION,\n  SAMPLING_LIMIT_DECISION,\n  SAMPLING_AGENT_DECISION,\n  DECISION_MAKER_KEY\n} = require('./constants')\n\nconst SERVICE_NAME = ext.tags.SERVICE_NAME\nconst SAMPLING_PRIORITY = ext.tags.SAMPLING_PRIORITY\nconst MANUAL_KEEP = ext.tags.MANUAL_KEEP\nconst MANUAL_DROP = ext.tags.MANUAL_DROP\nconst USER_REJECT = ext.priority.USER_REJECT\nconst AUTO_REJECT = ext.priority.AUTO_REJECT\nconst AUTO_KEEP = ext.priority.AUTO_KEEP\nconst USER_KEEP = ext.priority.USER_KEEP\nconst DEFAULT_KEY = 'service:,env:'\n\nconst defaultSampler = new Sampler(AUTO_KEEP)\n\nclass PrioritySampler {\n  constructor (env, { sampleRate, rateLimit = 100, rules = [] } = {}) {\n    this._env = env\n    this._rules = this._normalizeRules(rules, sampleRate)\n    this._limiter = new RateLimiter(rateLimit)\n\n    setSamplingRules(this._rules)\n\n    this.update({})\n  }\n\n  isSampled (span) {\n    const priority = this._getPriorityFromAuto(span)\n    return priority === USER_KEEP || priority === AUTO_KEEP\n  }\n\n  sample (span, auto = true) {\n    if (!span) return\n\n    const context = this._getContext(span)\n    const root = context._trace.started[0]\n\n    // TODO: remove the decision maker tag when priority is less than AUTO_KEEP\n    if (context._sampling.priority !== undefined) return\n    if (!root) return // noop span\n\n    const tag = this._getPriorityFromTags(context._tags)\n\n    if (this.validate(tag)) {\n      context._sampling.priority = tag\n      context._sampling.mechanism = SAMPLING_MECHANISM_MANUAL\n    } else if (auto) {\n      context._sampling.priority = this._getPriorityFromAuto(root)\n    } else {\n      return\n    }\n\n    this._addDecisionMaker(root)\n  }\n\n  update (rates) {\n    const samplers = {}\n\n    for (const key in rates) {\n      const rate = rates[key]\n      const sampler = new Sampler(rate)\n\n      samplers[key] = sampler\n    }\n\n    samplers[DEFAULT_KEY] = samplers[DEFAULT_KEY] || defaultSampler\n\n    this._samplers = samplers\n  }\n\n  validate (samplingPriority) {\n    switch (samplingPriority) {\n      case USER_REJECT:\n      case USER_KEEP:\n      case AUTO_REJECT:\n      case AUTO_KEEP:\n        return true\n      default:\n        return false\n    }\n  }\n\n  _getContext (span) {\n    return typeof span.context === 'function' ? span.context() : span\n  }\n\n  _getPriorityFromAuto (span) {\n    const context = this._getContext(span)\n    const rule = this._findRule(context)\n\n    return rule\n      ? this._getPriorityByRule(context, rule)\n      : this._getPriorityByAgent(context)\n  }\n\n  _getPriorityFromTags (tags) {\n    if (tags.hasOwnProperty(MANUAL_KEEP) && tags[MANUAL_KEEP] !== false) {\n      return USER_KEEP\n    } else if (tags.hasOwnProperty(MANUAL_DROP) && tags[MANUAL_DROP] !== false) {\n      return USER_REJECT\n    } else {\n      const priority = parseInt(tags[SAMPLING_PRIORITY], 10)\n\n      if (priority === 1 || priority === 2) {\n        return USER_KEEP\n      } else if (priority === 0 || priority === -1) {\n        return USER_REJECT\n      }\n    }\n  }\n\n  _getPriorityByRule (context, rule) {\n    context._trace[SAMPLING_RULE_DECISION] = rule.sampleRate\n    context._sampling.mechanism = SAMPLING_MECHANISM_RULE\n\n    return rule.sampler.isSampled(context) && this._isSampledByRateLimit(context) ? USER_KEEP : USER_REJECT\n  }\n\n  _isSampledByRateLimit (context) {\n    const allowed = this._limiter.isAllowed()\n\n    context._trace[SAMPLING_LIMIT_DECISION] = this._limiter.effectiveRate()\n\n    return allowed\n  }\n\n  _getPriorityByAgent (context) {\n    const key = `service:${context._tags[SERVICE_NAME]},env:${this._env}`\n    const sampler = this._samplers[key] || this._samplers[DEFAULT_KEY]\n\n    context._trace[SAMPLING_AGENT_DECISION] = sampler.rate()\n\n    if (sampler === defaultSampler) {\n      context._sampling.mechanism = SAMPLING_MECHANISM_DEFAULT\n    } else {\n      context._sampling.mechanism = SAMPLING_MECHANISM_AGENT\n    }\n\n    return sampler.isSampled(context) ? AUTO_KEEP : AUTO_REJECT\n  }\n\n  _addDecisionMaker (span) {\n    const context = span.context()\n    const trace = context._trace\n    const priority = context._sampling.priority\n    const mechanism = context._sampling.mechanism\n\n    if (priority >= AUTO_KEEP) {\n      if (!trace.tags[DECISION_MAKER_KEY]) {\n        trace.tags[DECISION_MAKER_KEY] = `-${mechanism}`\n      }\n    } else {\n      delete trace.tags[DECISION_MAKER_KEY]\n    }\n  }\n\n  _normalizeRules (rules, sampleRate) {\n    rules = [].concat(rules || [])\n\n    return rules\n      .concat({ sampleRate })\n      .map(rule => ({ ...rule, sampleRate: parseFloat(rule.sampleRate) }))\n      .filter(rule => !isNaN(rule.sampleRate))\n      .map(rule => ({ ...rule, sampler: new Sampler(rule.sampleRate) }))\n  }\n\n  _findRule (context) {\n    for (let i = 0, l = this._rules.length; i < l; i++) {\n      if (this._matchRule(context, this._rules[i])) return this._rules[i]\n    }\n  }\n\n  _matchRule (context, rule) {\n    const name = context._name\n    const service = context._tags['service.name']\n\n    if (rule.name instanceof RegExp && !rule.name.test(name)) return false\n    if (typeof rule.name === 'string' && rule.name !== name) return false\n    if (rule.service instanceof RegExp && !rule.service.test(service)) return false\n    if (typeof rule.service === 'string' && rule.service !== service) return false\n\n    return true\n  }\n}\n\nmodule.exports = PrioritySampler\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}