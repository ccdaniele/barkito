{"ast":null,"code":"'use strict';\n\nconst addresses = require('./addresses');\n\nconst Limiter = require('../rate_limiter');\n\nconst web = require('../plugins/util/web'); // default limiter, configurable with setRateLimit()\n\n\nlet limiter = new Limiter(100);\nconst REQUEST_HEADERS_PASSLIST = ['accept', 'accept-encoding', 'accept-language', 'content-encoding', 'content-language', 'content-length', 'content-type', 'forwarded', 'forwarded-for', 'host', 'true-client-ip', 'user-agent', 'via', 'x-client-ip', 'x-cluster-client-ip', 'x-forwarded', 'x-forwarded-for', 'x-real-ip'];\nconst RESPONSE_HEADERS_PASSLIST = ['content-encoding', 'content-language', 'content-length', 'content-type'];\nconst metricsQueue = new Map();\n\nfunction resolveHTTPRequest(context) {\n  if (!context) return {};\n  const headers = context.resolve(addresses.HTTP_INCOMING_HEADERS);\n  return {\n    remote_ip: context.resolve(addresses.HTTP_INCOMING_REMOTE_IP),\n    headers: filterHeaders(headers, REQUEST_HEADERS_PASSLIST, 'http.request.headers.')\n  };\n}\n\nfunction resolveHTTPResponse(context) {\n  if (!context) return {};\n  const headers = context.resolve(addresses.HTTP_INCOMING_RESPONSE_HEADERS);\n  return {\n    endpoint: context.resolve(addresses.HTTP_INCOMING_ENDPOINT),\n    headers: filterHeaders(headers, RESPONSE_HEADERS_PASSLIST, 'http.response.headers.')\n  };\n}\n\nfunction filterHeaders(headers, passlist, prefix) {\n  const result = {};\n  if (!headers) return result;\n\n  for (let i = 0; i < passlist.length; ++i) {\n    const headerName = passlist[i];\n\n    if (headers[headerName]) {\n      result[`${prefix}${formatHeaderName(headerName)}`] = headers[headerName] + '';\n    }\n  }\n\n  return result;\n} // TODO: this can be precomputed at start time\n\n\nfunction formatHeaderName(name) {\n  return name.trim().slice(0, 200).replace(/[^a-zA-Z0-9_\\-:/]/g, '_').toLowerCase();\n}\n\nfunction reportMetrics(metrics, store) {\n  const req = store && store.get('req');\n  const topSpan = web.root(req);\n  if (!topSpan) return false;\n\n  if (metrics.duration) {\n    topSpan.setTag('_dd.appsec.waf.duration', metrics.duration);\n  }\n\n  if (metrics.durationExt) {\n    topSpan.setTag('_dd.appsec.waf.duration_ext', metrics.durationExt);\n  }\n\n  if (metrics.rulesVersion) {\n    topSpan.setTag('_dd.appsec.event_rules.version', metrics.rulesVersion);\n  }\n}\n\nfunction reportAttack(attackData, store) {\n  const req = store && store.get('req');\n  const topSpan = web.root(req);\n  if (!topSpan) return false;\n\n  const currentTags = topSpan.context()._tags;\n\n  const newTags = {\n    'appsec.event': 'true'\n  };\n\n  if (limiter.isAllowed()) {\n    newTags['manual.keep'] = 'true'; // TODO: figure out how to keep appsec traces with sampling revamp\n  } // TODO: maybe add this to format.js later (to take decision as late as possible)\n\n\n  if (!currentTags['_dd.origin']) {\n    newTags['_dd.origin'] = 'appsec';\n  }\n\n  const currentJson = currentTags['_dd.appsec.json']; // merge JSON arrays without parsing them\n\n  if (currentJson) {\n    newTags['_dd.appsec.json'] = currentJson.slice(0, -2) + ',' + attackData.slice(1, -1) + currentJson.slice(-2);\n  } else {\n    newTags['_dd.appsec.json'] = '{\"triggers\":' + attackData + '}';\n  }\n\n  const context = store.get('context');\n\n  if (context) {\n    const resolvedRequest = resolveHTTPRequest(context);\n    Object.assign(newTags, resolvedRequest.headers);\n    const ua = resolvedRequest.headers['http.request.headers.user-agent'];\n\n    if (ua) {\n      newTags['http.useragent'] = ua;\n    }\n\n    newTags['network.client.ip'] = resolvedRequest.remote_ip;\n  }\n\n  topSpan.addTags(newTags);\n}\n\nfunction finishRequest(req, context) {\n  const topSpan = web.root(req);\n  if (!topSpan) return false;\n\n  if (metricsQueue.size) {\n    topSpan.addTags(Object.fromEntries(metricsQueue));\n    metricsQueue.clear();\n  }\n\n  if (!context || !topSpan.context()._tags['appsec.event']) return false;\n  const resolvedResponse = resolveHTTPResponse(context);\n  const newTags = resolvedResponse.headers;\n\n  if (resolvedResponse.endpoint) {\n    newTags['http.endpoint'] = resolvedResponse.endpoint;\n  }\n\n  topSpan.addTags(newTags);\n}\n\nfunction setRateLimit(rateLimit) {\n  limiter = new Limiter(rateLimit);\n}\n\nmodule.exports = {\n  metricsQueue,\n  resolveHTTPRequest,\n  resolveHTTPResponse,\n  filterHeaders,\n  formatHeaderName,\n  reportMetrics,\n  reportAttack,\n  finishRequest,\n  setRateLimit\n};","map":{"version":3,"names":["addresses","require","Limiter","web","limiter","REQUEST_HEADERS_PASSLIST","RESPONSE_HEADERS_PASSLIST","metricsQueue","Map","resolveHTTPRequest","context","headers","resolve","HTTP_INCOMING_HEADERS","remote_ip","HTTP_INCOMING_REMOTE_IP","filterHeaders","resolveHTTPResponse","HTTP_INCOMING_RESPONSE_HEADERS","endpoint","HTTP_INCOMING_ENDPOINT","passlist","prefix","result","i","length","headerName","formatHeaderName","name","trim","slice","replace","toLowerCase","reportMetrics","metrics","store","req","get","topSpan","root","duration","setTag","durationExt","rulesVersion","reportAttack","attackData","currentTags","_tags","newTags","isAllowed","currentJson","resolvedRequest","Object","assign","ua","addTags","finishRequest","size","fromEntries","clear","resolvedResponse","setRateLimit","rateLimit","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/reporter.js"],"sourcesContent":["'use strict'\n\nconst addresses = require('./addresses')\nconst Limiter = require('../rate_limiter')\nconst web = require('../plugins/util/web')\n\n// default limiter, configurable with setRateLimit()\nlet limiter = new Limiter(100)\n\nconst REQUEST_HEADERS_PASSLIST = [\n  'accept',\n  'accept-encoding',\n  'accept-language',\n  'content-encoding',\n  'content-language',\n  'content-length',\n  'content-type',\n  'forwarded',\n  'forwarded-for',\n  'host',\n  'true-client-ip',\n  'user-agent',\n  'via',\n  'x-client-ip',\n  'x-cluster-client-ip',\n  'x-forwarded',\n  'x-forwarded-for',\n  'x-real-ip'\n]\n\nconst RESPONSE_HEADERS_PASSLIST = [\n  'content-encoding',\n  'content-language',\n  'content-length',\n  'content-type'\n]\n\nconst metricsQueue = new Map()\n\nfunction resolveHTTPRequest (context) {\n  if (!context) return {}\n\n  const headers = context.resolve(addresses.HTTP_INCOMING_HEADERS)\n\n  return {\n    remote_ip: context.resolve(addresses.HTTP_INCOMING_REMOTE_IP),\n    headers: filterHeaders(headers, REQUEST_HEADERS_PASSLIST, 'http.request.headers.')\n  }\n}\n\nfunction resolveHTTPResponse (context) {\n  if (!context) return {}\n\n  const headers = context.resolve(addresses.HTTP_INCOMING_RESPONSE_HEADERS)\n\n  return {\n    endpoint: context.resolve(addresses.HTTP_INCOMING_ENDPOINT),\n    headers: filterHeaders(headers, RESPONSE_HEADERS_PASSLIST, 'http.response.headers.')\n  }\n}\n\nfunction filterHeaders (headers, passlist, prefix) {\n  const result = {}\n\n  if (!headers) return result\n\n  for (let i = 0; i < passlist.length; ++i) {\n    const headerName = passlist[i]\n\n    if (headers[headerName]) {\n      result[`${prefix}${formatHeaderName(headerName)}`] = headers[headerName] + ''\n    }\n  }\n\n  return result\n}\n\n// TODO: this can be precomputed at start time\nfunction formatHeaderName (name) {\n  return name\n    .trim()\n    .slice(0, 200)\n    .replace(/[^a-zA-Z0-9_\\-:/]/g, '_')\n    .toLowerCase()\n}\n\nfunction reportMetrics (metrics, store) {\n  const req = store && store.get('req')\n  const topSpan = web.root(req)\n  if (!topSpan) return false\n\n  if (metrics.duration) {\n    topSpan.setTag('_dd.appsec.waf.duration', metrics.duration)\n  }\n\n  if (metrics.durationExt) {\n    topSpan.setTag('_dd.appsec.waf.duration_ext', metrics.durationExt)\n  }\n\n  if (metrics.rulesVersion) {\n    topSpan.setTag('_dd.appsec.event_rules.version', metrics.rulesVersion)\n  }\n}\n\nfunction reportAttack (attackData, store) {\n  const req = store && store.get('req')\n  const topSpan = web.root(req)\n  if (!topSpan) return false\n\n  const currentTags = topSpan.context()._tags\n\n  const newTags = {\n    'appsec.event': 'true'\n  }\n\n  if (limiter.isAllowed()) {\n    newTags['manual.keep'] = 'true' // TODO: figure out how to keep appsec traces with sampling revamp\n  }\n\n  // TODO: maybe add this to format.js later (to take decision as late as possible)\n  if (!currentTags['_dd.origin']) {\n    newTags['_dd.origin'] = 'appsec'\n  }\n\n  const currentJson = currentTags['_dd.appsec.json']\n\n  // merge JSON arrays without parsing them\n  if (currentJson) {\n    newTags['_dd.appsec.json'] = currentJson.slice(0, -2) + ',' + attackData.slice(1, -1) + currentJson.slice(-2)\n  } else {\n    newTags['_dd.appsec.json'] = '{\"triggers\":' + attackData + '}'\n  }\n\n  const context = store.get('context')\n\n  if (context) {\n    const resolvedRequest = resolveHTTPRequest(context)\n\n    Object.assign(newTags, resolvedRequest.headers)\n\n    const ua = resolvedRequest.headers['http.request.headers.user-agent']\n    if (ua) {\n      newTags['http.useragent'] = ua\n    }\n\n    newTags['network.client.ip'] = resolvedRequest.remote_ip\n  }\n\n  topSpan.addTags(newTags)\n}\n\nfunction finishRequest (req, context) {\n  const topSpan = web.root(req)\n  if (!topSpan) return false\n\n  if (metricsQueue.size) {\n    topSpan.addTags(Object.fromEntries(metricsQueue))\n\n    metricsQueue.clear()\n  }\n\n  if (!context || !topSpan.context()._tags['appsec.event']) return false\n\n  const resolvedResponse = resolveHTTPResponse(context)\n\n  const newTags = resolvedResponse.headers\n\n  if (resolvedResponse.endpoint) {\n    newTags['http.endpoint'] = resolvedResponse.endpoint\n  }\n\n  topSpan.addTags(newTags)\n}\n\nfunction setRateLimit (rateLimit) {\n  limiter = new Limiter(rateLimit)\n}\n\nmodule.exports = {\n  metricsQueue,\n  resolveHTTPRequest,\n  resolveHTTPResponse,\n  filterHeaders,\n  formatHeaderName,\n  reportMetrics,\n  reportAttack,\n  finishRequest,\n  setRateLimit\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,qBAAD,CAAnB,C,CAEA;;;AACA,IAAIG,OAAO,GAAG,IAAIF,OAAJ,CAAY,GAAZ,CAAd;AAEA,MAAMG,wBAAwB,GAAG,CAC/B,QAD+B,EAE/B,iBAF+B,EAG/B,iBAH+B,EAI/B,kBAJ+B,EAK/B,kBAL+B,EAM/B,gBAN+B,EAO/B,cAP+B,EAQ/B,WAR+B,EAS/B,eAT+B,EAU/B,MAV+B,EAW/B,gBAX+B,EAY/B,YAZ+B,EAa/B,KAb+B,EAc/B,aAd+B,EAe/B,qBAf+B,EAgB/B,aAhB+B,EAiB/B,iBAjB+B,EAkB/B,WAlB+B,CAAjC;AAqBA,MAAMC,yBAAyB,GAAG,CAChC,kBADgC,EAEhC,kBAFgC,EAGhC,gBAHgC,EAIhC,cAJgC,CAAlC;AAOA,MAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AAEA,SAASC,kBAAT,CAA6BC,OAA7B,EAAsC;EACpC,IAAI,CAACA,OAAL,EAAc,OAAO,EAAP;EAEd,MAAMC,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgBZ,SAAS,CAACa,qBAA1B,CAAhB;EAEA,OAAO;IACLC,SAAS,EAAEJ,OAAO,CAACE,OAAR,CAAgBZ,SAAS,CAACe,uBAA1B,CADN;IAELJ,OAAO,EAAEK,aAAa,CAACL,OAAD,EAAUN,wBAAV,EAAoC,uBAApC;EAFjB,CAAP;AAID;;AAED,SAASY,mBAAT,CAA8BP,OAA9B,EAAuC;EACrC,IAAI,CAACA,OAAL,EAAc,OAAO,EAAP;EAEd,MAAMC,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgBZ,SAAS,CAACkB,8BAA1B,CAAhB;EAEA,OAAO;IACLC,QAAQ,EAAET,OAAO,CAACE,OAAR,CAAgBZ,SAAS,CAACoB,sBAA1B,CADL;IAELT,OAAO,EAAEK,aAAa,CAACL,OAAD,EAAUL,yBAAV,EAAqC,wBAArC;EAFjB,CAAP;AAID;;AAED,SAASU,aAAT,CAAwBL,OAAxB,EAAiCU,QAAjC,EAA2CC,MAA3C,EAAmD;EACjD,MAAMC,MAAM,GAAG,EAAf;EAEA,IAAI,CAACZ,OAAL,EAAc,OAAOY,MAAP;;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;IACxC,MAAME,UAAU,GAAGL,QAAQ,CAACG,CAAD,CAA3B;;IAEA,IAAIb,OAAO,CAACe,UAAD,CAAX,EAAyB;MACvBH,MAAM,CAAE,GAAED,MAAO,GAAEK,gBAAgB,CAACD,UAAD,CAAa,EAA1C,CAAN,GAAqDf,OAAO,CAACe,UAAD,CAAP,GAAsB,EAA3E;IACD;EACF;;EAED,OAAOH,MAAP;AACD,C,CAED;;;AACA,SAASI,gBAAT,CAA2BC,IAA3B,EAAiC;EAC/B,OAAOA,IAAI,CACRC,IADI,GAEJC,KAFI,CAEE,CAFF,EAEK,GAFL,EAGJC,OAHI,CAGI,oBAHJ,EAG0B,GAH1B,EAIJC,WAJI,EAAP;AAKD;;AAED,SAASC,aAAT,CAAwBC,OAAxB,EAAiCC,KAAjC,EAAwC;EACtC,MAAMC,GAAG,GAAGD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAU,KAAV,CAArB;EACA,MAAMC,OAAO,GAAGnC,GAAG,CAACoC,IAAJ,CAASH,GAAT,CAAhB;EACA,IAAI,CAACE,OAAL,EAAc,OAAO,KAAP;;EAEd,IAAIJ,OAAO,CAACM,QAAZ,EAAsB;IACpBF,OAAO,CAACG,MAAR,CAAe,yBAAf,EAA0CP,OAAO,CAACM,QAAlD;EACD;;EAED,IAAIN,OAAO,CAACQ,WAAZ,EAAyB;IACvBJ,OAAO,CAACG,MAAR,CAAe,6BAAf,EAA8CP,OAAO,CAACQ,WAAtD;EACD;;EAED,IAAIR,OAAO,CAACS,YAAZ,EAA0B;IACxBL,OAAO,CAACG,MAAR,CAAe,gCAAf,EAAiDP,OAAO,CAACS,YAAzD;EACD;AACF;;AAED,SAASC,YAAT,CAAuBC,UAAvB,EAAmCV,KAAnC,EAA0C;EACxC,MAAMC,GAAG,GAAGD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAU,KAAV,CAArB;EACA,MAAMC,OAAO,GAAGnC,GAAG,CAACoC,IAAJ,CAASH,GAAT,CAAhB;EACA,IAAI,CAACE,OAAL,EAAc,OAAO,KAAP;;EAEd,MAAMQ,WAAW,GAAGR,OAAO,CAAC5B,OAAR,GAAkBqC,KAAtC;;EAEA,MAAMC,OAAO,GAAG;IACd,gBAAgB;EADF,CAAhB;;EAIA,IAAI5C,OAAO,CAAC6C,SAAR,EAAJ,EAAyB;IACvBD,OAAO,CAAC,aAAD,CAAP,GAAyB,MAAzB,CADuB,CACS;EACjC,CAbuC,CAexC;;;EACA,IAAI,CAACF,WAAW,CAAC,YAAD,CAAhB,EAAgC;IAC9BE,OAAO,CAAC,YAAD,CAAP,GAAwB,QAAxB;EACD;;EAED,MAAME,WAAW,GAAGJ,WAAW,CAAC,iBAAD,CAA/B,CApBwC,CAsBxC;;EACA,IAAII,WAAJ,EAAiB;IACfF,OAAO,CAAC,iBAAD,CAAP,GAA6BE,WAAW,CAACpB,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,GAA3B,GAAiCe,UAAU,CAACf,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAjC,GAA2DoB,WAAW,CAACpB,KAAZ,CAAkB,CAAC,CAAnB,CAAxF;EACD,CAFD,MAEO;IACLkB,OAAO,CAAC,iBAAD,CAAP,GAA6B,iBAAiBH,UAAjB,GAA8B,GAA3D;EACD;;EAED,MAAMnC,OAAO,GAAGyB,KAAK,CAACE,GAAN,CAAU,SAAV,CAAhB;;EAEA,IAAI3B,OAAJ,EAAa;IACX,MAAMyC,eAAe,GAAG1C,kBAAkB,CAACC,OAAD,CAA1C;IAEA0C,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBG,eAAe,CAACxC,OAAvC;IAEA,MAAM2C,EAAE,GAAGH,eAAe,CAACxC,OAAhB,CAAwB,iCAAxB,CAAX;;IACA,IAAI2C,EAAJ,EAAQ;MACNN,OAAO,CAAC,gBAAD,CAAP,GAA4BM,EAA5B;IACD;;IAEDN,OAAO,CAAC,mBAAD,CAAP,GAA+BG,eAAe,CAACrC,SAA/C;EACD;;EAEDwB,OAAO,CAACiB,OAAR,CAAgBP,OAAhB;AACD;;AAED,SAASQ,aAAT,CAAwBpB,GAAxB,EAA6B1B,OAA7B,EAAsC;EACpC,MAAM4B,OAAO,GAAGnC,GAAG,CAACoC,IAAJ,CAASH,GAAT,CAAhB;EACA,IAAI,CAACE,OAAL,EAAc,OAAO,KAAP;;EAEd,IAAI/B,YAAY,CAACkD,IAAjB,EAAuB;IACrBnB,OAAO,CAACiB,OAAR,CAAgBH,MAAM,CAACM,WAAP,CAAmBnD,YAAnB,CAAhB;IAEAA,YAAY,CAACoD,KAAb;EACD;;EAED,IAAI,CAACjD,OAAD,IAAY,CAAC4B,OAAO,CAAC5B,OAAR,GAAkBqC,KAAlB,CAAwB,cAAxB,CAAjB,EAA0D,OAAO,KAAP;EAE1D,MAAMa,gBAAgB,GAAG3C,mBAAmB,CAACP,OAAD,CAA5C;EAEA,MAAMsC,OAAO,GAAGY,gBAAgB,CAACjD,OAAjC;;EAEA,IAAIiD,gBAAgB,CAACzC,QAArB,EAA+B;IAC7B6B,OAAO,CAAC,eAAD,CAAP,GAA2BY,gBAAgB,CAACzC,QAA5C;EACD;;EAEDmB,OAAO,CAACiB,OAAR,CAAgBP,OAAhB;AACD;;AAED,SAASa,YAAT,CAAuBC,SAAvB,EAAkC;EAChC1D,OAAO,GAAG,IAAIF,OAAJ,CAAY4D,SAAZ,CAAV;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EACfzD,YADe;EAEfE,kBAFe;EAGfQ,mBAHe;EAIfD,aAJe;EAKfW,gBALe;EAMfM,aANe;EAOfW,YAPe;EAQfY,aARe;EASfK;AATe,CAAjB"},"metadata":{},"sourceType":"script"}