{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nclass DNSPlugin extends Plugin {\n  static get name() {\n    return 'dns';\n  }\n\n  addSubs(func, start) {\n    let finish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFinish;\n    this.addSub(`apm:dns:${func}:start`, start);\n    this.addSub(`apm:dns:${func}:error`, errorHandler);\n    this.addSub(`apm:dns:${func}:finish`, finish);\n  }\n\n  startSpan(name, customTags, store) {\n    const tags = {\n      'service.name': this.config.service || this.tracer._service,\n      'span.kind': 'client'\n    };\n\n    for (const tag in customTags) {\n      tags[tag] = customTags[tag];\n    }\n\n    const span = this.tracer.startSpan(name, {\n      childOf: store ? store.span : null,\n      tags\n    });\n    analyticsSampler.sample(span, this.config.measured);\n    return span;\n  }\n\n  constructor() {\n    super(...arguments);\n    this.addSubs('lookup', _ref => {\n      let [hostname] = _ref;\n      const store = storage.getStore();\n      const span = this.startSpan('dns.lookup', {\n        'resource.name': hostname,\n        'dns.hostname': hostname\n      }, store);\n      this.enter(span, store);\n    }, result => {\n      const {\n        span\n      } = storage.getStore();\n\n      if (Array.isArray(result)) {\n        const addresses = Array.isArray(result) ? result.map(address => address.address).sort() : [result];\n        span.setTag('dns.address', addresses[0]);\n        span.setTag('dns.addresses', addresses.join(','));\n      } else {\n        span.setTag('dns.address', result);\n      }\n\n      span.finish();\n    });\n    this.addSubs('lookup_service', _ref2 => {\n      let [address, port] = _ref2;\n      const store = storage.getStore();\n      const span = this.startSpan('dns.lookup_service', {\n        'resource.name': `${address}:${port}`,\n        'dns.address': address,\n        'dns.port': port\n      }, store);\n      this.enter(span, store);\n    });\n    this.addSubs('resolve', _ref3 => {\n      let [hostname, maybeType] = _ref3;\n      const store = storage.getStore();\n      const rrtype = typeof maybeType === 'string' ? maybeType : 'A';\n      const span = this.startSpan('dns.resolve', {\n        'resource.name': `${rrtype} ${hostname}`,\n        'dns.hostname': hostname,\n        'dns.rrtype': rrtype\n      }, store);\n      this.enter(span, store);\n    });\n    this.addSubs('reverse', _ref4 => {\n      let [ip] = _ref4;\n      const store = storage.getStore();\n      const span = this.startSpan('dns.reverse', {\n        'resource.name': ip,\n        'dns.ip': ip\n      }, store);\n      this.enter(span, store);\n    });\n  }\n\n}\n\nfunction defaultFinish() {\n  storage.getStore().span.finish();\n}\n\nfunction errorHandler(error) {\n  storage.getStore().span.setTag('error', error);\n}\n\nmodule.exports = DNSPlugin;","map":{"version":3,"names":["analyticsSampler","require","Plugin","storage","DNSPlugin","name","addSubs","func","start","finish","defaultFinish","addSub","errorHandler","startSpan","customTags","store","tags","config","service","tracer","_service","tag","span","childOf","sample","measured","constructor","hostname","getStore","enter","result","Array","isArray","addresses","map","address","sort","setTag","join","port","maybeType","rrtype","ip","error","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-dns/src/index.js"],"sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\n\nclass DNSPlugin extends Plugin {\n  static get name () {\n    return 'dns'\n  }\n\n  addSubs (func, start, finish = defaultFinish) {\n    this.addSub(`apm:dns:${func}:start`, start)\n    this.addSub(`apm:dns:${func}:error`, errorHandler)\n    this.addSub(`apm:dns:${func}:finish`, finish)\n  }\n\n  startSpan (name, customTags, store) {\n    const tags = {\n      'service.name': this.config.service || this.tracer._service,\n      'span.kind': 'client'\n    }\n    for (const tag in customTags) {\n      tags[tag] = customTags[tag]\n    }\n    const span = this.tracer.startSpan(name, {\n      childOf: store ? store.span : null,\n      tags\n    })\n    analyticsSampler.sample(span, this.config.measured)\n    return span\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSubs('lookup', ([hostname]) => {\n      const store = storage.getStore()\n      const span = this.startSpan('dns.lookup', {\n        'resource.name': hostname,\n        'dns.hostname': hostname\n      }, store)\n      this.enter(span, store)\n    }, (result) => {\n      const { span } = storage.getStore()\n\n      if (Array.isArray(result)) {\n        const addresses = Array.isArray(result)\n          ? result.map(address => address.address).sort()\n          : [result]\n\n        span.setTag('dns.address', addresses[0])\n        span.setTag('dns.addresses', addresses.join(','))\n      } else {\n        span.setTag('dns.address', result)\n      }\n\n      span.finish()\n    })\n\n    this.addSubs('lookup_service', ([address, port]) => {\n      const store = storage.getStore()\n      const span = this.startSpan('dns.lookup_service', {\n        'resource.name': `${address}:${port}`,\n        'dns.address': address,\n        'dns.port': port\n      }, store)\n      this.enter(span, store)\n    })\n\n    this.addSubs('resolve', ([hostname, maybeType]) => {\n      const store = storage.getStore()\n      const rrtype = typeof maybeType === 'string' ? maybeType : 'A'\n      const span = this.startSpan('dns.resolve', {\n        'resource.name': `${rrtype} ${hostname}`,\n        'dns.hostname': hostname,\n        'dns.rrtype': rrtype\n      }, store)\n      this.enter(span, store)\n    })\n\n    this.addSubs('reverse', ([ip]) => {\n      const store = storage.getStore()\n      const span = this.startSpan('dns.reverse', { 'resource.name': ip, 'dns.ip': ip }, store)\n      this.enter(span, store)\n    })\n  }\n}\n\nfunction defaultFinish () {\n  storage.getStore().span.finish()\n}\n\nfunction errorHandler (error) {\n  storage.getStore().span.setTag('error', error)\n}\n\nmodule.exports = DNSPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}