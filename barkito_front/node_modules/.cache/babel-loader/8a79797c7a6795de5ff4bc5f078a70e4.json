{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../../../src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../../../../datadog-core');\n\nconst {\n  getFirstNonDDPathAndLine\n} = require('./../path-line');\n\nconst {\n  createVulnerability,\n  addVulnerability\n} = require('../vulnerability-reporter');\n\nconst {\n  getIastContext\n} = require('../iast-context');\n\nconst overheadController = require('../overhead-controller');\n\nclass Analyzer extends Plugin {\n  constructor(type) {\n    super();\n    this._type = type;\n  }\n\n  _isVulnerable(value, context) {\n    return false;\n  }\n\n  _report(value, context) {\n    const evidence = this._getEvidence(value);\n\n    const location = this._getLocation();\n\n    const spanId = context && context.rootSpan && context.rootSpan.context().toSpanId();\n    const vulnerability = createVulnerability(this._type, evidence, spanId, location);\n    addVulnerability(context, vulnerability);\n  }\n\n  _getEvidence(value) {\n    return {\n      value\n    };\n  }\n\n  _getLocation() {\n    return getFirstNonDDPathAndLine();\n  }\n\n  analyze(value) {\n    const iastContext = getIastContext(storage.getStore());\n\n    if (iastContext && this._isVulnerable(value, iastContext) && this._checkOCE(iastContext)) {\n      this._report(value, iastContext);\n    }\n  }\n\n  _checkOCE(context) {\n    return overheadController.hasQuota(overheadController.OPERATIONS.REPORT_VULNERABILITY, context);\n  }\n\n}\n\nmodule.exports = Analyzer;","map":{"version":3,"names":["Plugin","require","storage","getFirstNonDDPathAndLine","createVulnerability","addVulnerability","getIastContext","overheadController","Analyzer","constructor","type","_type","_isVulnerable","value","context","_report","evidence","_getEvidence","location","_getLocation","spanId","rootSpan","toSpanId","vulnerability","analyze","iastContext","getStore","_checkOCE","hasQuota","OPERATIONS","REPORT_VULNERABILITY","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/iast/analyzers/vulnerability-analyzer.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../../../src/plugins/plugin')\nconst { storage } = require('../../../../../datadog-core')\nconst { getFirstNonDDPathAndLine } = require('./../path-line')\nconst { createVulnerability, addVulnerability } = require('../vulnerability-reporter')\nconst { getIastContext } = require('../iast-context')\nconst overheadController = require('../overhead-controller')\n\nclass Analyzer extends Plugin {\n  constructor (type) {\n    super()\n    this._type = type\n  }\n\n  _isVulnerable (value, context) {\n    return false\n  }\n\n  _report (value, context) {\n    const evidence = this._getEvidence(value)\n    const location = this._getLocation()\n    const spanId = context && context.rootSpan && context.rootSpan.context().toSpanId()\n    const vulnerability = createVulnerability(this._type, evidence, spanId, location)\n    addVulnerability(context, vulnerability)\n  }\n\n  _getEvidence (value) {\n    return { value }\n  }\n\n  _getLocation () {\n    return getFirstNonDDPathAndLine()\n  }\n\n  analyze (value) {\n    const iastContext = getIastContext(storage.getStore())\n    if (iastContext && this._isVulnerable(value, iastContext) && this._checkOCE(iastContext)) {\n      this._report(value, iastContext)\n    }\n  }\n\n  _checkOCE (context) {\n    return overheadController.hasQuota(overheadController.OPERATIONS.REPORT_VULNERABILITY, context)\n  }\n}\n\nmodule.exports = Analyzer\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gCAAD,CAAtB;;AACA,MAAM;EAAEC;AAAF,IAAcD,OAAO,CAAC,6BAAD,CAA3B;;AACA,MAAM;EAAEE;AAAF,IAA+BF,OAAO,CAAC,gBAAD,CAA5C;;AACA,MAAM;EAAEG,mBAAF;EAAuBC;AAAvB,IAA4CJ,OAAO,CAAC,2BAAD,CAAzD;;AACA,MAAM;EAAEK;AAAF,IAAqBL,OAAO,CAAC,iBAAD,CAAlC;;AACA,MAAMM,kBAAkB,GAAGN,OAAO,CAAC,wBAAD,CAAlC;;AAEA,MAAMO,QAAN,SAAuBR,MAAvB,CAA8B;EAC5BS,WAAW,CAAEC,IAAF,EAAQ;IACjB;IACA,KAAKC,KAAL,GAAaD,IAAb;EACD;;EAEDE,aAAa,CAAEC,KAAF,EAASC,OAAT,EAAkB;IAC7B,OAAO,KAAP;EACD;;EAEDC,OAAO,CAAEF,KAAF,EAASC,OAAT,EAAkB;IACvB,MAAME,QAAQ,GAAG,KAAKC,YAAL,CAAkBJ,KAAlB,CAAjB;;IACA,MAAMK,QAAQ,GAAG,KAAKC,YAAL,EAAjB;;IACA,MAAMC,MAAM,GAAGN,OAAO,IAAIA,OAAO,CAACO,QAAnB,IAA+BP,OAAO,CAACO,QAAR,CAAiBP,OAAjB,GAA2BQ,QAA3B,EAA9C;IACA,MAAMC,aAAa,GAAGnB,mBAAmB,CAAC,KAAKO,KAAN,EAAaK,QAAb,EAAuBI,MAAvB,EAA+BF,QAA/B,CAAzC;IACAb,gBAAgB,CAACS,OAAD,EAAUS,aAAV,CAAhB;EACD;;EAEDN,YAAY,CAAEJ,KAAF,EAAS;IACnB,OAAO;MAAEA;IAAF,CAAP;EACD;;EAEDM,YAAY,GAAI;IACd,OAAOhB,wBAAwB,EAA/B;EACD;;EAEDqB,OAAO,CAAEX,KAAF,EAAS;IACd,MAAMY,WAAW,GAAGnB,cAAc,CAACJ,OAAO,CAACwB,QAAR,EAAD,CAAlC;;IACA,IAAID,WAAW,IAAI,KAAKb,aAAL,CAAmBC,KAAnB,EAA0BY,WAA1B,CAAf,IAAyD,KAAKE,SAAL,CAAeF,WAAf,CAA7D,EAA0F;MACxF,KAAKV,OAAL,CAAaF,KAAb,EAAoBY,WAApB;IACD;EACF;;EAEDE,SAAS,CAAEb,OAAF,EAAW;IAClB,OAAOP,kBAAkB,CAACqB,QAAnB,CAA4BrB,kBAAkB,CAACsB,UAAnB,CAA8BC,oBAA1D,EAAgFhB,OAAhF,CAAP;EACD;;AAnC2B;;AAsC9BiB,MAAM,CAACC,OAAP,GAAiBxB,QAAjB"},"metadata":{},"sourceType":"script"}