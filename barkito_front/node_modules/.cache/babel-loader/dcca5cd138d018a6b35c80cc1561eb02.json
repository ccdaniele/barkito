{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst startCh = channel('apm:pg:query:start');\nconst finishCh = channel('apm:pg:query:finish');\nconst errorCh = channel('apm:pg:query:error');\naddHook({\n  name: 'pg',\n  versions: ['>=8.0.3']\n}, pg => {\n  shimmer.wrap(pg.Client.prototype, 'query', query => wrapQuery(query));\n  return pg;\n});\naddHook({\n  name: 'pg',\n  file: 'lib/native/index.js',\n  versions: ['>=8.0.3']\n}, Client => {\n  shimmer.wrap(Client.prototype, 'query', query => wrapQuery(query));\n  return Client;\n});\n\nfunction wrapQuery(query) {\n  return function () {\n    if (!startCh.hasSubscribers) {\n      return query.apply(this, arguments);\n    }\n\n    const retval = query.apply(this, arguments);\n    const queryQueue = this.queryQueue || this._queryQueue;\n    const activeQuery = this.activeQuery || this._activeQuery;\n    const pgQuery = queryQueue[queryQueue.length - 1] || activeQuery;\n\n    if (!pgQuery) {\n      return retval;\n    }\n\n    const statement = pgQuery.text;\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        params: this.connectionParameters,\n        statement\n      });\n      const finish = asyncResource.bind(function (error) {\n        if (error) {\n          errorCh.publish(error);\n        }\n\n        finishCh.publish();\n      });\n\n      if (pgQuery.callback) {\n        const originalCallback = callbackResource.bind(pgQuery.callback);\n\n        pgQuery.callback = function (err, res) {\n          finish(err);\n          return originalCallback.apply(this, arguments);\n        };\n      } else if (pgQuery.once) {\n        pgQuery.once('error', finish).once('end', () => finish());\n      } else {\n        pgQuery.then(() => finish(), finish);\n      }\n\n      try {\n        return retval;\n      } catch (err) {\n        errorCh.publish(err);\n      }\n    });\n  };\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","startCh","finishCh","errorCh","name","versions","pg","wrap","Client","prototype","query","wrapQuery","file","hasSubscribers","apply","arguments","retval","queryQueue","_queryQueue","activeQuery","_activeQuery","pgQuery","length","statement","text","callbackResource","asyncResource","runInAsyncScope","publish","params","connectionParameters","finish","bind","error","callback","originalCallback","err","res","once","then"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/pg.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\nconst startCh = channel('apm:pg:query:start')\nconst finishCh = channel('apm:pg:query:finish')\nconst errorCh = channel('apm:pg:query:error')\n\naddHook({ name: 'pg', versions: ['>=8.0.3'] }, pg => {\n  shimmer.wrap(pg.Client.prototype, 'query', query => wrapQuery(query))\n  return pg\n})\n\naddHook({ name: 'pg', file: 'lib/native/index.js', versions: ['>=8.0.3'] }, Client => {\n  shimmer.wrap(Client.prototype, 'query', query => wrapQuery(query))\n  return Client\n})\n\nfunction wrapQuery (query) {\n  return function () {\n    if (!startCh.hasSubscribers) {\n      return query.apply(this, arguments)\n    }\n\n    const retval = query.apply(this, arguments)\n\n    const queryQueue = this.queryQueue || this._queryQueue\n    const activeQuery = this.activeQuery || this._activeQuery\n    const pgQuery = queryQueue[queryQueue.length - 1] || activeQuery\n\n    if (!pgQuery) {\n      return retval\n    }\n\n    const statement = pgQuery.text\n    const callbackResource = new AsyncResource('bound-anonymous-fn')\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({ params: this.connectionParameters, statement })\n\n      const finish = asyncResource.bind(function (error) {\n        if (error) {\n          errorCh.publish(error)\n        }\n        finishCh.publish()\n      })\n\n      if (pgQuery.callback) {\n        const originalCallback = callbackResource.bind(pgQuery.callback)\n        pgQuery.callback = function (err, res) {\n          finish(err)\n          return originalCallback.apply(this, arguments)\n        }\n      } else if (pgQuery.once) {\n        pgQuery\n          .once('error', finish)\n          .once('end', () => finish())\n      } else {\n        pgQuery.then(() => finish(), finish)\n      }\n\n      try {\n        return retval\n      } catch (err) {\n        errorCh.publish(err)\n      }\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}