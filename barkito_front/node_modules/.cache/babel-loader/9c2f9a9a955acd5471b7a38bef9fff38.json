{"ast":null,"code":"'use strict';\n\nconst log = require('../../../dd-trace/src/log');\n\nconst BaseAwsSdkPlugin = require('../base');\n\nclass Lambda extends BaseAwsSdkPlugin {\n  generateTags(params, operation, response) {\n    const tags = {};\n    if (!params || !params.FunctionName) return tags;\n    return Object.assign(tags, {\n      'resource.name': `${operation} ${params.FunctionName}`,\n      'aws.lambda': params.FunctionName\n    });\n  }\n\n  requestInject(span, request) {\n    const operation = request.operation;\n\n    if (operation === 'invoke') {\n      if (!request.params) {\n        request.params = {};\n      }\n\n      const isSyncInvocation = !request.params.InvocationType || request.params.InvocationType === 'RequestResponse';\n\n      if (isSyncInvocation) {\n        try {\n          // Check to see if there's already a config on the request\n          let clientContext = {};\n\n          if (request.params.ClientContext) {\n            const clientContextJson = Buffer.from(request.params.ClientContext, 'base64').toString('utf-8');\n            clientContext = JSON.parse(clientContextJson);\n          }\n\n          if (!clientContext.custom) {\n            clientContext.custom = {};\n          }\n\n          this.tracer.inject(span, 'text_map', clientContext.custom);\n          const newContextBase64 = Buffer.from(JSON.stringify(clientContext)).toString('base64');\n          request.params.ClientContext = newContextBase64;\n        } catch (err) {\n          log.error(err);\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Lambda;","map":{"version":3,"names":["log","require","BaseAwsSdkPlugin","Lambda","generateTags","params","operation","response","tags","FunctionName","Object","assign","requestInject","span","request","isSyncInvocation","InvocationType","clientContext","ClientContext","clientContextJson","Buffer","from","toString","JSON","parse","custom","tracer","inject","newContextBase64","stringify","err","error","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-aws-sdk/src/services/lambda.js"],"sourcesContent":["'use strict'\n\nconst log = require('../../../dd-trace/src/log')\nconst BaseAwsSdkPlugin = require('../base')\n\nclass Lambda extends BaseAwsSdkPlugin {\n  generateTags (params, operation, response) {\n    const tags = {}\n\n    if (!params || !params.FunctionName) return tags\n\n    return Object.assign(tags, {\n      'resource.name': `${operation} ${params.FunctionName}`,\n      'aws.lambda': params.FunctionName\n    })\n  }\n\n  requestInject (span, request) {\n    const operation = request.operation\n    if (operation === 'invoke') {\n      if (!request.params) {\n        request.params = {}\n      }\n\n      const isSyncInvocation = !request.params.InvocationType ||\n        request.params.InvocationType === 'RequestResponse'\n\n      if (isSyncInvocation) {\n        try {\n          // Check to see if there's already a config on the request\n          let clientContext = {}\n          if (request.params.ClientContext) {\n            const clientContextJson = Buffer.from(request.params.ClientContext, 'base64').toString('utf-8')\n            clientContext = JSON.parse(clientContextJson)\n          }\n          if (!clientContext.custom) {\n            clientContext.custom = {}\n          }\n          this.tracer.inject(span, 'text_map', clientContext.custom)\n          const newContextBase64 = Buffer.from(JSON.stringify(clientContext)).toString('base64')\n          request.params.ClientContext = newContextBase64\n        } catch (err) {\n          log.error(err)\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Lambda\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,2BAAD,CAAnB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,SAAD,CAAhC;;AAEA,MAAME,MAAN,SAAqBD,gBAArB,CAAsC;EACpCE,YAAY,CAAEC,MAAF,EAAUC,SAAV,EAAqBC,QAArB,EAA+B;IACzC,MAAMC,IAAI,GAAG,EAAb;IAEA,IAAI,CAACH,MAAD,IAAW,CAACA,MAAM,CAACI,YAAvB,EAAqC,OAAOD,IAAP;IAErC,OAAOE,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoB;MACzB,iBAAkB,GAAEF,SAAU,IAAGD,MAAM,CAACI,YAAa,EAD5B;MAEzB,cAAcJ,MAAM,CAACI;IAFI,CAApB,CAAP;EAID;;EAEDG,aAAa,CAAEC,IAAF,EAAQC,OAAR,EAAiB;IAC5B,MAAMR,SAAS,GAAGQ,OAAO,CAACR,SAA1B;;IACA,IAAIA,SAAS,KAAK,QAAlB,EAA4B;MAC1B,IAAI,CAACQ,OAAO,CAACT,MAAb,EAAqB;QACnBS,OAAO,CAACT,MAAR,GAAiB,EAAjB;MACD;;MAED,MAAMU,gBAAgB,GAAG,CAACD,OAAO,CAACT,MAAR,CAAeW,cAAhB,IACvBF,OAAO,CAACT,MAAR,CAAeW,cAAf,KAAkC,iBADpC;;MAGA,IAAID,gBAAJ,EAAsB;QACpB,IAAI;UACF;UACA,IAAIE,aAAa,GAAG,EAApB;;UACA,IAAIH,OAAO,CAACT,MAAR,CAAea,aAAnB,EAAkC;YAChC,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYP,OAAO,CAACT,MAAR,CAAea,aAA3B,EAA0C,QAA1C,EAAoDI,QAApD,CAA6D,OAA7D,CAA1B;YACAL,aAAa,GAAGM,IAAI,CAACC,KAAL,CAAWL,iBAAX,CAAhB;UACD;;UACD,IAAI,CAACF,aAAa,CAACQ,MAAnB,EAA2B;YACzBR,aAAa,CAACQ,MAAd,GAAuB,EAAvB;UACD;;UACD,KAAKC,MAAL,CAAYC,MAAZ,CAAmBd,IAAnB,EAAyB,UAAzB,EAAqCI,aAAa,CAACQ,MAAnD;UACA,MAAMG,gBAAgB,GAAGR,MAAM,CAACC,IAAP,CAAYE,IAAI,CAACM,SAAL,CAAeZ,aAAf,CAAZ,EAA2CK,QAA3C,CAAoD,QAApD,CAAzB;UACAR,OAAO,CAACT,MAAR,CAAea,aAAf,GAA+BU,gBAA/B;QACD,CAbD,CAaE,OAAOE,GAAP,EAAY;UACZ9B,GAAG,CAAC+B,KAAJ,CAAUD,GAAV;QACD;MACF;IACF;EACF;;AAzCmC;;AA4CtCE,MAAM,CAACC,OAAP,GAAiB9B,MAAjB"},"metadata":{},"sourceType":"script"}