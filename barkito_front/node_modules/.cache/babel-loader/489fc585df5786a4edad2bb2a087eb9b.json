{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nclass Amqp10Plugin extends Plugin {\n  static get name() {\n    return 'amqp10';\n  }\n\n  constructor() {\n    super(...arguments);\n    this.addSub(`apm:amqp10:send:start`, _ref => {\n      let {\n        link\n      } = _ref;\n      const address = getAddress(link);\n      const target = getShortName(link);\n      const store = storage.getStore();\n      const childOf = store ? store.span : store;\n      const span = this.tracer.startSpan('amqp.send', {\n        childOf,\n        tags: {\n          'resource.name': ['send', target].filter(v => v).join(' '),\n          'span.kind': 'producer',\n          'amqp.link.target.address': target,\n          'amqp.link.role': 'sender',\n          'out.host': address.host,\n          'out.port': address.port,\n          'service.name': this.config.service || `${this.tracer._service}-amqp`,\n          'amqp.link.name': link.name,\n          'amqp.link.handle': link.handle,\n          'amqp.connection.host': address.host,\n          'amqp.connection.port': address.port,\n          'amqp.connection.user': address.user\n        }\n      });\n      analyticsSampler.sample(span, this.config.measured);\n      this.enter(span, store);\n    });\n    this.addSub(`apm:amqp10:send:error`, err => {\n      const span = storage.getStore().span;\n      span.setTag('error', err);\n    });\n    this.addSub(`apm:amqp10:send:finish`, () => {\n      const span = storage.getStore().span;\n      span.finish();\n    });\n    this.addSub(`apm:amqp10:receive:start`, _ref2 => {\n      let {\n        link\n      } = _ref2;\n      const source = getShortName(link);\n      const address = getAddress(link);\n      const store = storage.getStore();\n      const childOf = store ? store.span : store;\n      const span = this.tracer.startSpan('amqp.receive', {\n        childOf,\n        tags: {\n          'resource.name': ['receive', source].filter(v => v).join(' '),\n          'span.kind': 'consumer',\n          'span.type': 'worker',\n          'amqp.link.source.address': source,\n          'amqp.link.role': 'receiver',\n          'service.name': this.config.service || `${this.tracer._service}-amqp`,\n          'amqp.link.name': link.name,\n          'amqp.link.handle': link.handle,\n          'amqp.connection.host': address.host,\n          'amqp.connection.port': address.port,\n          'amqp.connection.user': address.user\n        }\n      });\n      analyticsSampler.sample(span, this.config.measured);\n      this.enter(span, store);\n    });\n    this.addSub(`apm:amqp10:receive:finish`, () => {\n      storage.getStore().span.finish();\n    });\n    this.addSub(`apm:amqp10:receive:error`, err => {\n      const span = storage.getStore().span;\n      span.setTag('error', err);\n    });\n  }\n\n}\n\nfunction getShortName(link) {\n  if (!link || !link.name) return null;\n  return link.name.split('_').slice(0, -1).join('_');\n}\n\nfunction getAddress(link) {\n  if (!link || !link.session || !link.session.connection) return {};\n  return link.session.connection.address || {};\n}\n\nmodule.exports = Amqp10Plugin;","map":{"version":3,"names":["Plugin","require","storage","analyticsSampler","Amqp10Plugin","name","constructor","addSub","link","address","getAddress","target","getShortName","store","getStore","childOf","span","tracer","startSpan","tags","filter","v","join","host","port","config","service","_service","handle","user","sample","measured","enter","err","setTag","finish","source","split","slice","session","connection","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-amqp10/src/index.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nclass Amqp10Plugin extends Plugin {\n  static get name () {\n    return 'amqp10'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSub(`apm:amqp10:send:start`, ({ link }) => {\n      const address = getAddress(link)\n      const target = getShortName(link)\n\n      const store = storage.getStore()\n      const childOf = store ? store.span : store\n\n      const span = this.tracer.startSpan('amqp.send', {\n        childOf,\n        tags: {\n          'resource.name': ['send', target].filter(v => v).join(' '),\n          'span.kind': 'producer',\n          'amqp.link.target.address': target,\n          'amqp.link.role': 'sender',\n          'out.host': address.host,\n          'out.port': address.port,\n          'service.name': this.config.service || `${this.tracer._service}-amqp`,\n          'amqp.link.name': link.name,\n          'amqp.link.handle': link.handle,\n          'amqp.connection.host': address.host,\n          'amqp.connection.port': address.port,\n          'amqp.connection.user': address.user\n        }\n      })\n\n      analyticsSampler.sample(span, this.config.measured)\n\n      this.enter(span, store)\n    })\n\n    this.addSub(`apm:amqp10:send:error`, err => {\n      const span = storage.getStore().span\n      span.setTag('error', err)\n    })\n\n    this.addSub(`apm:amqp10:send:finish`, () => {\n      const span = storage.getStore().span\n      span.finish()\n    })\n\n    this.addSub(`apm:amqp10:receive:start`, ({ link }) => {\n      const source = getShortName(link)\n      const address = getAddress(link)\n\n      const store = storage.getStore()\n      const childOf = store ? store.span : store\n\n      const span = this.tracer.startSpan('amqp.receive', {\n        childOf,\n        tags: {\n          'resource.name': ['receive', source].filter(v => v).join(' '),\n          'span.kind': 'consumer',\n          'span.type': 'worker',\n          'amqp.link.source.address': source,\n          'amqp.link.role': 'receiver',\n          'service.name': this.config.service || `${this.tracer._service}-amqp`,\n          'amqp.link.name': link.name,\n          'amqp.link.handle': link.handle,\n          'amqp.connection.host': address.host,\n          'amqp.connection.port': address.port,\n          'amqp.connection.user': address.user\n        }\n      })\n\n      analyticsSampler.sample(span, this.config.measured)\n\n      this.enter(span, store)\n    })\n\n    this.addSub(`apm:amqp10:receive:finish`, () => {\n      storage.getStore().span.finish()\n    })\n\n    this.addSub(`apm:amqp10:receive:error`, err => {\n      const span = storage.getStore().span\n      span.setTag('error', err)\n    })\n  }\n}\n\nfunction getShortName (link) {\n  if (!link || !link.name) return null\n\n  return link.name.split('_').slice(0, -1).join('_')\n}\n\nfunction getAddress (link) {\n  if (!link || !link.session || !link.session.connection) return {}\n\n  return link.session.connection.address || {}\n}\n\nmodule.exports = Amqp10Plugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}