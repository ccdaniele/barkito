{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst Tags = require('../../../ext/tags');\n\nconst {\n  TEXT_MAP\n} = require('../../../ext/formats');\n\nconst {\n  addMethodTags,\n  addMetadataTags,\n  getFilter\n} = require('./util');\n\nclass GrpcServerPlugin extends Plugin {\n  static get name() {\n    return 'http';\n  }\n\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.addSub('apm:grpc:server:request:start', _ref => {\n      let {\n        name,\n        metadata,\n        type\n      } = _ref;\n      const metadataFilter = this.config.metadataFilter;\n      const store = storage.getStore();\n      const childOf = extract(this.tracer, metadata);\n      const span = this.tracer.startSpan('grpc.server', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: 'server',\n          'span.type': 'web',\n          'resource.name': name,\n          'service.name': this.config.service || this.tracer._service,\n          'component': 'grpc'\n        }\n      });\n      addMethodTags(span, name, type);\n      addMetadataTags(span, metadata, metadataFilter, 'request');\n      analyticsSampler.sample(span, this.config.measured, true);\n      this.enter(span, store);\n    });\n    this.addSub('apm:grpc:server:request:error', error => {\n      const store = storage.getStore();\n      if (!store || !store.span) return;\n      this.addCode(store.span, error.code);\n      this.addError(error);\n    });\n    this.addSub('apm:grpc:server:request:update', _ref2 => {\n      let {\n        code\n      } = _ref2;\n      const store = storage.getStore();\n      if (!store || !store.span) return;\n      this.addCode(store.span, code);\n    });\n    this.addSub('apm:grpc:server:request:finish', function () {\n      let {\n        code,\n        trailer\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const store = storage.getStore();\n      if (!store || !store.span) return;\n      const span = store.span;\n      const metadataFilter = _this.config.metadataFilter;\n\n      _this.addCode(span, code);\n\n      if (trailer && metadataFilter) {\n        addMetadataTags(span, trailer, metadataFilter, 'response');\n      }\n\n      store.span.finish();\n    });\n  }\n\n  configure(config) {\n    const metadataFilter = getFilter(config, 'metadata');\n    return super.configure({ ...config,\n      metadataFilter\n    });\n  }\n\n  addCode(span, code) {\n    if (code !== undefined) {\n      span.setTag('grpc.status.code', code);\n    }\n  }\n\n}\n\nfunction extract(tracer, metadata) {\n  if (!metadata || typeof metadata.getMap !== 'function') return null;\n  return tracer.extract(TEXT_MAP, metadata.getMap());\n}\n\nmodule.exports = GrpcServerPlugin;","map":{"version":3,"names":["Plugin","require","storage","analyticsSampler","Tags","TEXT_MAP","addMethodTags","addMetadataTags","getFilter","GrpcServerPlugin","name","constructor","addSub","metadata","type","metadataFilter","config","store","getStore","childOf","extract","tracer","span","startSpan","tags","SPAN_KIND","service","_service","sample","measured","enter","error","addCode","code","addError","trailer","finish","configure","undefined","setTag","getMap","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-grpc/src/server.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst Tags = require('../../../ext/tags')\nconst { TEXT_MAP } = require('../../../ext/formats')\nconst { addMethodTags, addMetadataTags, getFilter } = require('./util')\n\nclass GrpcServerPlugin extends Plugin {\n  static get name () {\n    return 'http'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSub('apm:grpc:server:request:start', ({ name, metadata, type }) => {\n      const metadataFilter = this.config.metadataFilter\n      const store = storage.getStore()\n      const childOf = extract(this.tracer, metadata)\n      const span = this.tracer.startSpan('grpc.server', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: 'server',\n          'span.type': 'web',\n          'resource.name': name,\n          'service.name': this.config.service || this.tracer._service,\n          'component': 'grpc'\n        }\n      })\n\n      addMethodTags(span, name, type)\n      addMetadataTags(span, metadata, metadataFilter, 'request')\n\n      analyticsSampler.sample(span, this.config.measured, true)\n\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:grpc:server:request:error', error => {\n      const store = storage.getStore()\n\n      if (!store || !store.span) return\n\n      this.addCode(store.span, error.code)\n      this.addError(error)\n    })\n\n    this.addSub('apm:grpc:server:request:update', ({ code }) => {\n      const store = storage.getStore()\n\n      if (!store || !store.span) return\n\n      this.addCode(store.span, code)\n    })\n\n    this.addSub('apm:grpc:server:request:finish', ({ code, trailer } = {}) => {\n      const store = storage.getStore()\n\n      if (!store || !store.span) return\n\n      const span = store.span\n      const metadataFilter = this.config.metadataFilter\n\n      this.addCode(span, code)\n\n      if (trailer && metadataFilter) {\n        addMetadataTags(span, trailer, metadataFilter, 'response')\n      }\n\n      store.span.finish()\n    })\n  }\n\n  configure (config) {\n    const metadataFilter = getFilter(config, 'metadata')\n\n    return super.configure({ ...config, metadataFilter })\n  }\n\n  addCode (span, code) {\n    if (code !== undefined) {\n      span.setTag('grpc.status.code', code)\n    }\n  }\n}\n\nfunction extract (tracer, metadata) {\n  if (!metadata || typeof metadata.getMap !== 'function') return null\n\n  return tracer.extract(TEXT_MAP, metadata.getMap())\n}\n\nmodule.exports = GrpcServerPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}