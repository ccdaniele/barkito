{"ast":null,"code":"'use strict';\n\nconst ClientPlugin = require('./client');\n\nclass StoragePlugin extends ClientPlugin {\n  constructor() {\n    super(...arguments);\n    this.system = this.constructor.system || this.component;\n    this.addTraceSub('connect', message => {\n      this.connect(message);\n    });\n  }\n\n  startSpan(name, options) {\n    if (!options.service && this.system) {\n      options.service = `${this.tracer._service}-${this.system}`;\n    }\n\n    return super.startSpan(name, options);\n  }\n\n}\n\nmodule.exports = StoragePlugin;","map":{"version":3,"names":["ClientPlugin","require","StoragePlugin","constructor","system","component","addTraceSub","message","connect","startSpan","name","options","service","tracer","_service","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/plugins/storage.js"],"sourcesContent":["'use strict'\n\nconst ClientPlugin = require('./client')\n\nclass StoragePlugin extends ClientPlugin {\n  constructor (...args) {\n    super(...args)\n\n    this.system = this.constructor.system || this.component\n\n    this.addTraceSub('connect', message => {\n      this.connect(message)\n    })\n  }\n\n  startSpan (name, options) {\n    if (!options.service && this.system) {\n      options.service = `${this.tracer._service}-${this.system}`\n    }\n\n    return super.startSpan(name, options)\n  }\n}\n\nmodule.exports = StoragePlugin\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AAEA,MAAMC,aAAN,SAA4BF,YAA5B,CAAyC;EACvCG,WAAW,GAAW;IACpB,MAAM,YAAN;IAEA,KAAKC,MAAL,GAAc,KAAKD,WAAL,CAAiBC,MAAjB,IAA2B,KAAKC,SAA9C;IAEA,KAAKC,WAAL,CAAiB,SAAjB,EAA4BC,OAAO,IAAI;MACrC,KAAKC,OAAL,CAAaD,OAAb;IACD,CAFD;EAGD;;EAEDE,SAAS,CAAEC,IAAF,EAAQC,OAAR,EAAiB;IACxB,IAAI,CAACA,OAAO,CAACC,OAAT,IAAoB,KAAKR,MAA7B,EAAqC;MACnCO,OAAO,CAACC,OAAR,GAAmB,GAAE,KAAKC,MAAL,CAAYC,QAAS,IAAG,KAAKV,MAAO,EAAzD;IACD;;IAED,OAAO,MAAMK,SAAN,CAAgBC,IAAhB,EAAsBC,OAAtB,CAAP;EACD;;AAjBsC;;AAoBzCI,MAAM,CAACC,OAAP,GAAiBd,aAAjB"},"metadata":{},"sourceType":"script"}