{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst producerStartCh = channel('apm:kafkajs:produce:start');\nconst producerFinishCh = channel('apm:kafkajs:produce:finish');\nconst producerErrorCh = channel('apm:kafkajs:produce:error');\nconst consumerStartCh = channel('apm:kafkajs:consume:start');\nconst consumerFinishCh = channel('apm:kafkajs:consume:finish');\nconst consumerErrorCh = channel('apm:kafkajs:consume:error');\naddHook({\n  name: 'kafkajs',\n  versions: ['>=1.4']\n}, obj => {\n  const Kafka = obj.Kafka;\n  shimmer.wrap(Kafka.prototype, 'producer', createProducer => function () {\n    const producer = createProducer.apply(this, arguments);\n    const send = producer.send;\n\n    producer.send = function () {\n      const innerAsyncResource = new AsyncResource('bound-anonymous-fn');\n      return innerAsyncResource.runInAsyncScope(() => {\n        if (!producerStartCh.hasSubscribers) {\n          return send.apply(this, arguments);\n        }\n\n        try {\n          const {\n            topic,\n            messages = []\n          } = arguments[0];\n\n          for (const message of messages) {\n            if (typeof message === 'object') {\n              message.headers = message.headers || {};\n            }\n          }\n\n          producerStartCh.publish({\n            topic,\n            messages\n          });\n          const result = send.apply(this, arguments);\n          result.then(innerAsyncResource.bind(() => producerFinishCh.publish(undefined)), innerAsyncResource.bind(err => {\n            if (err) {\n              producerErrorCh.publish(err);\n            }\n\n            producerFinishCh.publish(undefined);\n          }));\n          return result;\n        } catch (e) {\n          producerErrorCh.publish(e);\n          producerFinishCh.publish(undefined);\n          throw e;\n        }\n      });\n    };\n\n    return producer;\n  });\n  shimmer.wrap(Kafka.prototype, 'consumer', createConsumer => function () {\n    if (!consumerStartCh.hasSubscribers) {\n      return createConsumer.apply(this, arguments);\n    }\n\n    const consumer = createConsumer.apply(this, arguments);\n    const run = consumer.run;\n\n    consumer.run = function (_ref) {\n      let {\n        eachMessage,\n        ...runArgs\n      } = _ref;\n      if (typeof eachMessage !== 'function') return run({\n        eachMessage,\n        ...runArgs\n      });\n      return run({\n        eachMessage: function () {\n          for (var _len = arguments.length, eachMessageArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n            eachMessageArgs[_key] = arguments[_key];\n          }\n\n          const innerAsyncResource = new AsyncResource('bound-anonymous-fn');\n          return innerAsyncResource.runInAsyncScope(() => {\n            const {\n              topic,\n              partition,\n              message\n            } = eachMessageArgs[0];\n            consumerStartCh.publish({\n              topic,\n              partition,\n              message\n            });\n\n            try {\n              const result = eachMessage.apply(this, eachMessageArgs);\n\n              if (result && typeof result.then === 'function') {\n                result.then(innerAsyncResource.bind(() => consumerFinishCh.publish(undefined)), innerAsyncResource.bind(err => {\n                  if (err) {\n                    consumerErrorCh.publish(err);\n                  }\n\n                  consumerFinishCh.publish(undefined);\n                }));\n              } else {\n                consumerFinishCh.publish(undefined);\n              }\n\n              return result;\n            } catch (e) {\n              consumerErrorCh.publish(e);\n              consumerFinishCh.publish(undefined);\n              throw e;\n            }\n          });\n        },\n        ...runArgs\n      });\n    };\n\n    return consumer;\n  });\n  return obj;\n});","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","producerStartCh","producerFinishCh","producerErrorCh","consumerStartCh","consumerFinishCh","consumerErrorCh","name","versions","obj","Kafka","wrap","prototype","createProducer","producer","apply","arguments","send","innerAsyncResource","runInAsyncScope","hasSubscribers","topic","messages","message","headers","publish","result","then","bind","undefined","err","e","createConsumer","consumer","run","eachMessage","runArgs","eachMessageArgs","partition"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/kafkajs.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\nconst producerStartCh = channel('apm:kafkajs:produce:start')\nconst producerFinishCh = channel('apm:kafkajs:produce:finish')\nconst producerErrorCh = channel('apm:kafkajs:produce:error')\n\nconst consumerStartCh = channel('apm:kafkajs:consume:start')\nconst consumerFinishCh = channel('apm:kafkajs:consume:finish')\nconst consumerErrorCh = channel('apm:kafkajs:consume:error')\n\naddHook({ name: 'kafkajs', versions: ['>=1.4'] }, (obj) => {\n  const Kafka = obj.Kafka\n  shimmer.wrap(Kafka.prototype, 'producer', createProducer => function () {\n    const producer = createProducer.apply(this, arguments)\n    const send = producer.send\n\n    producer.send = function () {\n      const innerAsyncResource = new AsyncResource('bound-anonymous-fn')\n\n      return innerAsyncResource.runInAsyncScope(() => {\n        if (!producerStartCh.hasSubscribers) {\n          return send.apply(this, arguments)\n        }\n\n        try {\n          const { topic, messages = [] } = arguments[0]\n          for (const message of messages) {\n            if (typeof message === 'object') {\n              message.headers = message.headers || {}\n            }\n          }\n          producerStartCh.publish({ topic, messages })\n\n          const result = send.apply(this, arguments)\n\n          result.then(\n            innerAsyncResource.bind(() => producerFinishCh.publish(undefined)),\n            innerAsyncResource.bind(err => {\n              if (err) {\n                producerErrorCh.publish(err)\n              }\n              producerFinishCh.publish(undefined)\n            })\n          )\n\n          return result\n        } catch (e) {\n          producerErrorCh.publish(e)\n          producerFinishCh.publish(undefined)\n          throw e\n        }\n      })\n    }\n    return producer\n  })\n\n  shimmer.wrap(Kafka.prototype, 'consumer', createConsumer => function () {\n    if (!consumerStartCh.hasSubscribers) {\n      return createConsumer.apply(this, arguments)\n    }\n\n    const consumer = createConsumer.apply(this, arguments)\n    const run = consumer.run\n\n    consumer.run = function ({ eachMessage, ...runArgs }) {\n      if (typeof eachMessage !== 'function') return run({ eachMessage, ...runArgs })\n\n      return run({\n        eachMessage: function (...eachMessageArgs) {\n          const innerAsyncResource = new AsyncResource('bound-anonymous-fn')\n          return innerAsyncResource.runInAsyncScope(() => {\n            const { topic, partition, message } = eachMessageArgs[0]\n            consumerStartCh.publish({ topic, partition, message })\n            try {\n              const result = eachMessage.apply(this, eachMessageArgs)\n\n              if (result && typeof result.then === 'function') {\n                result.then(\n                  innerAsyncResource.bind(() => consumerFinishCh.publish(undefined)),\n                  innerAsyncResource.bind(err => {\n                    if (err) {\n                      consumerErrorCh.publish(err)\n                    }\n                    consumerFinishCh.publish(undefined)\n                  })\n                )\n              } else {\n                consumerFinishCh.publish(undefined)\n              }\n\n              return result\n            } catch (e) {\n              consumerErrorCh.publish(e)\n              consumerFinishCh.publish(undefined)\n              throw e\n            }\n          })\n        },\n        ...runArgs\n      })\n    }\n    return consumer\n  })\n  return obj\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}