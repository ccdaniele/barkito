{"ast":null,"code":"'use strict';\n\nconst tagger = {\n  parse(tags) {\n    if (!tags) return {};\n\n    switch (typeof tags) {\n      case 'object':\n        if (Array.isArray(tags)) {\n          return tags.reduce((prev, next) => {\n            const parts = next.split(':');\n            const key = parts.shift().trim();\n            const value = parts.join(':').trim();\n            if (!key || !value) return prev;\n            return Object.assign(prev, {\n              [key]: value\n            });\n          }, {});\n        } else {\n          return tagger.parse(Object.keys(tags).filter(key => tags[key] !== undefined && tags[key] !== null).map(key => `${key}:${tags[key]}`));\n        }\n\n      case 'string':\n        return tagger.parse(tags.split(','));\n\n      default:\n        return {};\n    }\n  }\n\n};\nmodule.exports = {\n  tagger\n};","map":{"version":3,"names":["tagger","parse","tags","Array","isArray","reduce","prev","next","parts","split","key","shift","trim","value","join","Object","assign","keys","filter","undefined","map","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/profiling/tagger.js"],"sourcesContent":["'use strict'\n\nconst tagger = {\n  parse (tags) {\n    if (!tags) return {}\n\n    switch (typeof tags) {\n      case 'object':\n        if (Array.isArray(tags)) {\n          return tags.reduce((prev, next) => {\n            const parts = next.split(':')\n            const key = parts.shift().trim()\n            const value = parts.join(':').trim()\n\n            if (!key || !value) return prev\n\n            return Object.assign(prev, { [key]: value })\n          }, {})\n        } else {\n          return tagger.parse(Object.keys(tags)\n            .filter(key => tags[key] !== undefined && tags[key] !== null)\n            .map(key => `${key}:${tags[key]}`))\n        }\n      case 'string':\n        return tagger.parse(tags.split(','))\n      default:\n        return {}\n    }\n  }\n}\n\nmodule.exports = { tagger }\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG;EACbC,KAAK,CAAEC,IAAF,EAAQ;IACX,IAAI,CAACA,IAAL,EAAW,OAAO,EAAP;;IAEX,QAAQ,OAAOA,IAAf;MACE,KAAK,QAAL;QACE,IAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;UACvB,OAAOA,IAAI,CAACG,MAAL,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;YACjC,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;YACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,KAAN,GAAcC,IAAd,EAAZ;YACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAN,CAAW,GAAX,EAAgBF,IAAhB,EAAd;YAEA,IAAI,CAACF,GAAD,IAAQ,CAACG,KAAb,EAAoB,OAAOP,IAAP;YAEpB,OAAOS,MAAM,CAACC,MAAP,CAAcV,IAAd,EAAoB;cAAE,CAACI,GAAD,GAAOG;YAAT,CAApB,CAAP;UACD,CARM,EAQJ,EARI,CAAP;QASD,CAVD,MAUO;UACL,OAAOb,MAAM,CAACC,KAAP,CAAac,MAAM,CAACE,IAAP,CAAYf,IAAZ,EACjBgB,MADiB,CACVR,GAAG,IAAIR,IAAI,CAACQ,GAAD,CAAJ,KAAcS,SAAd,IAA2BjB,IAAI,CAACQ,GAAD,CAAJ,KAAc,IADtC,EAEjBU,GAFiB,CAEbV,GAAG,IAAK,GAAEA,GAAI,IAAGR,IAAI,CAACQ,GAAD,CAAM,EAFd,CAAb,CAAP;QAGD;;MACH,KAAK,QAAL;QACE,OAAOV,MAAM,CAACC,KAAP,CAAaC,IAAI,CAACO,KAAL,CAAW,GAAX,CAAb,CAAP;;MACF;QACE,OAAO,EAAP;IApBJ;EAsBD;;AA1BY,CAAf;AA6BAY,MAAM,CAACC,OAAP,GAAiB;EAAEtB;AAAF,CAAjB"},"metadata":{},"sourceType":"script"}