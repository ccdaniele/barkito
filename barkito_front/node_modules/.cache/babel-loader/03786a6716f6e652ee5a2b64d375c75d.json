{"ast":null,"code":"'use strict';\n\nconst DatabasePlugin = require('../../dd-trace/src/plugins/database');\n\nclass PGPlugin extends DatabasePlugin {\n  static get name() {\n    return 'pg';\n  }\n\n  static get operation() {\n    return 'query';\n  }\n\n  static get system() {\n    return 'postgres';\n  }\n\n  start(_ref) {\n    let {\n      params = {},\n      statement\n    } = _ref;\n    const service = getServiceName(this.config, params);\n    this.startSpan('pg.query', {\n      service,\n      resource: statement,\n      type: 'sql',\n      kind: 'client',\n      meta: {\n        'db.type': 'postgres',\n        'db.name': params.database,\n        'db.user': params.user,\n        'out.host': params.host,\n        'out.port': params.port\n      }\n    });\n  }\n\n}\n\nfunction getServiceName(config, params) {\n  if (typeof config.service === 'function') {\n    return config.service(params);\n  }\n\n  return config.service;\n}\n\nmodule.exports = PGPlugin;","map":{"version":3,"names":["DatabasePlugin","require","PGPlugin","name","operation","system","start","params","statement","service","getServiceName","config","startSpan","resource","type","kind","meta","database","user","host","port","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-pg/src/index.js"],"sourcesContent":["'use strict'\n\nconst DatabasePlugin = require('../../dd-trace/src/plugins/database')\n\nclass PGPlugin extends DatabasePlugin {\n  static get name () { return 'pg' }\n  static get operation () { return 'query' }\n  static get system () { return 'postgres' }\n\n  start ({ params = {}, statement }) {\n    const service = getServiceName(this.config, params)\n\n    this.startSpan('pg.query', {\n      service,\n      resource: statement,\n      type: 'sql',\n      kind: 'client',\n      meta: {\n        'db.type': 'postgres',\n        'db.name': params.database,\n        'db.user': params.user,\n        'out.host': params.host,\n        'out.port': params.port\n      }\n    })\n  }\n}\n\nfunction getServiceName (config, params) {\n  if (typeof config.service === 'function') {\n    return config.service(params)\n  }\n\n  return config.service\n}\n\nmodule.exports = PGPlugin\n"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,qCAAD,CAA9B;;AAEA,MAAMC,QAAN,SAAuBF,cAAvB,CAAsC;EACrB,WAAJG,IAAI,GAAI;IAAE,OAAO,IAAP;EAAa;;EACd,WAATC,SAAS,GAAI;IAAE,OAAO,OAAP;EAAgB;;EACzB,WAANC,MAAM,GAAI;IAAE,OAAO,UAAP;EAAmB;;EAE1CC,KAAK,OAA8B;IAAA,IAA5B;MAAEC,MAAM,GAAG,EAAX;MAAeC;IAAf,CAA4B;IACjC,MAAMC,OAAO,GAAGC,cAAc,CAAC,KAAKC,MAAN,EAAcJ,MAAd,CAA9B;IAEA,KAAKK,SAAL,CAAe,UAAf,EAA2B;MACzBH,OADyB;MAEzBI,QAAQ,EAAEL,SAFe;MAGzBM,IAAI,EAAE,KAHmB;MAIzBC,IAAI,EAAE,QAJmB;MAKzBC,IAAI,EAAE;QACJ,WAAW,UADP;QAEJ,WAAWT,MAAM,CAACU,QAFd;QAGJ,WAAWV,MAAM,CAACW,IAHd;QAIJ,YAAYX,MAAM,CAACY,IAJf;QAKJ,YAAYZ,MAAM,CAACa;MALf;IALmB,CAA3B;EAaD;;AArBmC;;AAwBtC,SAASV,cAAT,CAAyBC,MAAzB,EAAiCJ,MAAjC,EAAyC;EACvC,IAAI,OAAOI,MAAM,CAACF,OAAd,KAA0B,UAA9B,EAA0C;IACxC,OAAOE,MAAM,CAACF,OAAP,CAAeF,MAAf,CAAP;EACD;;EAED,OAAOI,MAAM,CAACF,OAAd;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBpB,QAAjB"},"metadata":{},"sourceType":"script"}