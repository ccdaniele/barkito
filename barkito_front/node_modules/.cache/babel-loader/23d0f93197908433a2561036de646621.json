{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllocationProfile = exports.stopSamplingHeapProfiler = exports.startSamplingHeapProfiler = void 0;\n\nconst path = require(\"path\");\n\nconst findBinding = require('node-gyp-build');\n\nconst profiler = findBinding(path.join(__dirname, '..', '..')); // Wrappers around native heap profiler functions.\n\nfunction startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth) {\n  profiler.heapProfiler.startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth);\n}\n\nexports.startSamplingHeapProfiler = startSamplingHeapProfiler;\n\nfunction stopSamplingHeapProfiler() {\n  profiler.heapProfiler.stopSamplingHeapProfiler();\n}\n\nexports.stopSamplingHeapProfiler = stopSamplingHeapProfiler;\n\nfunction getAllocationProfile() {\n  return profiler.heapProfiler.getAllocationProfile();\n}\n\nexports.getAllocationProfile = getAllocationProfile;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAIA,MAAMA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGF,WAAW,CAACG,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,CAAD,CAA5B,C,CAEA;;AAEA,SAAgBC,yBAAhB,CACEC,iBADF,EAEEC,cAFF,EAEwB;EAEtBN,QAAQ,CAACO,YAAT,CAAsBH,yBAAtB,CACEC,iBADF,EAEEC,cAFF;AAID;;AARDE;;AAUA,SAAgBC,wBAAhB,GAAwC;EACtCT,QAAQ,CAACO,YAAT,CAAsBE,wBAAtB;AACD;;AAFDD;;AAIA,SAAgBE,oBAAhB,GAAoC;EAClC,OAAOV,QAAQ,CAACO,YAAT,CAAsBG,oBAAtB,EAAP;AACD;;AAFDF","names":["findBinding","require","profiler","path","join","__dirname","startSamplingHeapProfiler","heapIntervalBytes","heapStackDepth","heapProfiler","exports","stopSamplingHeapProfiler","getAllocationProfile"],"sources":["../../ts/src/heap-profiler-bindings.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}