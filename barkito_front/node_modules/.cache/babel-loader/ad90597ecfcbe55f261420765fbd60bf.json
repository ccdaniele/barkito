{"ast":null,"code":"'use strict'; // TODO: Add test with slow or unresponsive agent.\n// TODO: Add telemetry for things like dropped requests, errors, etc.\n\nconst {\n  Readable\n} = require('stream');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst docker = require('./docker');\n\nconst {\n  storage\n} = require('../../../../datadog-core');\n\nconst log = require('../../log');\n\nconst keepAlive = true;\nconst maxSockets = 1;\nconst maxActiveRequests = 8;\nconst httpAgent = new http.Agent({\n  keepAlive,\n  maxSockets\n});\nconst httpsAgent = new https.Agent({\n  keepAlive,\n  maxSockets\n});\nconst containerId = docker.id();\nlet activeRequests = 0;\n\nfunction request(data, options, callback) {\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  const isReadable = data instanceof Readable; // The timeout should be kept low to avoid excessive queueing.\n\n  const timeout = options.timeout || 2000;\n  const isSecure = options.protocol === 'https:';\n  const client = isSecure ? https : http;\n  const dataArray = [].concat(data);\n\n  if (!isReadable) {\n    options.headers['Content-Length'] = byteLength(dataArray);\n  }\n\n  if (containerId) {\n    options.headers['Datadog-Container-ID'] = containerId;\n  }\n\n  options.agent = isSecure ? httpsAgent : httpAgent;\n\n  const onResponse = res => {\n    let responseData = '';\n    res.setTimeout(timeout);\n    res.on('data', chunk => {\n      responseData += chunk;\n    });\n    res.on('end', () => {\n      activeRequests--;\n\n      if (res.statusCode >= 200 && res.statusCode <= 299) {\n        callback(null, responseData, res.statusCode);\n      } else {\n        const error = new Error(`Error from the endpoint: ${res.statusCode} ${http.STATUS_CODES[res.statusCode]}`);\n        error.status = res.statusCode;\n        callback(error, null, res.statusCode);\n      }\n    });\n  };\n\n  const makeRequest = onError => {\n    if (!request.writable) {\n      log.debug('Maximum number of active requests reached: payload is discarded.');\n      return callback(null);\n    }\n\n    activeRequests++;\n    const store = storage.getStore();\n    storage.enterWith({\n      noop: true\n    });\n    const req = client.request(options, onResponse);\n    req.once('error', err => {\n      activeRequests--;\n      onError(err);\n    });\n    req.setTimeout(timeout, req.abort);\n\n    if (isReadable) {\n      data.pipe(req); // TODO: Validate whether this is actually retriable.\n    } else {\n      dataArray.forEach(buffer => req.write(buffer));\n      req.end();\n    }\n\n    storage.enterWith(store);\n  }; // TODO: Figure out why setTimeout is needed to avoid losing the async context\n  // in the retry request before socket.connect() is called.\n  // TODO: Test that this doesn't trace itself on retry when the diagnostics\n  // channel events are available in the agent exporter.\n\n\n  makeRequest(() => setTimeout(() => makeRequest(callback)));\n}\n\nfunction byteLength(data) {\n  return data.length > 0 ? data.reduce((prev, next) => prev + next.length, 0) : 0;\n}\n\nObject.defineProperty(request, 'writable', {\n  get() {\n    return activeRequests < maxActiveRequests;\n  }\n\n});\nmodule.exports = request;","map":{"version":3,"names":["Readable","require","http","https","docker","storage","log","keepAlive","maxSockets","maxActiveRequests","httpAgent","Agent","httpsAgent","containerId","id","activeRequests","request","data","options","callback","headers","isReadable","timeout","isSecure","protocol","client","dataArray","concat","byteLength","agent","onResponse","res","responseData","setTimeout","on","chunk","statusCode","error","Error","STATUS_CODES","status","makeRequest","onError","writable","debug","store","getStore","enterWith","noop","req","once","err","abort","pipe","forEach","buffer","write","end","length","reduce","prev","next","Object","defineProperty","get","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/exporters/common/request.js"],"sourcesContent":["'use strict'\n\n// TODO: Add test with slow or unresponsive agent.\n// TODO: Add telemetry for things like dropped requests, errors, etc.\n\nconst { Readable } = require('stream')\nconst http = require('http')\nconst https = require('https')\nconst docker = require('./docker')\nconst { storage } = require('../../../../datadog-core')\nconst log = require('../../log')\n\nconst keepAlive = true\nconst maxSockets = 1\nconst maxActiveRequests = 8\nconst httpAgent = new http.Agent({ keepAlive, maxSockets })\nconst httpsAgent = new https.Agent({ keepAlive, maxSockets })\nconst containerId = docker.id()\n\nlet activeRequests = 0\n\nfunction request (data, options, callback) {\n  if (!options.headers) {\n    options.headers = {}\n  }\n\n  const isReadable = data instanceof Readable\n\n  // The timeout should be kept low to avoid excessive queueing.\n  const timeout = options.timeout || 2000\n  const isSecure = options.protocol === 'https:'\n  const client = isSecure ? https : http\n  const dataArray = [].concat(data)\n\n  if (!isReadable) {\n    options.headers['Content-Length'] = byteLength(dataArray)\n  }\n\n  if (containerId) {\n    options.headers['Datadog-Container-ID'] = containerId\n  }\n\n  options.agent = isSecure ? httpsAgent : httpAgent\n\n  const onResponse = res => {\n    let responseData = ''\n\n    res.setTimeout(timeout)\n\n    res.on('data', chunk => { responseData += chunk })\n    res.on('end', () => {\n      activeRequests--\n\n      if (res.statusCode >= 200 && res.statusCode <= 299) {\n        callback(null, responseData, res.statusCode)\n      } else {\n        const error = new Error(`Error from the endpoint: ${res.statusCode} ${http.STATUS_CODES[res.statusCode]}`)\n        error.status = res.statusCode\n\n        callback(error, null, res.statusCode)\n      }\n    })\n  }\n\n  const makeRequest = onError => {\n    if (!request.writable) {\n      log.debug('Maximum number of active requests reached: payload is discarded.')\n      return callback(null)\n    }\n\n    activeRequests++\n\n    const store = storage.getStore()\n\n    storage.enterWith({ noop: true })\n\n    const req = client.request(options, onResponse)\n\n    req.once('error', err => {\n      activeRequests--\n      onError(err)\n    })\n\n    req.setTimeout(timeout, req.abort)\n\n    if (isReadable) {\n      data.pipe(req) // TODO: Validate whether this is actually retriable.\n    } else {\n      dataArray.forEach(buffer => req.write(buffer))\n      req.end()\n    }\n\n    storage.enterWith(store)\n  }\n\n  // TODO: Figure out why setTimeout is needed to avoid losing the async context\n  // in the retry request before socket.connect() is called.\n  // TODO: Test that this doesn't trace itself on retry when the diagnostics\n  // channel events are available in the agent exporter.\n  makeRequest(() => setTimeout(() => makeRequest(callback)))\n}\n\nfunction byteLength (data) {\n  return data.length > 0 ? data.reduce((prev, next) => prev + next.length, 0) : 0\n}\n\nObject.defineProperty(request, 'writable', {\n  get () {\n    return activeRequests < maxActiveRequests\n  }\n})\n\nmodule.exports = request\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}