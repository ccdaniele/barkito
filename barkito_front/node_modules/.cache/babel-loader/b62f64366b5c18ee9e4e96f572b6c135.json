{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst startCh = channel('apm:cassandra-driver:query:start');\nconst finishCh = channel('apm:cassandra-driver:query:finish');\nconst errorCh = channel('apm:cassandra-driver:query:error');\nconst connectCh = channel(`apm:cassandra-driver:query:connect`);\naddHook({\n  name: 'cassandra-driver',\n  versions: ['>=3.0.0']\n}, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, 'batch', batch => function (queries, options, callback) {\n    if (!startCh.hasSubscribers) {\n      return batch.apply(this, arguments);\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    const lastIndex = arguments.length - 1;\n    let cb = arguments[lastIndex];\n\n    if (typeof cb === 'function') {\n      cb = callbackResource.bind(cb);\n      arguments[lastIndex] = wrapCallback(finishCh, errorCh, asyncResource, cb);\n    }\n\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        keyspace: this.keyspace,\n        query: queries\n      });\n\n      try {\n        const res = batch.apply(this, arguments);\n\n        if (typeof res === 'function' || !res) {\n          return wrapCallback(finishCh, errorCh, asyncResource, res);\n        } else {\n          const promiseAsyncResource = new AsyncResource('bound-anonymous-fn');\n          return res.then(promiseAsyncResource.bind(() => finish(finishCh, errorCh)), promiseAsyncResource.bind(err => finish(finishCh, errorCh, err)));\n        }\n      } catch (e) {\n        finish(finishCh, errorCh, e);\n        throw e;\n      }\n    });\n  });\n  return cassandra;\n});\naddHook({\n  name: 'cassandra-driver',\n  versions: ['>=4.4']\n}, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, '_execute', _execute => function (query, params, execOptions, callback) {\n    if (!startCh.hasSubscribers) {\n      return _execute.apply(this, arguments);\n    }\n\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        keyspace: this.keyspace,\n        query\n      });\n\n      const promise = _execute.apply(this, arguments);\n\n      const promiseAsyncResource = new AsyncResource('bound-anonymous-fn');\n      promise.then(promiseAsyncResource.bind(() => finish(finishCh, errorCh)), promiseAsyncResource.bind(err => finish(finishCh, errorCh, err)));\n      return promise;\n    });\n  });\n  return cassandra;\n});\naddHook({\n  name: 'cassandra-driver',\n  versions: ['3 - 4.3']\n}, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, '_innerExecute', _innerExecute => function (query, params, execOptions, callback) {\n    if (!startCh.hasSubscribers) {\n      return _innerExecute.apply(this, arguments);\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n\n    const isValid = args => {\n      return args.length === 4 || typeof args[3] === 'function';\n    };\n\n    if (!isValid(arguments)) {\n      return _innerExecute.apply(this, arguments);\n    }\n\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        keyspace: this.keyspace,\n        query\n      });\n      const lastIndex = arguments.length - 1;\n      let cb = arguments[lastIndex];\n\n      if (typeof cb === 'function') {\n        cb = callbackResource.bind(cb);\n        arguments[lastIndex] = wrapCallback(finishCh, errorCh, asyncResource, cb);\n      }\n\n      try {\n        return _innerExecute.apply(this, arguments);\n      } catch (e) {\n        finish(finishCh, errorCh, e);\n        throw e;\n      }\n    });\n  });\n  return cassandra;\n});\naddHook({\n  name: 'cassandra-driver',\n  versions: ['>=3.3'],\n  file: 'lib/request-execution.js'\n}, RequestExecution => {\n  shimmer.wrap(RequestExecution.prototype, '_sendOnConnection', _sendOnConnection => function () {\n    if (!startCh.hasSubscribers) {\n      return _sendOnConnection.apply(this, arguments);\n    }\n\n    connectCh.publish({\n      hostname: this._connection.address,\n      port: this._connection.port\n    });\n    return _sendOnConnection.apply(this, arguments);\n  });\n  return RequestExecution;\n});\naddHook({\n  name: 'cassandra-driver',\n  versions: ['3.3 - 4.3'],\n  file: 'lib/request-execution.js'\n}, RequestExecution => {\n  shimmer.wrap(RequestExecution.prototype, 'start', start => function (getHostCallback) {\n    if (!startCh.hasSubscribers) {\n      return getHostCallback.apply(this, arguments);\n    }\n\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    const execution = this;\n\n    if (!isRequestValid(this, arguments, 1)) {\n      return start.apply(this, arguments);\n    }\n\n    getHostCallback = asyncResource.bind(getHostCallback);\n    arguments[0] = AsyncResource.bind(function () {\n      connectCh.publish({\n        hostname: execution._connection.address,\n        port: execution._connection.port\n      });\n      return getHostCallback.apply(this, arguments);\n    });\n    return start.apply(this, arguments);\n  });\n  return RequestExecution;\n});\naddHook({\n  name: 'cassandra-driver',\n  versions: ['3 - 3.2'],\n  file: 'lib/request-handler.js'\n}, RequestHandler => {\n  shimmer.wrap(RequestHandler.prototype, 'send', send => function (request, options, callback) {\n    if (!startCh.hasSubscribers) {\n      return send.apply(this, arguments);\n    }\n\n    const handler = this;\n\n    if (!isRequestValid(this, arguments, 3)) {\n      return send.apply(this, arguments);\n    }\n\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    callback = asyncResource.bind(callback);\n    arguments[2] = AsyncResource.bind(function () {\n      connectCh.publish({\n        hostname: handler.connection.address,\n        port: handler.connection.port\n      });\n      return callback.apply(this, arguments);\n    });\n    return send.apply(this, arguments);\n  });\n  return RequestHandler;\n});\n\nfunction finish(finishCh, errorCh, error) {\n  if (error) {\n    errorCh.publish(error);\n  }\n\n  finishCh.publish(undefined);\n}\n\nfunction wrapCallback(finishCh, errorCh, asyncResource, callback) {\n  return asyncResource.bind(function (err) {\n    finish(finishCh, errorCh, err);\n\n    if (callback) {\n      return callback.apply(this, arguments);\n    }\n  });\n}\n\nfunction isRequestValid(exec, args, length) {\n  if (!exec) return false;\n  if (args.length !== length || typeof args[length - 1] !== 'function') return false;\n  return true;\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","startCh","finishCh","errorCh","connectCh","name","versions","cassandra","wrap","Client","prototype","batch","queries","options","callback","hasSubscribers","apply","arguments","callbackResource","asyncResource","lastIndex","length","cb","bind","wrapCallback","runInAsyncScope","publish","keyspace","query","res","promiseAsyncResource","then","finish","err","e","_execute","params","execOptions","promise","_innerExecute","isValid","args","file","RequestExecution","_sendOnConnection","hostname","_connection","address","port","start","getHostCallback","execution","isRequestValid","RequestHandler","send","request","handler","connection","error","undefined","exec"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/cassandra-driver.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\nconst startCh = channel('apm:cassandra-driver:query:start')\nconst finishCh = channel('apm:cassandra-driver:query:finish')\nconst errorCh = channel('apm:cassandra-driver:query:error')\nconst connectCh = channel(`apm:cassandra-driver:query:connect`)\n\naddHook({ name: 'cassandra-driver', versions: ['>=3.0.0'] }, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, 'batch', batch => function (queries, options, callback) {\n    if (!startCh.hasSubscribers) {\n      return batch.apply(this, arguments)\n    }\n    const callbackResource = new AsyncResource('bound-anonymous-fn')\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n    const lastIndex = arguments.length - 1\n    let cb = arguments[lastIndex]\n\n    if (typeof cb === 'function') {\n      cb = callbackResource.bind(cb)\n      arguments[lastIndex] = wrapCallback(finishCh, errorCh, asyncResource, cb)\n    }\n\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({ keyspace: this.keyspace, query: queries })\n      try {\n        const res = batch.apply(this, arguments)\n        if (typeof res === 'function' || !res) {\n          return wrapCallback(finishCh, errorCh, asyncResource, res)\n        } else {\n          const promiseAsyncResource = new AsyncResource('bound-anonymous-fn')\n          return res.then(\n            promiseAsyncResource.bind(() => finish(finishCh, errorCh)),\n            promiseAsyncResource.bind(err => finish(finishCh, errorCh, err))\n          )\n        }\n      } catch (e) {\n        finish(finishCh, errorCh, e)\n        throw e\n      }\n    })\n  })\n  return cassandra\n})\n\naddHook({ name: 'cassandra-driver', versions: ['>=4.4'] }, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, '_execute', _execute => function (query, params, execOptions, callback) {\n    if (!startCh.hasSubscribers) {\n      return _execute.apply(this, arguments)\n    }\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({ keyspace: this.keyspace, query })\n      const promise = _execute.apply(this, arguments)\n\n      const promiseAsyncResource = new AsyncResource('bound-anonymous-fn')\n\n      promise.then(\n        promiseAsyncResource.bind(() => finish(finishCh, errorCh)),\n        promiseAsyncResource.bind(err => finish(finishCh, errorCh, err))\n      )\n      return promise\n    })\n  })\n  return cassandra\n})\n\naddHook({ name: 'cassandra-driver', versions: ['3 - 4.3'] }, cassandra => {\n  shimmer.wrap(cassandra.Client.prototype, '_innerExecute', _innerExecute =>\n    function (query, params, execOptions, callback) {\n      if (!startCh.hasSubscribers) {\n        return _innerExecute.apply(this, arguments)\n      }\n      const callbackResource = new AsyncResource('bound-anonymous-fn')\n      const asyncResource = new AsyncResource('bound-anonymous-fn')\n      const isValid = (args) => {\n        return args.length === 4 || typeof args[3] === 'function'\n      }\n\n      if (!isValid(arguments)) {\n        return _innerExecute.apply(this, arguments)\n      }\n\n      return asyncResource.runInAsyncScope(() => {\n        startCh.publish({ keyspace: this.keyspace, query })\n\n        const lastIndex = arguments.length - 1\n        let cb = arguments[lastIndex]\n\n        if (typeof cb === 'function') {\n          cb = callbackResource.bind(cb)\n          arguments[lastIndex] = wrapCallback(finishCh, errorCh, asyncResource, cb)\n        }\n\n        try {\n          return _innerExecute.apply(this, arguments)\n        } catch (e) {\n          finish(finishCh, errorCh, e)\n          throw e\n        }\n      })\n    }\n  )\n  return cassandra\n})\n\naddHook({ name: 'cassandra-driver', versions: ['>=3.3'], file: 'lib/request-execution.js' }, RequestExecution => {\n  shimmer.wrap(RequestExecution.prototype, '_sendOnConnection', _sendOnConnection => function () {\n    if (!startCh.hasSubscribers) {\n      return _sendOnConnection.apply(this, arguments)\n    }\n    connectCh.publish({ hostname: this._connection.address, port: this._connection.port })\n    return _sendOnConnection.apply(this, arguments)\n  })\n  return RequestExecution\n})\n\naddHook({ name: 'cassandra-driver', versions: ['3.3 - 4.3'], file: 'lib/request-execution.js' }, RequestExecution => {\n  shimmer.wrap(RequestExecution.prototype, 'start', start => function (getHostCallback) {\n    if (!startCh.hasSubscribers) {\n      return getHostCallback.apply(this, arguments)\n    }\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n    const execution = this\n\n    if (!isRequestValid(this, arguments, 1)) {\n      return start.apply(this, arguments)\n    }\n\n    getHostCallback = asyncResource.bind(getHostCallback)\n\n    arguments[0] = AsyncResource.bind(function () {\n      connectCh.publish({ hostname: execution._connection.address, port: execution._connection.port })\n      return getHostCallback.apply(this, arguments)\n    })\n\n    return start.apply(this, arguments)\n  })\n  return RequestExecution\n})\n\naddHook({ name: 'cassandra-driver', versions: ['3 - 3.2'], file: 'lib/request-handler.js' }, RequestHandler => {\n  shimmer.wrap(RequestHandler.prototype, 'send', send => function (request, options, callback) {\n    if (!startCh.hasSubscribers) {\n      return send.apply(this, arguments)\n    }\n    const handler = this\n\n    if (!isRequestValid(this, arguments, 3)) {\n      return send.apply(this, arguments)\n    }\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n\n    callback = asyncResource.bind(callback)\n\n    arguments[2] = AsyncResource.bind(function () {\n      connectCh.publish({ hostname: handler.connection.address, port: handler.connection.port })\n      return callback.apply(this, arguments)\n    })\n\n    return send.apply(this, arguments)\n  })\n  return RequestHandler\n})\n\nfunction finish (finishCh, errorCh, error) {\n  if (error) {\n    errorCh.publish(error)\n  }\n  finishCh.publish(undefined)\n}\n\nfunction wrapCallback (finishCh, errorCh, asyncResource, callback) {\n  return asyncResource.bind(function (err) {\n    finish(finishCh, errorCh, err)\n    if (callback) {\n      return callback.apply(this, arguments)\n    }\n  })\n}\n\nfunction isRequestValid (exec, args, length) {\n  if (!exec) return false\n  if (args.length !== length || typeof args[length - 1] !== 'function') return false\n\n  return true\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}