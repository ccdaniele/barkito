{"ast":null,"code":"/**\n * There are two ways to call `test.each` in `jest`:\n * 1. With an array of arrays: https://jestjs.io/docs/api#1-testeachtablename-fn-timeout\n * 2. With a tagged template literal: https://jestjs.io/docs/api#2-testeachtablename-fn-timeout\n * This function distinguishes between the two and returns the test parameters in different formats:\n * 1. An array of arrays with the different parameters to the test, e.g.\n * [[1, 2, 3], [2, 3, 5]]\n * 2. An array of objects, e.g.\n * [{ a: 1, b: 2, expected: 3 }, { a: 2, b: 3, expected: 5}]\n */\nfunction getFormattedJestTestParameters(testParameters) {\n  if (!testParameters || !testParameters.length) {\n    return;\n  }\n\n  const [parameterArray, ...parameterValues] = testParameters;\n\n  if (parameterValues.length === 0) {\n    // Way 1.\n    return parameterArray;\n  } // Way 2.\n\n\n  const parameterKeys = parameterArray[0].split('|').map(key => key.trim());\n  const formattedParameters = [];\n\n  for (let index = 0; index < parameterValues.length; index++) {\n    const parameterValue = parameterValues[index];\n    const parameterIndex = index % parameterKeys.length;\n\n    if (!parameterIndex) {\n      formattedParameters.push({});\n    }\n\n    const parameterKey = parameterKeys[parameterIndex];\n    const lastFormattedParameter = formattedParameters[formattedParameters.length - 1];\n    lastFormattedParameter[parameterKey] = parameterValue;\n  }\n\n  return formattedParameters;\n} // https://github.com/facebook/jest/blob/3e38157ad5f23fb7d24669d24fae8ded06a7ab75/packages/jest-circus/src/utils.ts#L396\n\n\nfunction getJestTestName(test) {\n  const titles = [];\n  let parent = test;\n\n  do {\n    titles.unshift(parent.name);\n  } while (parent = parent.parent);\n\n  titles.shift(); // remove TOP_DESCRIBE_BLOCK_NAME\n\n  return titles.join(' ');\n}\n\nmodule.exports = {\n  getFormattedJestTestParameters,\n  getJestTestName\n};","map":{"version":3,"names":["getFormattedJestTestParameters","testParameters","length","parameterArray","parameterValues","parameterKeys","split","map","key","trim","formattedParameters","index","parameterValue","parameterIndex","push","parameterKey","lastFormattedParameter","getJestTestName","test","titles","parent","unshift","name","shift","join","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-jest/src/util.js"],"sourcesContent":["/**\n * There are two ways to call `test.each` in `jest`:\n * 1. With an array of arrays: https://jestjs.io/docs/api#1-testeachtablename-fn-timeout\n * 2. With a tagged template literal: https://jestjs.io/docs/api#2-testeachtablename-fn-timeout\n * This function distinguishes between the two and returns the test parameters in different formats:\n * 1. An array of arrays with the different parameters to the test, e.g.\n * [[1, 2, 3], [2, 3, 5]]\n * 2. An array of objects, e.g.\n * [{ a: 1, b: 2, expected: 3 }, { a: 2, b: 3, expected: 5}]\n */\nfunction getFormattedJestTestParameters (testParameters) {\n  if (!testParameters || !testParameters.length) {\n    return\n  }\n  const [parameterArray, ...parameterValues] = testParameters\n  if (parameterValues.length === 0) { // Way 1.\n    return parameterArray\n  }\n  // Way 2.\n  const parameterKeys = parameterArray[0].split('|').map(key => key.trim())\n  const formattedParameters = []\n  for (let index = 0; index < parameterValues.length; index++) {\n    const parameterValue = parameterValues[index]\n    const parameterIndex = index % parameterKeys.length\n    if (!parameterIndex) {\n      formattedParameters.push({})\n    }\n    const parameterKey = parameterKeys[parameterIndex]\n    const lastFormattedParameter = formattedParameters[formattedParameters.length - 1]\n    lastFormattedParameter[parameterKey] = parameterValue\n  }\n\n  return formattedParameters\n}\n\n// https://github.com/facebook/jest/blob/3e38157ad5f23fb7d24669d24fae8ded06a7ab75/packages/jest-circus/src/utils.ts#L396\nfunction getJestTestName (test) {\n  const titles = []\n  let parent = test\n  do {\n    titles.unshift(parent.name)\n  } while ((parent = parent.parent))\n\n  titles.shift() // remove TOP_DESCRIBE_BLOCK_NAME\n  return titles.join(' ')\n}\n\nmodule.exports = { getFormattedJestTestParameters, getJestTestName }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,8BAAT,CAAyCC,cAAzC,EAAyD;EACvD,IAAI,CAACA,cAAD,IAAmB,CAACA,cAAc,CAACC,MAAvC,EAA+C;IAC7C;EACD;;EACD,MAAM,CAACC,cAAD,EAAiB,GAAGC,eAApB,IAAuCH,cAA7C;;EACA,IAAIG,eAAe,CAACF,MAAhB,KAA2B,CAA/B,EAAkC;IAAE;IAClC,OAAOC,cAAP;EACD,CAPsD,CAQvD;;;EACA,MAAME,aAAa,GAAGF,cAAc,CAAC,CAAD,CAAd,CAAkBG,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,CAAiCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAxC,CAAtB;EACA,MAAMC,mBAAmB,GAAG,EAA5B;;EACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,eAAe,CAACF,MAA5C,EAAoDS,KAAK,EAAzD,EAA6D;IAC3D,MAAMC,cAAc,GAAGR,eAAe,CAACO,KAAD,CAAtC;IACA,MAAME,cAAc,GAAGF,KAAK,GAAGN,aAAa,CAACH,MAA7C;;IACA,IAAI,CAACW,cAAL,EAAqB;MACnBH,mBAAmB,CAACI,IAApB,CAAyB,EAAzB;IACD;;IACD,MAAMC,YAAY,GAAGV,aAAa,CAACQ,cAAD,CAAlC;IACA,MAAMG,sBAAsB,GAAGN,mBAAmB,CAACA,mBAAmB,CAACR,MAApB,GAA6B,CAA9B,CAAlD;IACAc,sBAAsB,CAACD,YAAD,CAAtB,GAAuCH,cAAvC;EACD;;EAED,OAAOF,mBAAP;AACD,C,CAED;;;AACA,SAASO,eAAT,CAA0BC,IAA1B,EAAgC;EAC9B,MAAMC,MAAM,GAAG,EAAf;EACA,IAAIC,MAAM,GAAGF,IAAb;;EACA,GAAG;IACDC,MAAM,CAACE,OAAP,CAAeD,MAAM,CAACE,IAAtB;EACD,CAFD,QAEUF,MAAM,GAAGA,MAAM,CAACA,MAF1B;;EAIAD,MAAM,CAACI,KAAP,GAP8B,CAOf;;EACf,OAAOJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EAAE1B,8BAAF;EAAkCiB;AAAlC,CAAjB"},"metadata":{},"sourceType":"script"}