{"ast":null,"code":"'use strict';\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst {\n  addHook,\n  channel,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst enterChannel = channel('apm:connect:middleware:enter');\nconst exitChannel = channel('apm:connect:middleware:exit');\nconst errorChannel = channel('apm:connect:middleware:error');\nconst nextChannel = channel('apm:connect:middleware:next');\nconst handleChannel = channel('apm:connect:request:handle');\n\nfunction wrapConnect(connect) {\n  if (typeof connect !== 'function') return connect;\n  return function connectWithTrace() {\n    const app = connect();\n    if (!app) return app;\n    shimmer.wrap(app, 'use', wrapUse);\n    shimmer.wrap(app, 'handle', wrapHandle);\n    return app;\n  };\n}\n\nfunction wrapUse(use) {\n  if (typeof use !== 'function') return use;\n  return function useWithTrace(route, fn) {\n    const result = use.apply(this, arguments);\n    if (!this || !Array.isArray(this.stack)) return result;\n    const index = this.stack.length - 1;\n    const layer = this.stack[index];\n\n    if (layer && layer.handle) {\n      this.stack[index].handle = wrapLayerHandle(layer);\n    }\n\n    return result;\n  };\n}\n\nfunction wrapHandle(handle) {\n  return function handleWithTrace(req, res) {\n    if (handleChannel.hasSubscribers) {\n      handleChannel.publish({\n        req,\n        res\n      });\n    }\n\n    return handle.apply(this, arguments);\n  };\n}\n\nfunction wrapLayerHandle(layer) {\n  if (typeof layer.handle !== 'function') return layer.handle;\n  const original = layer.handle;\n  return shimmer.wrap(original, function () {\n    if (!enterChannel.hasSubscribers) return original.apply(this, arguments);\n    const middlewareResource = new AsyncResource('bound-anonymous-fn');\n    const lastIndex = arguments.length - 1;\n    const name = original._name || original.name;\n    const req = arguments[arguments.length > 3 ? 1 : 0];\n    const next = arguments[lastIndex];\n\n    if (typeof next === 'function') {\n      arguments[lastIndex] = wrapNext(req, next);\n    }\n\n    return middlewareResource.runInAsyncScope(() => {\n      const route = layer.route;\n      enterChannel.publish({\n        name,\n        req,\n        route\n      });\n\n      try {\n        return original.apply(this, arguments);\n      } catch (error) {\n        errorChannel.publish({\n          req,\n          error\n        });\n        nextChannel.publish({\n          req\n        });\n        exitChannel.publish({\n          req\n        });\n        throw error;\n      }\n    });\n  });\n}\n\nfunction wrapNext(req, next) {\n  return function (error) {\n    if (error) {\n      errorChannel.publish({\n        req,\n        error\n      });\n    }\n\n    nextChannel.publish({\n      req\n    });\n    exitChannel.publish({\n      req\n    });\n    next.apply(this, arguments);\n  };\n}\n\naddHook({\n  name: 'connect',\n  versions: ['>=3']\n}, connect => {\n  return shimmer.wrap(connect, wrapConnect(connect));\n});\naddHook({\n  name: 'connect',\n  versions: ['2.2.2']\n}, connect => {\n  shimmer.wrap(connect.proto, 'use', wrapUse);\n  shimmer.wrap(connect.proto, 'handle', wrapHandle);\n  return connect;\n});","map":{"version":3,"names":["shimmer","require","addHook","channel","AsyncResource","enterChannel","exitChannel","errorChannel","nextChannel","handleChannel","wrapConnect","connect","connectWithTrace","app","wrap","wrapUse","wrapHandle","use","useWithTrace","route","fn","result","apply","arguments","Array","isArray","stack","index","length","layer","handle","wrapLayerHandle","handleWithTrace","req","res","hasSubscribers","publish","original","middlewareResource","lastIndex","name","_name","next","wrapNext","runInAsyncScope","error","versions","proto"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/connect.js"],"sourcesContent":["'use strict'\n\nconst shimmer = require('../../datadog-shimmer')\nconst { addHook, channel, AsyncResource } = require('./helpers/instrument')\n\nconst enterChannel = channel('apm:connect:middleware:enter')\nconst exitChannel = channel('apm:connect:middleware:exit')\nconst errorChannel = channel('apm:connect:middleware:error')\nconst nextChannel = channel('apm:connect:middleware:next')\nconst handleChannel = channel('apm:connect:request:handle')\n\nfunction wrapConnect (connect) {\n  if (typeof connect !== 'function') return connect\n\n  return function connectWithTrace () {\n    const app = connect()\n\n    if (!app) return app\n\n    shimmer.wrap(app, 'use', wrapUse)\n    shimmer.wrap(app, 'handle', wrapHandle)\n\n    return app\n  }\n}\n\nfunction wrapUse (use) {\n  if (typeof use !== 'function') return use\n\n  return function useWithTrace (route, fn) {\n    const result = use.apply(this, arguments)\n\n    if (!this || !Array.isArray(this.stack)) return result\n\n    const index = this.stack.length - 1\n    const layer = this.stack[index]\n\n    if (layer && layer.handle) {\n      this.stack[index].handle = wrapLayerHandle(layer)\n    }\n\n    return result\n  }\n}\n\nfunction wrapHandle (handle) {\n  return function handleWithTrace (req, res) {\n    if (handleChannel.hasSubscribers) {\n      handleChannel.publish({ req, res })\n    }\n\n    return handle.apply(this, arguments)\n  }\n}\n\nfunction wrapLayerHandle (layer) {\n  if (typeof layer.handle !== 'function') return layer.handle\n\n  const original = layer.handle\n\n  return shimmer.wrap(original, function () {\n    if (!enterChannel.hasSubscribers) return original.apply(this, arguments)\n\n    const middlewareResource = new AsyncResource('bound-anonymous-fn')\n    const lastIndex = arguments.length - 1\n    const name = original._name || original.name\n    const req = arguments[arguments.length > 3 ? 1 : 0]\n    const next = arguments[lastIndex]\n\n    if (typeof next === 'function') {\n      arguments[lastIndex] = wrapNext(req, next)\n    }\n\n    return middlewareResource.runInAsyncScope(() => {\n      const route = layer.route\n\n      enterChannel.publish({ name, req, route })\n\n      try {\n        return original.apply(this, arguments)\n      } catch (error) {\n        errorChannel.publish({ req, error })\n        nextChannel.publish({ req })\n        exitChannel.publish({ req })\n\n        throw error\n      }\n    })\n  })\n}\n\nfunction wrapNext (req, next) {\n  return function (error) {\n    if (error) {\n      errorChannel.publish({ req, error })\n    }\n\n    nextChannel.publish({ req })\n    exitChannel.publish({ req })\n\n    next.apply(this, arguments)\n  }\n}\n\naddHook({ name: 'connect', versions: ['>=3'] }, connect => {\n  return shimmer.wrap(connect, wrapConnect(connect))\n})\n\naddHook({ name: 'connect', versions: ['2.2.2'] }, connect => {\n  shimmer.wrap(connect.proto, 'use', wrapUse)\n  shimmer.wrap(connect.proto, 'handle', wrapHandle)\n\n  return connect\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}