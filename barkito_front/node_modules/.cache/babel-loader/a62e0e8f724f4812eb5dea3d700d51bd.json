{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\naddHook({\n  name: 'tedious',\n  versions: ['>=1.0.0']\n}, tedious => {\n  const startCh = channel('apm:tedious:request:start');\n  const finishCh = channel('apm:tedious:request:finish');\n  const errorCh = channel('apm:tedious:request:error');\n  shimmer.wrap(tedious.Connection.prototype, 'makeRequest', makeRequest => function (request) {\n    if (!startCh.hasSubscribers) {\n      return makeRequest.apply(this, arguments);\n    }\n\n    const queryOrProcedure = getQueryOrProcedure(request);\n\n    if (!queryOrProcedure) {\n      return makeRequest.apply(this, arguments);\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    const connectionConfig = this.config;\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({\n        queryOrProcedure,\n        connectionConfig\n      });\n      const cb = callbackResource.bind(request.callback, request);\n      request.callback = asyncResource.bind(function (error) {\n        if (error) {\n          errorCh.publish(error);\n        }\n\n        finishCh.publish(undefined);\n        return cb.apply(this, arguments);\n      }, null, request);\n\n      try {\n        return makeRequest.apply(this, arguments);\n      } catch (error) {\n        errorCh.publish(error);\n        throw error;\n      }\n    });\n  });\n  return tedious;\n});\n\nfunction getQueryOrProcedure(request) {\n  if (!request.parameters) return;\n  const statement = request.parametersByName.statement || request.parametersByName.stmt;\n\n  if (!statement) {\n    return request.sqlTextOrProcedure;\n  }\n\n  return statement.value;\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","name","versions","tedious","startCh","finishCh","errorCh","wrap","Connection","prototype","makeRequest","request","hasSubscribers","apply","arguments","queryOrProcedure","getQueryOrProcedure","callbackResource","asyncResource","connectionConfig","config","runInAsyncScope","publish","cb","bind","callback","error","undefined","parameters","statement","parametersByName","stmt","sqlTextOrProcedure","value"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/tedious.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\naddHook({ name: 'tedious', versions: [ '>=1.0.0' ] }, tedious => {\n  const startCh = channel('apm:tedious:request:start')\n  const finishCh = channel('apm:tedious:request:finish')\n  const errorCh = channel('apm:tedious:request:error')\n  shimmer.wrap(tedious.Connection.prototype, 'makeRequest', makeRequest => function (request) {\n    if (!startCh.hasSubscribers) {\n      return makeRequest.apply(this, arguments)\n    }\n\n    const queryOrProcedure = getQueryOrProcedure(request)\n\n    if (!queryOrProcedure) {\n      return makeRequest.apply(this, arguments)\n    }\n\n    const callbackResource = new AsyncResource('bound-anonymous-fn')\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n\n    const connectionConfig = this.config\n\n    return asyncResource.runInAsyncScope(() => {\n      startCh.publish({ queryOrProcedure, connectionConfig })\n\n      const cb = callbackResource.bind(request.callback, request)\n      request.callback = asyncResource.bind(function (error) {\n        if (error) {\n          errorCh.publish(error)\n        }\n        finishCh.publish(undefined)\n\n        return cb.apply(this, arguments)\n      }, null, request)\n\n      try {\n        return makeRequest.apply(this, arguments)\n      } catch (error) {\n        errorCh.publish(error)\n\n        throw error\n      }\n    })\n  })\n\n  return tedious\n})\n\nfunction getQueryOrProcedure (request) {\n  if (!request.parameters) return\n\n  const statement = request.parametersByName.statement || request.parametersByName.stmt\n\n  if (!statement) {\n    return request.sqlTextOrProcedure\n  }\n\n  return statement.value\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EACJA,OADI;EAEJC,OAFI;EAGJC;AAHI,IAIFC,OAAO,CAAC,sBAAD,CAJX;;AAKA,MAAMC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAAvB;;AAEAF,OAAO,CAAC;EAAEI,IAAI,EAAE,SAAR;EAAmBC,QAAQ,EAAE,CAAE,SAAF;AAA7B,CAAD,EAA+CC,OAAO,IAAI;EAC/D,MAAMC,OAAO,GAAGR,OAAO,CAAC,2BAAD,CAAvB;EACA,MAAMS,QAAQ,GAAGT,OAAO,CAAC,4BAAD,CAAxB;EACA,MAAMU,OAAO,GAAGV,OAAO,CAAC,2BAAD,CAAvB;EACAI,OAAO,CAACO,IAAR,CAAaJ,OAAO,CAACK,UAAR,CAAmBC,SAAhC,EAA2C,aAA3C,EAA0DC,WAAW,IAAI,UAAUC,OAAV,EAAmB;IAC1F,IAAI,CAACP,OAAO,CAACQ,cAAb,EAA6B;MAC3B,OAAOF,WAAW,CAACG,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;IACD;;IAED,MAAMC,gBAAgB,GAAGC,mBAAmB,CAACL,OAAD,CAA5C;;IAEA,IAAI,CAACI,gBAAL,EAAuB;MACrB,OAAOL,WAAW,CAACG,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;IACD;;IAED,MAAMG,gBAAgB,GAAG,IAAInB,aAAJ,CAAkB,oBAAlB,CAAzB;IACA,MAAMoB,aAAa,GAAG,IAAIpB,aAAJ,CAAkB,oBAAlB,CAAtB;IAEA,MAAMqB,gBAAgB,GAAG,KAAKC,MAA9B;IAEA,OAAOF,aAAa,CAACG,eAAd,CAA8B,MAAM;MACzCjB,OAAO,CAACkB,OAAR,CAAgB;QAAEP,gBAAF;QAAoBI;MAApB,CAAhB;MAEA,MAAMI,EAAE,GAAGN,gBAAgB,CAACO,IAAjB,CAAsBb,OAAO,CAACc,QAA9B,EAAwCd,OAAxC,CAAX;MACAA,OAAO,CAACc,QAAR,GAAmBP,aAAa,CAACM,IAAd,CAAmB,UAAUE,KAAV,EAAiB;QACrD,IAAIA,KAAJ,EAAW;UACTpB,OAAO,CAACgB,OAAR,CAAgBI,KAAhB;QACD;;QACDrB,QAAQ,CAACiB,OAAT,CAAiBK,SAAjB;QAEA,OAAOJ,EAAE,CAACV,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;MACD,CAPkB,EAOhB,IAPgB,EAOVH,OAPU,CAAnB;;MASA,IAAI;QACF,OAAOD,WAAW,CAACG,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;MACD,CAFD,CAEE,OAAOY,KAAP,EAAc;QACdpB,OAAO,CAACgB,OAAR,CAAgBI,KAAhB;QAEA,MAAMA,KAAN;MACD;IACF,CApBM,CAAP;EAqBD,CArCD;EAuCA,OAAOvB,OAAP;AACD,CA5CM,CAAP;;AA8CA,SAASa,mBAAT,CAA8BL,OAA9B,EAAuC;EACrC,IAAI,CAACA,OAAO,CAACiB,UAAb,EAAyB;EAEzB,MAAMC,SAAS,GAAGlB,OAAO,CAACmB,gBAAR,CAAyBD,SAAzB,IAAsClB,OAAO,CAACmB,gBAAR,CAAyBC,IAAjF;;EAEA,IAAI,CAACF,SAAL,EAAgB;IACd,OAAOlB,OAAO,CAACqB,kBAAf;EACD;;EAED,OAAOH,SAAS,CAACI,KAAjB;AACD"},"metadata":{},"sourceType":"script"}