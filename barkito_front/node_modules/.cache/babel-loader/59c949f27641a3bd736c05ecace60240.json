{"ast":null,"code":"var Stream = require('stream'); // through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\n\nexports = module.exports = through;\nthrough.through = through; //create a readable writable stream.\n\nfunction through(write, end, opts) {\n  write = write || function (data) {\n    this.queue(data);\n  };\n\n  end = end || function () {\n    this.queue(null);\n  };\n\n  var ended = false,\n      destroyed = false,\n      buffer = [],\n      _ended = false;\n  var stream = new Stream();\n  stream.readable = stream.writable = true;\n  stream.paused = false; //  stream.autoPause   = !(opts && opts.autoPause   === false)\n\n  stream.autoDestroy = !(opts && opts.autoDestroy === false);\n\n  stream.write = function (data) {\n    write.call(this, data);\n    return !stream.paused;\n  };\n\n  function drain() {\n    while (buffer.length && !stream.paused) {\n      var data = buffer.shift();\n      if (null === data) return stream.emit('end');else stream.emit('data', data);\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n    //    console.error(ended)\n    if (_ended) return stream;\n    if (data === null) _ended = true;\n    buffer.push(data);\n    drain();\n    return stream;\n  }; //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n\n  stream.on('end', function () {\n    stream.readable = false;\n    if (!stream.writable && stream.autoDestroy) process.nextTick(function () {\n      stream.destroy();\n    });\n  });\n\n  function _end() {\n    stream.writable = false;\n    end.call(stream);\n    if (!stream.readable && stream.autoDestroy) stream.destroy();\n  }\n\n  stream.end = function (data) {\n    if (ended) return;\n    ended = true;\n    if (arguments.length) stream.write(data);\n\n    _end(); // will emit or queue\n\n\n    return stream;\n  };\n\n  stream.destroy = function () {\n    if (destroyed) return;\n    destroyed = true;\n    ended = true;\n    buffer.length = 0;\n    stream.writable = stream.readable = false;\n    stream.emit('close');\n    return stream;\n  };\n\n  stream.pause = function () {\n    if (stream.paused) return;\n    stream.paused = true;\n    return stream;\n  };\n\n  stream.resume = function () {\n    if (stream.paused) {\n      stream.paused = false;\n      stream.emit('resume');\n    }\n\n    drain(); //may have become paused again,\n    //as drain emits 'data'.\n\n    if (!stream.paused) stream.emit('drain');\n    return stream;\n  };\n\n  return stream;\n}","map":{"version":3,"names":["Stream","require","exports","module","through","write","end","opts","data","queue","ended","destroyed","buffer","_ended","stream","readable","writable","paused","autoDestroy","call","drain","length","shift","emit","push","on","process","nextTick","destroy","_end","arguments","pause","resume"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/through/index.js"],"sourcesContent":["var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}