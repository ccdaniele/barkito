{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nmodule.exports = findit;\n\nfunction findit(basedir, opts) {\n  opts = opts || {};\n  var followSymlinks = !!opts.followSymlinks;\n  var myFs = opts.fs || fs;\n  var emitter = new EventEmitter();\n  var stopped = false;\n  var pending = 0;\n  var seen = {};\n  emitter.stop = stop;\n  walkPath(basedir);\n  return emitter;\n\n  function recursiveReadDir(basedir, linkPath) {\n    pendStart();\n    myFs.readdir(basedir, function (err, entries) {\n      if (stopped) return;\n\n      if (err) {\n        handleError(err, basedir);\n        pendEnd();\n        return;\n      }\n\n      entries.forEach(function (entry) {\n        var fullPath = path.join(basedir, entry);\n        var fullLinkPath = linkPath && path.join(linkPath, entry);\n        walkPath(fullPath, fullLinkPath);\n      });\n      pendEnd();\n    });\n  }\n\n  function walkPath(fullPath, linkPath) {\n    pendStart();\n    myFs.lstat(fullPath, function (err, stats) {\n      if (stopped) return;\n\n      if (err) {\n        handleError(err, fullPath);\n        pendEnd();\n        return;\n      }\n\n      emitter.emit('path', fullPath, stats, linkPath);\n      var dirStopped = false;\n\n      if (stats.isDirectory()) {\n        if (seen[fullPath]) {\n          err = new Error(\"file system loop detected\");\n          err.code = 'ELOOP';\n          handleError(err, fullPath);\n          pendEnd();\n          return;\n        }\n\n        seen[fullPath] = true;\n        emitter.emit('directory', fullPath, stats, stopDir, linkPath);\n        if (!dirStopped) recursiveReadDir(fullPath, linkPath);\n      } else if (stats.isFile()) {\n        if (!seen[fullPath]) {\n          seen[fullPath] = true;\n          emitter.emit('file', fullPath, stats, linkPath);\n        }\n      } else if (stats.isSymbolicLink()) {\n        emitter.emit('link', fullPath, stats, linkPath);\n        if (followSymlinks) recursiveReadLink(fullPath);\n      }\n\n      pendEnd();\n\n      function stopDir() {\n        dirStopped = true;\n      }\n    });\n  }\n\n  function recursiveReadLink(linkPath) {\n    pendStart();\n    myFs.readlink(linkPath, function (err, linkString) {\n      if (stopped) return;\n\n      if (err) {\n        handleError(err, linkPath);\n        pendEnd();\n        return;\n      }\n\n      var fullPath = path.resolve(path.dirname(linkPath), linkString);\n      emitter.emit('readlink', linkPath, fullPath);\n      walkPath(fullPath, linkPath);\n      pendEnd();\n    });\n  }\n\n  function stop() {\n    if (stopped) return;\n    stopped = true;\n    emitter.emit('stop');\n  }\n\n  function handleError(err, errPath) {\n    if (!err || stopped) return;\n    err.path = errPath;\n    emitter.emit('error', err);\n  }\n\n  function pendStart() {\n    pending += 1;\n  }\n\n  function pendEnd() {\n    if (stopped) return;\n    pending -= 1;\n\n    if (pending === 0) {\n      emitter.emit('end');\n    } else if (pending < 0) {\n      // this should never happen; if this gets thrown we need to debug findit\n      // and this stack trace will help.\n      throw new Error(\"pendEnd called too many times\");\n    }\n  }\n}","map":{"version":3,"names":["EventEmitter","require","fs","path","module","exports","findit","basedir","opts","followSymlinks","myFs","emitter","stopped","pending","seen","stop","walkPath","recursiveReadDir","linkPath","pendStart","readdir","err","entries","handleError","pendEnd","forEach","entry","fullPath","join","fullLinkPath","lstat","stats","emit","dirStopped","isDirectory","Error","code","stopDir","isFile","isSymbolicLink","recursiveReadLink","readlink","linkString","resolve","dirname","errPath"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/findit2/index.js"],"sourcesContent":["var EventEmitter = require('events').EventEmitter;\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = findit;\n\nfunction findit(basedir, opts) {\n  opts = opts || {};\n  var followSymlinks = !!opts.followSymlinks;\n  var myFs = opts.fs || fs;\n  var emitter = new EventEmitter();\n  var stopped = false;\n  var pending = 0;\n  var seen = {};\n\n  emitter.stop = stop;\n  walkPath(basedir);\n  return emitter;\n\n  function recursiveReadDir(basedir, linkPath) {\n    pendStart();\n    myFs.readdir(basedir, function(err, entries) {\n      if (stopped) return;\n      if (err) {\n        handleError(err, basedir);\n        pendEnd();\n        return;\n      }\n      entries.forEach(function(entry) {\n        var fullPath = path.join(basedir, entry);\n        var fullLinkPath = linkPath && path.join(linkPath, entry);\n        walkPath(fullPath, fullLinkPath);\n      });\n      pendEnd();\n    });\n  }\n\n  function walkPath(fullPath, linkPath) {\n    pendStart();\n    myFs.lstat(fullPath, function(err, stats) {\n      if (stopped) return;\n      if (err) {\n        handleError(err, fullPath);\n        pendEnd();\n        return;\n      }\n      emitter.emit('path', fullPath, stats, linkPath);\n      var dirStopped = false;\n      if (stats.isDirectory()) {\n        if (seen[fullPath]) {\n          err = new Error(\"file system loop detected\");\n          err.code = 'ELOOP';\n          handleError(err, fullPath);\n          pendEnd();\n          return;\n        }\n        seen[fullPath] = true;\n\n        emitter.emit('directory', fullPath, stats, stopDir, linkPath);\n        if (!dirStopped) recursiveReadDir(fullPath, linkPath);\n      } else if (stats.isFile()) {\n        if (!seen[fullPath]) {\n          seen[fullPath] = true;\n          emitter.emit('file', fullPath, stats, linkPath);\n        }\n      } else if (stats.isSymbolicLink()) {\n        emitter.emit('link', fullPath, stats, linkPath);\n        if (followSymlinks) recursiveReadLink(fullPath);\n      }\n      pendEnd();\n\n      function stopDir() {\n        dirStopped = true;\n      }\n    });\n  }\n\n  function recursiveReadLink(linkPath) {\n    pendStart();\n    myFs.readlink(linkPath, function(err, linkString) {\n      if (stopped) return;\n      if (err) {\n        handleError(err, linkPath);\n        pendEnd();\n        return;\n      }\n      var fullPath = path.resolve(path.dirname(linkPath), linkString);\n      emitter.emit('readlink', linkPath, fullPath);\n      walkPath(fullPath, linkPath);\n      pendEnd();\n    });\n  }\n\n  function stop() {\n    if (stopped) return;\n    stopped = true;\n    emitter.emit('stop');\n  }\n\n  function handleError(err, errPath) {\n    if (!err || stopped) return;\n    err.path = errPath;\n    emitter.emit('error', err);\n  }\n\n  function pendStart() {\n    pending += 1;\n  }\n\n  function pendEnd() {\n    if (stopped) return;\n    pending -= 1;\n    if (pending === 0) {\n      emitter.emit('end');\n    } else if (pending < 0) {\n      // this should never happen; if this gets thrown we need to debug findit\n      // and this stack trace will help.\n      throw new Error(\"pendEnd called too many times\");\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}