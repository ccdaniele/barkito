{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst log = require('../../dd-trace/src/log');\n\nconst GraphQLResolvePlugin = require('./resolve');\n\nlet tools;\n\nclass GraphQLPlugin extends Plugin {\n  static get name() {\n    return 'graphql';\n  }\n\n  constructor() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    super(...args);\n    /** Execute Subs */\n    // resolve plugin separated for disabling purposes\n\n    this.resolve = new GraphQLResolvePlugin(...args);\n    this.addSub('apm:graphql:execute:start', _ref => {\n      let {\n        operation,\n        args,\n        docSource\n      } = _ref;\n      const store = storage.getStore();\n      const span = startSpan('execute', this.config, this.tracer, store); // process add tags\n\n      addExecutionTags(span, this.config, operation, args.document);\n      addDocumentTags(span, args.document, this.config, docSource);\n      addVariableTags(this.config, span, args.variableValues);\n      analyticsSampler.sample(span, this.config.measured, true);\n      this.enter(span, store);\n    });\n    this.addSub('apm:graphql:execute:error', this.addError);\n    this.addSub('apm:graphql:execute:finish', _ref2 => {\n      let {\n        res,\n        args\n      } = _ref2;\n      const span = storage.getStore().span;\n      this.config.hooks.execute(span, args, res);\n      span.finish();\n    });\n    /** Parser Subs */\n\n    this.addSub('apm:graphql:parser:start', () => {\n      const store = storage.getStore();\n      const span = startSpan('parse', this.config, this.tracer, store);\n      analyticsSampler.sample(span, this.config.measured, true);\n      this.enter(span, store);\n    });\n    this.addSub('apm:graphql:parser:finish', _ref3 => {\n      let {\n        source,\n        document,\n        docSource\n      } = _ref3;\n      const span = storage.getStore().span;\n      const tags = {};\n\n      if (this.config.source && document) {\n        tags['graphql.source'] = docSource;\n      }\n\n      span.addTags(tags);\n      this.config.hooks.parse(span, source, document);\n      span.finish();\n    });\n    this.addSub('apm:graphql:parser:error', this.addError);\n    /** Validate Subs */\n\n    this.addSub('apm:graphql:validate:start', _ref4 => {\n      let {\n        docSource,\n        document\n      } = _ref4;\n      const store = storage.getStore();\n      const span = startSpan('validate', this.config, this.tracer, store);\n      analyticsSampler.sample(span, this.config.measured, true);\n\n      if (document && document.loc) {\n        const tags = {};\n\n        if (this.config.source && document) {\n          tags['graphql.source'] = docSource;\n        }\n\n        span.addTags(tags);\n      }\n\n      this.enter(span, store);\n    });\n    this.addSub('apm:graphql:validate:finish', _ref5 => {\n      let {\n        document,\n        errors\n      } = _ref5;\n      const span = storage.getStore().span;\n      this.config.hooks.validate(span, document, errors);\n      span.finish();\n    });\n    this.addSub('apm:graphql:validate:error', this.addError);\n  }\n\n  configure(config) {\n    const validated = validateConfig(config); // this will disable resolve subscribers if `config.depth` is set to 0\n\n    const resolveConfig = validated.depth === 0 ? false : validated;\n    this.resolve.configure(resolveConfig);\n    return super.configure(validated);\n  }\n\n} // config validator helpers\n\n\nfunction validateConfig(config) {\n  return Object.assign({}, config, {\n    depth: getDepth(config),\n    variables: getVariablesFilter(config),\n    collapse: config.collapse === undefined || !!config.collapse,\n    hooks: getHooks(config)\n  });\n}\n\nfunction getDepth(config) {\n  if (typeof config.depth === 'number') {\n    return config.depth;\n  } else if (config.hasOwnProperty('depth')) {\n    log.error('Expected `depth` to be a integer.');\n  }\n\n  return -1;\n}\n\nfunction getVariablesFilter(config) {\n  if (typeof config.variables === 'function') {\n    return config.variables;\n  } else if (config.variables instanceof Array) {\n    return variables => pick(variables, config.variables);\n  } else if (config.hasOwnProperty('variables')) {\n    log.error('Expected `variables` to be an array or function.');\n  }\n\n  return null;\n}\n\nfunction getHooks(config) {\n  const noop = () => {};\n\n  const execute = config.hooks && config.hooks.execute || noop;\n  const parse = config.hooks && config.hooks.parse || noop;\n  const validate = config.hooks && config.hooks.validate || noop;\n  return {\n    execute,\n    parse,\n    validate\n  };\n} // non-lodash pick\n\n\nfunction pick(obj, selectors) {\n  return Object.fromEntries(Object.entries(obj).filter(_ref6 => {\n    let [key] = _ref6;\n    return selectors.includes(key);\n  }));\n} // span-related\n\n\nfunction startSpan(name, conf, tracer, store, options) {\n  const service = conf.service || tracer._service;\n  const childOf = store ? store.span : store;\n  options = options || {};\n  return tracer.startSpan(`graphql.${name}`, {\n    childOf: options.childOf || childOf,\n    startTime: options.startTime,\n    tags: {\n      'service.name': service,\n      'span.type': 'graphql'\n    }\n  });\n}\n\nfunction addExecutionTags(span, config, operation, document) {\n  const type = operation && operation.operation;\n  const name = operation && operation.name && operation.name.value;\n  const tags = {\n    'resource.name': getSignature(document, name, type, config.signature)\n  };\n\n  if (type) {\n    tags['graphql.operation.type'] = type;\n  }\n\n  if (name) {\n    tags['graphql.operation.name'] = name;\n  }\n\n  span.addTags(tags);\n}\n\nfunction addDocumentTags(span, document, config, docSource) {\n  const tags = {};\n\n  if (config.source && document) {\n    tags['graphql.source'] = docSource;\n  }\n\n  span.addTags(tags);\n}\n\nfunction addVariableTags(config, span, variableValues) {\n  const tags = {};\n\n  if (variableValues && config.variables) {\n    const variables = config.variables(variableValues);\n\n    for (const param in variables) {\n      tags[`graphql.variables.${param}`] = variables[param];\n    }\n  }\n\n  span.addTags(tags);\n}\n\nfunction getSignature(document, operationName, operationType, calculate) {\n  if (calculate !== false && tools !== false) {\n    try {\n      try {\n        tools = tools || require('./tools');\n      } catch (e) {\n        tools = false;\n        throw e;\n      }\n\n      return tools.defaultEngineReportingSignature(document, operationName);\n    } catch (e) {// safety net\n    }\n  }\n\n  return [operationType, operationName].filter(val => val).join(' ');\n}\n\nmodule.exports = GraphQLPlugin;","map":{"version":3,"names":["Plugin","require","storage","analyticsSampler","log","GraphQLResolvePlugin","tools","GraphQLPlugin","name","constructor","args","resolve","addSub","operation","docSource","store","getStore","span","startSpan","config","tracer","addExecutionTags","document","addDocumentTags","addVariableTags","variableValues","sample","measured","enter","addError","res","hooks","execute","finish","source","tags","addTags","parse","loc","errors","validate","configure","validated","validateConfig","resolveConfig","depth","Object","assign","getDepth","variables","getVariablesFilter","collapse","undefined","getHooks","hasOwnProperty","error","Array","pick","noop","obj","selectors","fromEntries","entries","filter","key","includes","conf","options","service","_service","childOf","startTime","type","value","getSignature","signature","param","operationName","operationType","calculate","e","defaultEngineReportingSignature","val","join","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-graphql/src/index.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst log = require('../../dd-trace/src/log')\nconst GraphQLResolvePlugin = require('./resolve')\n\nlet tools\nclass GraphQLPlugin extends Plugin {\n  static get name () {\n    return 'graphql'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    /** Execute Subs */\n\n    // resolve plugin separated for disabling purposes\n    this.resolve = new GraphQLResolvePlugin(...args)\n\n    this.addSub('apm:graphql:execute:start', ({ operation, args, docSource }) => {\n      const store = storage.getStore()\n      const span = startSpan('execute', this.config, this.tracer, store)\n\n      // process add tags\n      addExecutionTags(span, this.config, operation, args.document)\n      addDocumentTags(span, args.document, this.config, docSource)\n      addVariableTags(this.config, span, args.variableValues)\n\n      analyticsSampler.sample(span, this.config.measured, true)\n\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:graphql:execute:error', this.addError)\n\n    this.addSub('apm:graphql:execute:finish', ({ res, args }) => {\n      const span = storage.getStore().span\n      this.config.hooks.execute(span, args, res)\n      span.finish()\n    })\n\n    /** Parser Subs */\n\n    this.addSub('apm:graphql:parser:start', () => {\n      const store = storage.getStore()\n      const span = startSpan('parse', this.config, this.tracer, store)\n\n      analyticsSampler.sample(span, this.config.measured, true)\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:graphql:parser:finish', ({ source, document, docSource }) => {\n      const span = storage.getStore().span\n\n      const tags = {}\n      if (this.config.source && document) {\n        tags['graphql.source'] = docSource\n      }\n\n      span.addTags(tags)\n\n      this.config.hooks.parse(span, source, document)\n\n      span.finish()\n    })\n\n    this.addSub('apm:graphql:parser:error', this.addError)\n\n    /** Validate Subs */\n\n    this.addSub('apm:graphql:validate:start', ({ docSource, document }) => {\n      const store = storage.getStore()\n      const span = startSpan('validate', this.config, this.tracer, store)\n\n      analyticsSampler.sample(span, this.config.measured, true)\n\n      if (document && document.loc) {\n        const tags = {}\n        if (this.config.source && document) {\n          tags['graphql.source'] = docSource\n        }\n\n        span.addTags(tags)\n      }\n\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:graphql:validate:finish', ({ document, errors }) => {\n      const span = storage.getStore().span\n      this.config.hooks.validate(span, document, errors)\n      span.finish()\n    })\n\n    this.addSub('apm:graphql:validate:error', this.addError)\n  }\n\n  configure (config) {\n    const validated = validateConfig(config)\n\n    // this will disable resolve subscribers if `config.depth` is set to 0\n    const resolveConfig = validated.depth === 0 ? false : validated\n    this.resolve.configure(resolveConfig)\n\n    return super.configure(validated)\n  }\n}\n\n// config validator helpers\n\nfunction validateConfig (config) {\n  return Object.assign({}, config, {\n    depth: getDepth(config),\n    variables: getVariablesFilter(config),\n    collapse: config.collapse === undefined || !!config.collapse,\n    hooks: getHooks(config)\n  })\n}\n\nfunction getDepth (config) {\n  if (typeof config.depth === 'number') {\n    return config.depth\n  } else if (config.hasOwnProperty('depth')) {\n    log.error('Expected `depth` to be a integer.')\n  }\n  return -1\n}\n\nfunction getVariablesFilter (config) {\n  if (typeof config.variables === 'function') {\n    return config.variables\n  } else if (config.variables instanceof Array) {\n    return variables => pick(variables, config.variables)\n  } else if (config.hasOwnProperty('variables')) {\n    log.error('Expected `variables` to be an array or function.')\n  }\n  return null\n}\n\nfunction getHooks (config) {\n  const noop = () => { }\n  const execute = (config.hooks && config.hooks.execute) || noop\n  const parse = (config.hooks && config.hooks.parse) || noop\n  const validate = (config.hooks && config.hooks.validate) || noop\n\n  return { execute, parse, validate }\n}\n\n// non-lodash pick\n\nfunction pick (obj, selectors) {\n  return Object.fromEntries(Object.entries(obj).filter(([key]) => selectors.includes(key)))\n}\n\n// span-related\n\nfunction startSpan (name, conf, tracer, store, options) {\n  const service = conf.service || tracer._service\n  const childOf = store ? store.span : store\n  options = options || {}\n  return tracer.startSpan(`graphql.${name}`, {\n    childOf: options.childOf || childOf,\n    startTime: options.startTime,\n    tags: {\n      'service.name': service,\n      'span.type': 'graphql'\n    }\n  })\n}\n\nfunction addExecutionTags (span, config, operation, document) {\n  const type = operation && operation.operation\n  const name = operation && operation.name && operation.name.value\n  const tags = {\n    'resource.name': getSignature(document, name, type, config.signature)\n  }\n\n  if (type) {\n    tags['graphql.operation.type'] = type\n  }\n\n  if (name) {\n    tags['graphql.operation.name'] = name\n  }\n\n  span.addTags(tags)\n}\n\nfunction addDocumentTags (span, document, config, docSource) {\n  const tags = {}\n\n  if (config.source && document) {\n    tags['graphql.source'] = docSource\n  }\n\n  span.addTags(tags)\n}\n\nfunction addVariableTags (config, span, variableValues) {\n  const tags = {}\n\n  if (variableValues && config.variables) {\n    const variables = config.variables(variableValues)\n    for (const param in variables) {\n      tags[`graphql.variables.${param}`] = variables[param]\n    }\n  }\n\n  span.addTags(tags)\n}\n\nfunction getSignature (document, operationName, operationType, calculate) {\n  if (calculate !== false && tools !== false) {\n    try {\n      try {\n        tools = tools || require('./tools')\n      } catch (e) {\n        tools = false\n        throw e\n      }\n\n      return tools.defaultEngineReportingSignature(document, operationName)\n    } catch (e) {\n      // safety net\n    }\n  }\n\n  return [operationType, operationName].filter(val => val).join(' ')\n}\n\nmodule.exports = GraphQLPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}