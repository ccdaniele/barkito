{"ast":null,"code":"'use strict';\n\nconst semver = require('semver');\n\nif (semver.satisfies(process.version, '>=14.18.0')) {\n  const net = require('net');\n\n  module.exports = net.BlockList;\n} else {\n  const ipaddr = require('ipaddr.js');\n\n  module.exports = class BlockList {\n    constructor() {\n      this.v4Ranges = [];\n      this.v6Ranges = [];\n    }\n\n    addSubnet(net, prefix, type) {\n      this[type === 'ipv4' ? 'v4Ranges' : 'v6Ranges'].push(ipaddr.parseCIDR(`${net}/${prefix}`));\n    }\n\n    check(address, type) {\n      try {\n        let ip = ipaddr.parse(address);\n        type = ip.kind();\n\n        if (type === 'ipv6') {\n          for (const range of this.v6Ranges) {\n            if (ip.match(range)) return true;\n          }\n\n          if (ip.isIPv4MappedAddress()) {\n            ip = ip.toIPv4Address();\n            type = ip.kind();\n          }\n        }\n\n        if (type === 'ipv4') {\n          for (const range of this.v4Ranges) {\n            if (ip.match(range)) return true;\n          }\n        }\n\n        return false;\n      } catch {\n        return false;\n      }\n    }\n\n  };\n}","map":{"version":3,"names":["semver","require","satisfies","process","version","net","module","exports","BlockList","ipaddr","constructor","v4Ranges","v6Ranges","addSubnet","prefix","type","push","parseCIDR","check","address","ip","parse","kind","range","match","isIPv4MappedAddress","toIPv4Address"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/plugins/util/ip_blocklist.js"],"sourcesContent":["'use strict'\r\n\r\nconst semver = require('semver')\r\n\r\nif (semver.satisfies(process.version, '>=14.18.0')) {\r\n  const net = require('net')\r\n\r\n  module.exports = net.BlockList\r\n} else {\r\n  const ipaddr = require('ipaddr.js')\r\n\r\n  module.exports = class BlockList {\r\n    constructor () {\r\n      this.v4Ranges = []\r\n      this.v6Ranges = []\r\n    }\r\n\r\n    addSubnet (net, prefix, type) {\r\n      this[type === 'ipv4' ? 'v4Ranges' : 'v6Ranges'].push(ipaddr.parseCIDR(`${net}/${prefix}`))\r\n    }\r\n\r\n    check (address, type) {\r\n      try {\r\n        let ip = ipaddr.parse(address)\r\n\r\n        type = ip.kind()\r\n\r\n        if (type === 'ipv6') {\r\n          for (const range of this.v6Ranges) {\r\n            if (ip.match(range)) return true\r\n          }\r\n\r\n          if (ip.isIPv4MappedAddress()) {\r\n            ip = ip.toIPv4Address()\r\n            type = ip.kind()\r\n          }\r\n        }\r\n\r\n        if (type === 'ipv4') {\r\n          for (const range of this.v4Ranges) {\r\n            if (ip.match(range)) return true\r\n          }\r\n        }\r\n\r\n        return false\r\n      } catch {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAID,MAAM,CAACE,SAAP,CAAiBC,OAAO,CAACC,OAAzB,EAAkC,WAAlC,CAAJ,EAAoD;EAClD,MAAMC,GAAG,GAAGJ,OAAO,CAAC,KAAD,CAAnB;;EAEAK,MAAM,CAACC,OAAP,GAAiBF,GAAG,CAACG,SAArB;AACD,CAJD,MAIO;EACL,MAAMC,MAAM,GAAGR,OAAO,CAAC,WAAD,CAAtB;;EAEAK,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,CAAgB;IAC/BE,WAAW,GAAI;MACb,KAAKC,QAAL,GAAgB,EAAhB;MACA,KAAKC,QAAL,GAAgB,EAAhB;IACD;;IAEDC,SAAS,CAAER,GAAF,EAAOS,MAAP,EAAeC,IAAf,EAAqB;MAC5B,KAAKA,IAAI,KAAK,MAAT,GAAkB,UAAlB,GAA+B,UAApC,EAAgDC,IAAhD,CAAqDP,MAAM,CAACQ,SAAP,CAAkB,GAAEZ,GAAI,IAAGS,MAAO,EAAlC,CAArD;IACD;;IAEDI,KAAK,CAAEC,OAAF,EAAWJ,IAAX,EAAiB;MACpB,IAAI;QACF,IAAIK,EAAE,GAAGX,MAAM,CAACY,KAAP,CAAaF,OAAb,CAAT;QAEAJ,IAAI,GAAGK,EAAE,CAACE,IAAH,EAAP;;QAEA,IAAIP,IAAI,KAAK,MAAb,EAAqB;UACnB,KAAK,MAAMQ,KAAX,IAAoB,KAAKX,QAAzB,EAAmC;YACjC,IAAIQ,EAAE,CAACI,KAAH,CAASD,KAAT,CAAJ,EAAqB,OAAO,IAAP;UACtB;;UAED,IAAIH,EAAE,CAACK,mBAAH,EAAJ,EAA8B;YAC5BL,EAAE,GAAGA,EAAE,CAACM,aAAH,EAAL;YACAX,IAAI,GAAGK,EAAE,CAACE,IAAH,EAAP;UACD;QACF;;QAED,IAAIP,IAAI,KAAK,MAAb,EAAqB;UACnB,KAAK,MAAMQ,KAAX,IAAoB,KAAKZ,QAAzB,EAAmC;YACjC,IAAIS,EAAE,CAACI,KAAH,CAASD,KAAT,CAAJ,EAAqB,OAAO,IAAP;UACtB;QACF;;QAED,OAAO,KAAP;MACD,CAvBD,CAuBE,MAAM;QACN,OAAO,KAAP;MACD;IACF;;EArC8B,CAAjC;AAuCD"},"metadata":{},"sourceType":"script"}