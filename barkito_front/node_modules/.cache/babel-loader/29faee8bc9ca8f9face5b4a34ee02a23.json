{"ast":null,"code":"'use strict';\n\nconst callbacks = require('./callbacks');\n\nconst appliedCallbacks = new Map();\n\nfunction applyRules(rules, config) {\n  if (appliedCallbacks.has(rules)) return; // for now there is only WAF\n\n  const callback = new callbacks.DDWAF(rules, config);\n  appliedCallbacks.set(rules, callback);\n}\n\nfunction clearAllRules() {\n  for (const [key, callback] of appliedCallbacks) {\n    callback.clear();\n    appliedCallbacks.delete(key);\n  }\n}\n\nmodule.exports = {\n  applyRules,\n  clearAllRules\n};","map":{"version":3,"names":["callbacks","require","appliedCallbacks","Map","applyRules","rules","config","has","callback","DDWAF","set","clearAllRules","key","clear","delete","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/rule_manager.js"],"sourcesContent":["'use strict'\n\nconst callbacks = require('./callbacks')\n\nconst appliedCallbacks = new Map()\n\nfunction applyRules (rules, config) {\n  if (appliedCallbacks.has(rules)) return\n\n  // for now there is only WAF\n  const callback = new callbacks.DDWAF(rules, config)\n\n  appliedCallbacks.set(rules, callback)\n}\n\nfunction clearAllRules () {\n  for (const [key, callback] of appliedCallbacks) {\n    callback.clear()\n\n    appliedCallbacks.delete(key)\n  }\n}\n\nmodule.exports = {\n  applyRules,\n  clearAllRules\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAMC,gBAAgB,GAAG,IAAIC,GAAJ,EAAzB;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;EAClC,IAAIJ,gBAAgB,CAACK,GAAjB,CAAqBF,KAArB,CAAJ,EAAiC,OADC,CAGlC;;EACA,MAAMG,QAAQ,GAAG,IAAIR,SAAS,CAACS,KAAd,CAAoBJ,KAApB,EAA2BC,MAA3B,CAAjB;EAEAJ,gBAAgB,CAACQ,GAAjB,CAAqBL,KAArB,EAA4BG,QAA5B;AACD;;AAED,SAASG,aAAT,GAA0B;EACxB,KAAK,MAAM,CAACC,GAAD,EAAMJ,QAAN,CAAX,IAA8BN,gBAA9B,EAAgD;IAC9CM,QAAQ,CAACK,KAAT;IAEAX,gBAAgB,CAACY,MAAjB,CAAwBF,GAAxB;EACD;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiB;EACfZ,UADe;EAEfO;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}