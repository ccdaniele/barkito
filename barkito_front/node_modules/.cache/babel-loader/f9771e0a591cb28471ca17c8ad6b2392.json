{"ast":null,"code":"'use strict';\n\nconst types = require('./types');\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('../helpers/instrument');\n\nconst shimmer = require('../../../datadog-shimmer');\n\nconst startChannel = channel('apm:grpc:server:request:start');\nconst errorChannel = channel('apm:grpc:server:request:error');\nconst updateChannel = channel('apm:grpc:server:request:update');\nconst finishChannel = channel('apm:grpc:server:request:finish'); // https://github.com/grpc/grpc/blob/master/doc/statuscodes.md\n\nconst OK = 0;\nconst CANCELLED = 1;\n\nfunction wrapHandler(func, name) {\n  const isValid = (server, args) => {\n    if (!startChannel.hasSubscribers) return false;\n    if (!server || !server.type) return false;\n    if (!args[0]) return false;\n    if (server.type !== 'unary' && !isEmitter(args[0])) return false;\n    if (server.type === 'unary' && typeof args[1] !== 'function') return false;\n    return true;\n  };\n\n  return function (call, callback) {\n    if (!isValid(this, arguments)) return func.apply(this, arguments);\n    const metadata = call.metadata;\n    const type = types[this.type];\n    const isStream = type !== 'unary';\n    const parentResource = new AsyncResource('bound-anonymous-fn');\n    const requestResource = new AsyncResource('bound-anonymous-fn');\n    return requestResource.runInAsyncScope(() => {\n      startChannel.publish({\n        name,\n        metadata,\n        type\n      });\n      const onCancel = requestResource.bind(() => {\n        finishChannel.publish({\n          code: CANCELLED\n        });\n      }); // Finish the span if the call was cancelled.\n\n      call.once('cancelled', onCancel);\n\n      if (isStream) {\n        wrapStream(call, requestResource, onCancel);\n      } else {\n        arguments[1] = wrapCallback(callback, call, requestResource, parentResource, onCancel);\n      }\n\n      shimmer.wrap(call, 'emit', emit => requestResource.bind(emit));\n      return func.apply(this, arguments);\n    });\n  };\n}\n\nfunction wrapRegister(register) {\n  return function (name, handler, serialize, deserialize, type) {\n    if (typeof handler === 'function') {\n      arguments[1] = wrapHandler(handler, name);\n    }\n\n    return register.apply(this, arguments);\n  };\n}\n\nfunction wrapStream(call, requestResource, onCancel) {\n  if (call.call && call.call.sendStatus) {\n    call.call.sendStatus = wrapSendStatus(call.call.sendStatus, requestResource);\n  }\n\n  shimmer.wrap(call, 'emit', emit => {\n    return function (eventName) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      switch (eventName) {\n        case 'error':\n          errorChannel.publish(args[0]);\n          finishChannel.publish({\n            code: args[0].code\n          });\n          call.removeListener('cancelled', onCancel);\n          break;\n        // Finish the span of the response only if it was successful.\n        // Otherwise it'll be finished in the `error` listener.\n\n        case 'finish':\n          if (call.status) {\n            updateChannel.publish(call.status);\n          }\n\n          if (!call.status || call.status.code === 0) {\n            finishChannel.publish();\n          }\n\n          call.removeListener('cancelled', onCancel);\n          break;\n      }\n\n      return emit.apply(this, arguments);\n    };\n  });\n}\n\nfunction wrapCallback(callback, call, requestResource, parentResource, onCancel) {\n  return function (err, value, trailer, flags) {\n    requestResource.runInAsyncScope(() => {\n      if (err instanceof Error) {\n        errorChannel.publish(err);\n        finishChannel.publish(err);\n      } else {\n        finishChannel.publish({\n          code: OK,\n          trailer\n        });\n      }\n\n      call.removeListener('cancelled', onCancel);\n    });\n\n    if (callback) {\n      return parentResource.runInAsyncScope(() => {\n        return callback.apply(this, arguments);\n      });\n    }\n  };\n}\n\nfunction wrapSendStatus(sendStatus, requestResource) {\n  return function (status) {\n    requestResource.runInAsyncScope(() => {\n      updateChannel.publish(status);\n    });\n    return sendStatus.apply(this, arguments);\n  };\n}\n\nfunction isEmitter(obj) {\n  return typeof obj.emit === 'function' && typeof obj.once === 'function';\n}\n\naddHook({\n  name: 'grpc',\n  versions: ['>=1.24.3'],\n  file: 'src/server.js'\n}, server => {\n  shimmer.wrap(server.Server.prototype, 'register', wrapRegister);\n  return server;\n});\naddHook({\n  name: '@grpc/grpc-js',\n  versions: ['>=1.0.3'],\n  file: 'build/src/server.js'\n}, server => {\n  shimmer.wrap(server.Server.prototype, 'register', wrapRegister);\n  return server;\n});","map":{"version":3,"names":["types","require","channel","addHook","AsyncResource","shimmer","startChannel","errorChannel","updateChannel","finishChannel","OK","CANCELLED","wrapHandler","func","name","isValid","server","args","hasSubscribers","type","isEmitter","call","callback","arguments","apply","metadata","isStream","parentResource","requestResource","runInAsyncScope","publish","onCancel","bind","code","once","wrapStream","wrapCallback","wrap","emit","wrapRegister","register","handler","serialize","deserialize","sendStatus","wrapSendStatus","eventName","removeListener","status","err","value","trailer","flags","Error","obj","versions","file","Server","prototype"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/grpc/server.js"],"sourcesContent":["'use strict'\n\nconst types = require('./types')\nconst { channel, addHook, AsyncResource } = require('../helpers/instrument')\nconst shimmer = require('../../../datadog-shimmer')\n\nconst startChannel = channel('apm:grpc:server:request:start')\nconst errorChannel = channel('apm:grpc:server:request:error')\nconst updateChannel = channel('apm:grpc:server:request:update')\nconst finishChannel = channel('apm:grpc:server:request:finish')\n\n// https://github.com/grpc/grpc/blob/master/doc/statuscodes.md\nconst OK = 0\nconst CANCELLED = 1\n\nfunction wrapHandler (func, name) {\n  const isValid = (server, args) => {\n    if (!startChannel.hasSubscribers) return false\n    if (!server || !server.type) return false\n    if (!args[0]) return false\n    if (server.type !== 'unary' && !isEmitter(args[0])) return false\n    if (server.type === 'unary' && typeof args[1] !== 'function') return false\n\n    return true\n  }\n\n  return function (call, callback) {\n    if (!isValid(this, arguments)) return func.apply(this, arguments)\n\n    const metadata = call.metadata\n    const type = types[this.type]\n    const isStream = type !== 'unary'\n\n    const parentResource = new AsyncResource('bound-anonymous-fn')\n    const requestResource = new AsyncResource('bound-anonymous-fn')\n\n    return requestResource.runInAsyncScope(() => {\n      startChannel.publish({ name, metadata, type })\n\n      const onCancel = requestResource.bind(() => {\n        finishChannel.publish({ code: CANCELLED })\n      })\n\n      // Finish the span if the call was cancelled.\n      call.once('cancelled', onCancel)\n\n      if (isStream) {\n        wrapStream(call, requestResource, onCancel)\n      } else {\n        arguments[1] = wrapCallback(callback, call, requestResource, parentResource, onCancel)\n      }\n\n      shimmer.wrap(call, 'emit', emit => requestResource.bind(emit))\n\n      return func.apply(this, arguments)\n    })\n  }\n}\n\nfunction wrapRegister (register) {\n  return function (name, handler, serialize, deserialize, type) {\n    if (typeof handler === 'function') {\n      arguments[1] = wrapHandler(handler, name)\n    }\n\n    return register.apply(this, arguments)\n  }\n}\n\nfunction wrapStream (call, requestResource, onCancel) {\n  if (call.call && call.call.sendStatus) {\n    call.call.sendStatus = wrapSendStatus(call.call.sendStatus, requestResource)\n  }\n\n  shimmer.wrap(call, 'emit', emit => {\n    return function (eventName, ...args) {\n      switch (eventName) {\n        case 'error':\n          errorChannel.publish(args[0])\n          finishChannel.publish({ code: args[0].code })\n\n          call.removeListener('cancelled', onCancel)\n\n          break\n\n          // Finish the span of the response only if it was successful.\n          // Otherwise it'll be finished in the `error` listener.\n        case 'finish':\n          if (call.status) {\n            updateChannel.publish(call.status)\n          }\n\n          if (!call.status || call.status.code === 0) {\n            finishChannel.publish()\n          }\n\n          call.removeListener('cancelled', onCancel)\n\n          break\n      }\n\n      return emit.apply(this, arguments)\n    }\n  })\n}\n\nfunction wrapCallback (callback, call, requestResource, parentResource, onCancel) {\n  return function (err, value, trailer, flags) {\n    requestResource.runInAsyncScope(() => {\n      if (err instanceof Error) {\n        errorChannel.publish(err)\n        finishChannel.publish(err)\n      } else {\n        finishChannel.publish({ code: OK, trailer })\n      }\n\n      call.removeListener('cancelled', onCancel)\n    })\n\n    if (callback) {\n      return parentResource.runInAsyncScope(() => {\n        return callback.apply(this, arguments)\n      })\n    }\n  }\n}\n\nfunction wrapSendStatus (sendStatus, requestResource) {\n  return function (status) {\n    requestResource.runInAsyncScope(() => {\n      updateChannel.publish(status)\n    })\n\n    return sendStatus.apply(this, arguments)\n  }\n}\n\nfunction isEmitter (obj) {\n  return typeof obj.emit === 'function' && typeof obj.once === 'function'\n}\n\naddHook({ name: 'grpc', versions: ['>=1.24.3'], file: 'src/server.js' }, server => {\n  shimmer.wrap(server.Server.prototype, 'register', wrapRegister)\n\n  return server\n})\n\naddHook({ name: '@grpc/grpc-js', versions: ['>=1.0.3'], file: 'build/src/server.js' }, server => {\n  shimmer.wrap(server.Server.prototype, 'register', wrapRegister)\n\n  return server\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}