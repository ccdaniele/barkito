{"ast":null,"code":"'use strict';\n\nconst Analyzer = require('./vulnerability-analyzer');\n\nconst INSECURE_CIPHERS = new Set(['des', 'des-cbc', 'des-cfb', 'des-cfb1', 'des-cfb8', 'des-ecb', 'des-ede', 'des-ede-cbc', 'des-ede-cfb', 'des-ede-ecb', 'des-ede-ofb', 'des-ede3', 'des-ede3-cbc', 'des-ede3-cfb', 'des-ede3-cfb1', 'des-ede3-cfb8', 'des-ede3-ecb', 'des-ede3-ofb', 'des-ofb', 'des3', 'des3-wrap', 'rc2', 'rc2-128', 'rc2-40', 'rc2-40-cbc', 'rc2-64', 'rc2-64-cbc', 'rc2-cbc', 'rc2-cfb', 'rc2-ecb', 'rc2-ofb', 'blowfish', 'rc4', 'rc4-40', 'rc4-hmac-md5'].map(algorithm => algorithm.toLowerCase()));\n\nclass WeakCipherAnalyzer extends Analyzer {\n  constructor() {\n    super('WEAK_CIPHER');\n    this.addSub('datadog:crypto:cipher:start', _ref => {\n      let {\n        algorithm\n      } = _ref;\n      return this.analyze(algorithm);\n    });\n  }\n\n  _isVulnerable(algorithm) {\n    if (algorithm && typeof algorithm === 'string') {\n      return INSECURE_CIPHERS.has(algorithm.toLowerCase());\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = new WeakCipherAnalyzer();","map":{"version":3,"names":["Analyzer","require","INSECURE_CIPHERS","Set","map","algorithm","toLowerCase","WeakCipherAnalyzer","constructor","addSub","analyze","_isVulnerable","has","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/appsec/iast/analyzers/weak-cipher-analyzer.js"],"sourcesContent":["'use strict'\nconst Analyzer = require('./vulnerability-analyzer')\n\nconst INSECURE_CIPHERS = new Set([\n  'des', 'des-cbc', 'des-cfb', 'des-cfb1', 'des-cfb8', 'des-ecb', 'des-ede', 'des-ede-cbc', 'des-ede-cfb',\n  'des-ede-ecb', 'des-ede-ofb', 'des-ede3', 'des-ede3-cbc', 'des-ede3-cfb', 'des-ede3-cfb1', 'des-ede3-cfb8',\n  'des-ede3-ecb', 'des-ede3-ofb', 'des-ofb', 'des3', 'des3-wrap',\n  'rc2', 'rc2-128', 'rc2-40', 'rc2-40-cbc', 'rc2-64', 'rc2-64-cbc', 'rc2-cbc', 'rc2-cfb', 'rc2-ecb', 'rc2-ofb',\n  'blowfish',\n  'rc4', 'rc4-40', 'rc4-hmac-md5'\n].map(algorithm => algorithm.toLowerCase()))\n\nclass WeakCipherAnalyzer extends Analyzer {\n  constructor () {\n    super('WEAK_CIPHER')\n    this.addSub('datadog:crypto:cipher:start', ({ algorithm }) => this.analyze(algorithm))\n  }\n\n  _isVulnerable (algorithm) {\n    if (algorithm && typeof algorithm === 'string') {\n      return INSECURE_CIPHERS.has(algorithm.toLowerCase())\n    }\n    return false\n  }\n}\n\nmodule.exports = new WeakCipherAnalyzer()\n"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMC,gBAAgB,GAAG,IAAIC,GAAJ,CAAQ,CAC/B,KAD+B,EACxB,SADwB,EACb,SADa,EACF,UADE,EACU,UADV,EACsB,SADtB,EACiC,SADjC,EAC4C,aAD5C,EAC2D,aAD3D,EAE/B,aAF+B,EAEhB,aAFgB,EAED,UAFC,EAEW,cAFX,EAE2B,cAF3B,EAE2C,eAF3C,EAE4D,eAF5D,EAG/B,cAH+B,EAGf,cAHe,EAGC,SAHD,EAGY,MAHZ,EAGoB,WAHpB,EAI/B,KAJ+B,EAIxB,SAJwB,EAIb,QAJa,EAIH,YAJG,EAIW,QAJX,EAIqB,YAJrB,EAImC,SAJnC,EAI8C,SAJ9C,EAIyD,SAJzD,EAIoE,SAJpE,EAK/B,UAL+B,EAM/B,KAN+B,EAMxB,QANwB,EAMd,cANc,EAO/BC,GAP+B,CAO3BC,SAAS,IAAIA,SAAS,CAACC,WAAV,EAPc,CAAR,CAAzB;;AASA,MAAMC,kBAAN,SAAiCP,QAAjC,CAA0C;EACxCQ,WAAW,GAAI;IACb,MAAM,aAAN;IACA,KAAKC,MAAL,CAAY,6BAAZ,EAA2C;MAAA,IAAC;QAAEJ;MAAF,CAAD;MAAA,OAAmB,KAAKK,OAAL,CAAaL,SAAb,CAAnB;IAAA,CAA3C;EACD;;EAEDM,aAAa,CAAEN,SAAF,EAAa;IACxB,IAAIA,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;MAC9C,OAAOH,gBAAgB,CAACU,GAAjB,CAAqBP,SAAS,CAACC,WAAV,EAArB,CAAP;IACD;;IACD,OAAO,KAAP;EACD;;AAXuC;;AAc1CO,MAAM,CAACC,OAAP,GAAiB,IAAIP,kBAAJ,EAAjB"},"metadata":{},"sourceType":"script"}