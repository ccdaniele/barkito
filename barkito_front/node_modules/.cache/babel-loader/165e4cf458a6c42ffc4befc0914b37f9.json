{"ast":null,"code":"'use strict';\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin');\n\nconst {\n  storage\n} = require('../../datadog-core');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst Tags = require('../../../ext/tags');\n\nconst {\n  TEXT_MAP\n} = require('../../../ext/formats');\n\nconst {\n  addMethodTags,\n  addMetadataTags,\n  getFilter\n} = require('./util');\n\nclass GrpcClientPlugin extends Plugin {\n  static get name() {\n    return 'grpc';\n  }\n\n  constructor() {\n    super(...arguments);\n    this.addSub('apm:grpc:client:request:start', _ref => {\n      let {\n        metadata,\n        path,\n        type\n      } = _ref;\n      const metadataFilter = this.config.metadataFilter;\n      const store = storage.getStore();\n      const childOf = store && store.span;\n      const span = this.tracer.startSpan('grpc.request', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: 'client',\n          'span.type': 'http',\n          'resource.name': path,\n          'service.name': this.config.service || `${this.tracer._service}-grpc-client`,\n          'component': 'grpc'\n        }\n      });\n      addMethodTags(span, path, type);\n\n      if (metadata) {\n        addMetadataTags(span, metadata, metadataFilter, 'request');\n        inject(this.tracer, span, metadata);\n      }\n\n      analyticsSampler.sample(span, this.config.measured);\n      this.enter(span, store);\n    });\n    this.addSub('apm:grpc:client:request:error', error => {\n      const store = storage.getStore();\n      if (!store || !store.span) return;\n      this.addCode(store.span, error.code);\n      this.addError(error);\n    });\n    this.addSub('apm:grpc:client:request:finish', _ref2 => {\n      let {\n        code,\n        metadata\n      } = _ref2;\n      const store = storage.getStore();\n      if (!store || !store.span) return;\n      const span = store.span;\n      const metadataFilter = this.config.metadataFilter;\n      this.addCode(span, code);\n\n      if (metadata && metadataFilter) {\n        addMetadataTags(span, metadata, metadataFilter, 'response');\n      }\n\n      store.span.finish();\n    });\n  }\n\n  configure(config) {\n    const metadataFilter = getFilter(config, 'metadata');\n    return super.configure({ ...config,\n      metadataFilter\n    });\n  }\n\n  addCode(span, code) {\n    if (code !== undefined) {\n      span.setTag('grpc.status.code', code);\n    }\n  }\n\n}\n\nfunction inject(tracer, span, metadata) {\n  if (typeof metadata.set !== 'function') return;\n  const carrier = {};\n  tracer.inject(span, TEXT_MAP, carrier);\n\n  for (const key in carrier) {\n    metadata.set(key, carrier[key]);\n  }\n}\n\nmodule.exports = GrpcClientPlugin;","map":{"version":3,"names":["Plugin","require","storage","analyticsSampler","Tags","TEXT_MAP","addMethodTags","addMetadataTags","getFilter","GrpcClientPlugin","name","constructor","addSub","metadata","path","type","metadataFilter","config","store","getStore","childOf","span","tracer","startSpan","tags","SPAN_KIND","service","_service","inject","sample","measured","enter","error","addCode","code","addError","finish","configure","undefined","setTag","set","carrier","key","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-grpc/src/client.js"],"sourcesContent":["'use strict'\n\nconst Plugin = require('../../dd-trace/src/plugins/plugin')\nconst { storage } = require('../../datadog-core')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst Tags = require('../../../ext/tags')\nconst { TEXT_MAP } = require('../../../ext/formats')\nconst { addMethodTags, addMetadataTags, getFilter } = require('./util')\n\nclass GrpcClientPlugin extends Plugin {\n  static get name () {\n    return 'grpc'\n  }\n\n  constructor (...args) {\n    super(...args)\n\n    this.addSub('apm:grpc:client:request:start', ({ metadata, path, type }) => {\n      const metadataFilter = this.config.metadataFilter\n      const store = storage.getStore()\n      const childOf = store && store.span\n      const span = this.tracer.startSpan('grpc.request', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: 'client',\n          'span.type': 'http',\n          'resource.name': path,\n          'service.name': this.config.service || `${this.tracer._service}-grpc-client`,\n          'component': 'grpc'\n        }\n      })\n\n      addMethodTags(span, path, type)\n\n      if (metadata) {\n        addMetadataTags(span, metadata, metadataFilter, 'request')\n        inject(this.tracer, span, metadata)\n      }\n\n      analyticsSampler.sample(span, this.config.measured)\n\n      this.enter(span, store)\n    })\n\n    this.addSub('apm:grpc:client:request:error', error => {\n      const store = storage.getStore()\n\n      if (!store || !store.span) return\n\n      this.addCode(store.span, error.code)\n      this.addError(error)\n    })\n\n    this.addSub('apm:grpc:client:request:finish', ({ code, metadata }) => {\n      const store = storage.getStore()\n\n      if (!store || !store.span) return\n\n      const span = store.span\n      const metadataFilter = this.config.metadataFilter\n\n      this.addCode(span, code)\n\n      if (metadata && metadataFilter) {\n        addMetadataTags(span, metadata, metadataFilter, 'response')\n      }\n\n      store.span.finish()\n    })\n  }\n\n  configure (config) {\n    const metadataFilter = getFilter(config, 'metadata')\n\n    return super.configure({ ...config, metadataFilter })\n  }\n\n  addCode (span, code) {\n    if (code !== undefined) {\n      span.setTag('grpc.status.code', code)\n    }\n  }\n}\n\nfunction inject (tracer, span, metadata) {\n  if (typeof metadata.set !== 'function') return\n\n  const carrier = {}\n\n  tracer.inject(span, TEXT_MAP, carrier)\n\n  for (const key in carrier) {\n    metadata.set(key, carrier[key])\n  }\n}\n\nmodule.exports = GrpcClientPlugin\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}