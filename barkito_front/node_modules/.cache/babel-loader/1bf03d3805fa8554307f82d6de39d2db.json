{"ast":null,"code":"'use strict';\n\nconst {\n  addHook\n} = require('./helpers/instrument');\n\nconst {\n  wrapThen\n} = require('./helpers/promise');\n\nconst shimmer = require('../../datadog-shimmer');\n\nfunction createGetNewLibraryCopyWrap(originalLib) {\n  return function wrapGetNewLibraryCopy(getNewLibraryCopy) {\n    return function getNewLibraryCopyWithTrace() {\n      const libraryCopy = getNewLibraryCopy.apply(this, arguments);\n      shimmer.wrap(libraryCopy.prototype, '_then', wrapThen);\n      shimmer.wrap(libraryCopy, 'getNewLibraryCopy', createGetNewLibraryCopyWrap(originalLib));\n      return libraryCopy;\n    };\n  };\n}\n\naddHook({\n  name: 'bluebird',\n  versions: ['>=2.0.2']\n}, Promise => {\n  shimmer.wrap(Promise.prototype, '_then', wrapThen);\n  return Promise;\n});\naddHook({\n  name: 'bluebird',\n  versions: ['^2.11.0', '^3.4.1']\n}, Promise => {\n  shimmer.wrap(Promise, 'getNewLibraryCopy', createGetNewLibraryCopyWrap(Promise));\n  return Promise;\n});","map":{"version":3,"names":["addHook","require","wrapThen","shimmer","createGetNewLibraryCopyWrap","originalLib","wrapGetNewLibraryCopy","getNewLibraryCopy","getNewLibraryCopyWithTrace","libraryCopy","apply","arguments","wrap","prototype","name","versions","Promise"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/bluebird.js"],"sourcesContent":["'use strict'\n\nconst { addHook } = require('./helpers/instrument')\nconst { wrapThen } = require('./helpers/promise')\nconst shimmer = require('../../datadog-shimmer')\n\nfunction createGetNewLibraryCopyWrap (originalLib) {\n  return function wrapGetNewLibraryCopy (getNewLibraryCopy) {\n    return function getNewLibraryCopyWithTrace () {\n      const libraryCopy = getNewLibraryCopy.apply(this, arguments)\n      shimmer.wrap(libraryCopy.prototype, '_then', wrapThen)\n      shimmer.wrap(libraryCopy, 'getNewLibraryCopy', createGetNewLibraryCopyWrap(originalLib))\n      return libraryCopy\n    }\n  }\n}\n\naddHook({ name: 'bluebird', versions: ['>=2.0.2'] }, Promise => {\n  shimmer.wrap(Promise.prototype, '_then', wrapThen)\n  return Promise\n})\n\naddHook({ name: 'bluebird', versions: ['^2.11.0', '^3.4.1'] }, Promise => {\n  shimmer.wrap(Promise, 'getNewLibraryCopy', createGetNewLibraryCopyWrap(Promise))\n  return Promise\n})\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAcC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAM;EAAEC;AAAF,IAAeD,OAAO,CAAC,mBAAD,CAA5B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,uBAAD,CAAvB;;AAEA,SAASG,2BAAT,CAAsCC,WAAtC,EAAmD;EACjD,OAAO,SAASC,qBAAT,CAAgCC,iBAAhC,EAAmD;IACxD,OAAO,SAASC,0BAAT,GAAuC;MAC5C,MAAMC,WAAW,GAAGF,iBAAiB,CAACG,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B,CAApB;MACAR,OAAO,CAACS,IAAR,CAAaH,WAAW,CAACI,SAAzB,EAAoC,OAApC,EAA6CX,QAA7C;MACAC,OAAO,CAACS,IAAR,CAAaH,WAAb,EAA0B,mBAA1B,EAA+CL,2BAA2B,CAACC,WAAD,CAA1E;MACA,OAAOI,WAAP;IACD,CALD;EAMD,CAPD;AAQD;;AAEDT,OAAO,CAAC;EAAEc,IAAI,EAAE,UAAR;EAAoBC,QAAQ,EAAE,CAAC,SAAD;AAA9B,CAAD,EAA8CC,OAAO,IAAI;EAC9Db,OAAO,CAACS,IAAR,CAAaI,OAAO,CAACH,SAArB,EAAgC,OAAhC,EAAyCX,QAAzC;EACA,OAAOc,OAAP;AACD,CAHM,CAAP;AAKAhB,OAAO,CAAC;EAAEc,IAAI,EAAE,UAAR;EAAoBC,QAAQ,EAAE,CAAC,SAAD,EAAY,QAAZ;AAA9B,CAAD,EAAwDC,OAAO,IAAI;EACxEb,OAAO,CAACS,IAAR,CAAaI,OAAb,EAAsB,mBAAtB,EAA2CZ,2BAA2B,CAACY,OAAD,CAAtE;EACA,OAAOA,OAAP;AACD,CAHM,CAAP"},"metadata":{},"sourceType":"script"}