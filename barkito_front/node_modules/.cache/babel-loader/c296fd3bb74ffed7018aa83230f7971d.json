{"ast":null,"code":"\"use strict\";\n/*\n * Unless explicitly stated otherwise all files in this repository are licensed\n * under the Apache 2.0 license (see LICENSE).\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2020 Datadog, Inc.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinearlyInterpolatedMapping = void 0;\n\nvar KeyMapping_1 = require(\"./KeyMapping\");\n\nvar math_1 = require(\"../math\");\n/**\n * A fast KeyMapping that approximates the memory-optimal one\n * (LogarithmicMapping) by extracting the floor value of the logarithm to the\n * base 2 from the binary representations of floating-point values and\n * linearly interpolating the logarithm in-between.\n */\n\n\nvar LinearlyInterpolatedMapping =\n/** @class */\nfunction (_super) {\n  __extends(LinearlyInterpolatedMapping, _super);\n\n  function LinearlyInterpolatedMapping(relativeAccuracy, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    return _super.call(this, relativeAccuracy, offset) || this;\n  }\n  /**\n   * Approximates log2 by s + f\n   * where v = (s+1) * 2 ** f  for s in [0, 1)\n   *\n   * frexp(v) returns m and e s.t.\n   * v = m * 2 ** e ; (m in [0.5, 1) or 0.0)\n   * so we adjust m and e accordingly\n   */\n\n\n  LinearlyInterpolatedMapping.prototype._log2Approx = function (value) {\n    var _a = (0, math_1.frexp)(value),\n        mantissa = _a[0],\n        exponent = _a[1];\n\n    var significand = 2 * mantissa - 1;\n    return significand + (exponent - 1);\n  };\n  /** Inverse of _log2Approx */\n\n\n  LinearlyInterpolatedMapping.prototype._exp2Approx = function (value) {\n    var exponent = Math.floor(value) + 1;\n    var mantissa = (value - exponent + 2) / 2;\n    return (0, math_1.ldexp)(mantissa, exponent);\n  };\n\n  LinearlyInterpolatedMapping.prototype._logGamma = function (value) {\n    return Math.log2(value) * this._multiplier;\n  };\n\n  LinearlyInterpolatedMapping.prototype._powGamma = function (value) {\n    return Math.pow(2, value / this._multiplier);\n  };\n\n  LinearlyInterpolatedMapping.prototype._protoInterpolation = function () {\n    var Interpolation = require('../proto/compiled').IndexMapping.Interpolation;\n\n    return Interpolation.LINEAR;\n  };\n\n  return LinearlyInterpolatedMapping;\n}(KeyMapping_1.KeyMapping);\n\nexports.LinearlyInterpolatedMapping = LinearlyInterpolatedMapping;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","LinearlyInterpolatedMapping","KeyMapping_1","require","math_1","_super","relativeAccuracy","offset","_log2Approx","_a","frexp","mantissa","exponent","significand","_exp2Approx","Math","floor","ldexp","_logGamma","log2","_multiplier","_powGamma","pow","_protoInterpolation","Interpolation","IndexMapping","LINEAR","KeyMapping"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/@datadog/sketches-js/dist/ddsketch/mapping/LinearlyInterpolatedMapping.js"],"sourcesContent":["\"use strict\";\n/*\n * Unless explicitly stated otherwise all files in this repository are licensed\n * under the Apache 2.0 license (see LICENSE).\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2020 Datadog, Inc.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinearlyInterpolatedMapping = void 0;\nvar KeyMapping_1 = require(\"./KeyMapping\");\nvar math_1 = require(\"../math\");\n/**\n * A fast KeyMapping that approximates the memory-optimal one\n * (LogarithmicMapping) by extracting the floor value of the logarithm to the\n * base 2 from the binary representations of floating-point values and\n * linearly interpolating the logarithm in-between.\n */\nvar LinearlyInterpolatedMapping = /** @class */ (function (_super) {\n    __extends(LinearlyInterpolatedMapping, _super);\n    function LinearlyInterpolatedMapping(relativeAccuracy, offset) {\n        if (offset === void 0) { offset = 0; }\n        return _super.call(this, relativeAccuracy, offset) || this;\n    }\n    /**\n     * Approximates log2 by s + f\n     * where v = (s+1) * 2 ** f  for s in [0, 1)\n     *\n     * frexp(v) returns m and e s.t.\n     * v = m * 2 ** e ; (m in [0.5, 1) or 0.0)\n     * so we adjust m and e accordingly\n     */\n    LinearlyInterpolatedMapping.prototype._log2Approx = function (value) {\n        var _a = (0, math_1.frexp)(value), mantissa = _a[0], exponent = _a[1];\n        var significand = 2 * mantissa - 1;\n        return significand + (exponent - 1);\n    };\n    /** Inverse of _log2Approx */\n    LinearlyInterpolatedMapping.prototype._exp2Approx = function (value) {\n        var exponent = Math.floor(value) + 1;\n        var mantissa = (value - exponent + 2) / 2;\n        return (0, math_1.ldexp)(mantissa, exponent);\n    };\n    LinearlyInterpolatedMapping.prototype._logGamma = function (value) {\n        return Math.log2(value) * this._multiplier;\n    };\n    LinearlyInterpolatedMapping.prototype._powGamma = function (value) {\n        return Math.pow(2, value / this._multiplier);\n    };\n    LinearlyInterpolatedMapping.prototype._protoInterpolation = function () {\n        var Interpolation = require('../proto/compiled').IndexMapping.Interpolation;\n        return Interpolation.LINEAR;\n    };\n    return LinearlyInterpolatedMapping;\n}(KeyMapping_1.KeyMapping));\nexports.LinearlyInterpolatedMapping = LinearlyInterpolatedMapping;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}