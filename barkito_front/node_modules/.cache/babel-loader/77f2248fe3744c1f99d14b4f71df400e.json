{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst shimmer = require('../../datadog-shimmer');\n\naddHook({\n  name: 'mysql2',\n  file: 'lib/connection.js',\n  versions: ['>=1']\n}, Connection => {\n  const startCh = channel('apm:mysql2:query:start');\n  const finishCh = channel('apm:mysql2:query:finish');\n  const errorCh = channel('apm:mysql2:query:error');\n  shimmer.wrap(Connection.prototype, 'addCommand', addCommand => function (cmd) {\n    if (!startCh.hasSubscribers) return addCommand.apply(this, arguments);\n    const asyncResource = new AsyncResource('bound-anonymous-fn');\n    const name = cmd && cmd.constructor && cmd.constructor.name;\n    const isCommand = typeof cmd.execute === 'function';\n    const isQuery = isCommand && (name === 'Execute' || name === 'Query'); // TODO: consider supporting all commands and not just queries\n\n    cmd.execute = isQuery ? wrapExecute(cmd, cmd.execute, asyncResource, this.config) : bindExecute(cmd, cmd.execute, asyncResource);\n    return asyncResource.bind(addCommand, this).apply(this, arguments);\n  });\n  return Connection;\n\n  function bindExecute(cmd, execute, asyncResource) {\n    return asyncResource.bind(function executeWithTrace(packet, connection) {\n      if (this.onResult) {\n        this.onResult = asyncResource.bind(this.onResult);\n      }\n\n      return execute.apply(this, arguments);\n    }, cmd);\n  }\n\n  function wrapExecute(cmd, execute, asyncResource, config) {\n    const callbackResource = new AsyncResource('bound-anonymous-fn');\n    return asyncResource.bind(function executeWithTrace(packet, connection) {\n      const sql = cmd.statement ? cmd.statement.query : cmd.sql;\n      startCh.publish({\n        sql,\n        conf: config\n      });\n\n      if (this.onResult) {\n        const onResult = callbackResource.bind(this.onResult);\n        this.onResult = asyncResource.bind(function (error) {\n          if (error) {\n            errorCh.publish(error);\n          }\n\n          finishCh.publish(undefined);\n          onResult.apply(this, arguments);\n        }, 'bound-anonymous-fn', this);\n      } else {\n        this.on('error', asyncResource.bind(error => errorCh.publish(error)));\n        this.on('end', asyncResource.bind(() => finishCh.publish(undefined)));\n      }\n\n      this.execute = execute;\n\n      try {\n        return execute.apply(this, arguments);\n      } catch (err) {\n        errorCh.publish(err);\n      }\n    }, cmd);\n  }\n});","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","name","file","versions","Connection","startCh","finishCh","errorCh","wrap","prototype","addCommand","cmd","hasSubscribers","apply","arguments","asyncResource","constructor","isCommand","execute","isQuery","wrapExecute","config","bindExecute","bind","executeWithTrace","packet","connection","onResult","callbackResource","sql","statement","query","publish","conf","error","undefined","on","err"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/mysql2.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst shimmer = require('../../datadog-shimmer')\n\naddHook({ name: 'mysql2', file: 'lib/connection.js', versions: ['>=1'] }, Connection => {\n  const startCh = channel('apm:mysql2:query:start')\n  const finishCh = channel('apm:mysql2:query:finish')\n  const errorCh = channel('apm:mysql2:query:error')\n\n  shimmer.wrap(Connection.prototype, 'addCommand', addCommand => function (cmd) {\n    if (!startCh.hasSubscribers) return addCommand.apply(this, arguments)\n\n    const asyncResource = new AsyncResource('bound-anonymous-fn')\n    const name = cmd && cmd.constructor && cmd.constructor.name\n    const isCommand = typeof cmd.execute === 'function'\n    const isQuery = isCommand && (name === 'Execute' || name === 'Query')\n\n    // TODO: consider supporting all commands and not just queries\n    cmd.execute = isQuery\n      ? wrapExecute(cmd, cmd.execute, asyncResource, this.config)\n      : bindExecute(cmd, cmd.execute, asyncResource)\n\n    return asyncResource.bind(addCommand, this).apply(this, arguments)\n  })\n\n  return Connection\n\n  function bindExecute (cmd, execute, asyncResource) {\n    return asyncResource.bind(function executeWithTrace (packet, connection) {\n      if (this.onResult) {\n        this.onResult = asyncResource.bind(this.onResult)\n      }\n\n      return execute.apply(this, arguments)\n    }, cmd)\n  }\n\n  function wrapExecute (cmd, execute, asyncResource, config) {\n    const callbackResource = new AsyncResource('bound-anonymous-fn')\n\n    return asyncResource.bind(function executeWithTrace (packet, connection) {\n      const sql = cmd.statement ? cmd.statement.query : cmd.sql\n\n      startCh.publish({ sql, conf: config })\n\n      if (this.onResult) {\n        const onResult = callbackResource.bind(this.onResult)\n\n        this.onResult = asyncResource.bind(function (error) {\n          if (error) {\n            errorCh.publish(error)\n          }\n          finishCh.publish(undefined)\n          onResult.apply(this, arguments)\n        }, 'bound-anonymous-fn', this)\n      } else {\n        this.on('error', asyncResource.bind(error => errorCh.publish(error)))\n        this.on('end', asyncResource.bind(() => finishCh.publish(undefined)))\n      }\n\n      this.execute = execute\n\n      try {\n        return execute.apply(this, arguments)\n      } catch (err) {\n        errorCh.publish(err)\n      }\n    }, cmd)\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}