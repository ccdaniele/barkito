{"ast":null,"code":"'use strict';\n\nconst log = require('../../log');\n\nconst urlFilter = {\n  getFilter(config) {\n    if (typeof config.filter === 'function') {\n      return config.filter;\n    } else if (config.hasOwnProperty('filter')) {\n      log.error('Expected `filter` to be a function. Overriding filter property to default.');\n    }\n\n    const allowlist = config.allowlist || config.whitelist || /.*/;\n    const blocklist = config.blocklist || config.blacklist || [];\n    return uri => {\n      const allowed = applyFilter(allowlist, uri);\n      const blocked = applyFilter(blocklist, uri);\n      return allowed && !blocked;\n    };\n\n    function applyFilter(filter, uri) {\n      if (typeof filter === 'function') {\n        return filter(uri);\n      } else if (filter instanceof RegExp) {\n        return filter.test(uri);\n      } else if (filter instanceof Array) {\n        return filter.some(filter => applyFilter(filter, uri));\n      }\n\n      return filter === uri;\n    }\n  }\n\n};\nmodule.exports = urlFilter;","map":{"version":3,"names":["log","require","urlFilter","getFilter","config","filter","hasOwnProperty","error","allowlist","whitelist","blocklist","blacklist","uri","allowed","applyFilter","blocked","RegExp","test","Array","some","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/plugins/util/urlfilter.js"],"sourcesContent":["'use strict'\n\nconst log = require('../../log')\n\nconst urlFilter = {\n  getFilter (config) {\n    if (typeof config.filter === 'function') {\n      return config.filter\n    } else if (config.hasOwnProperty('filter')) {\n      log.error('Expected `filter` to be a function. Overriding filter property to default.')\n    }\n\n    const allowlist = config.allowlist || config.whitelist || /.*/\n    const blocklist = config.blocklist || config.blacklist || []\n\n    return uri => {\n      const allowed = applyFilter(allowlist, uri)\n      const blocked = applyFilter(blocklist, uri)\n      return allowed && !blocked\n    }\n\n    function applyFilter (filter, uri) {\n      if (typeof filter === 'function') {\n        return filter(uri)\n      } else if (filter instanceof RegExp) {\n        return filter.test(uri)\n      } else if (filter instanceof Array) {\n        return filter.some(filter => applyFilter(filter, uri))\n      }\n\n      return filter === uri\n    }\n  }\n}\n\nmodule.exports = urlFilter\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AAEA,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAAEC,MAAF,EAAU;IACjB,IAAI,OAAOA,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;MACvC,OAAOD,MAAM,CAACC,MAAd;IACD,CAFD,MAEO,IAAID,MAAM,CAACE,cAAP,CAAsB,QAAtB,CAAJ,EAAqC;MAC1CN,GAAG,CAACO,KAAJ,CAAU,4EAAV;IACD;;IAED,MAAMC,SAAS,GAAGJ,MAAM,CAACI,SAAP,IAAoBJ,MAAM,CAACK,SAA3B,IAAwC,IAA1D;IACA,MAAMC,SAAS,GAAGN,MAAM,CAACM,SAAP,IAAoBN,MAAM,CAACO,SAA3B,IAAwC,EAA1D;IAEA,OAAOC,GAAG,IAAI;MACZ,MAAMC,OAAO,GAAGC,WAAW,CAACN,SAAD,EAAYI,GAAZ,CAA3B;MACA,MAAMG,OAAO,GAAGD,WAAW,CAACJ,SAAD,EAAYE,GAAZ,CAA3B;MACA,OAAOC,OAAO,IAAI,CAACE,OAAnB;IACD,CAJD;;IAMA,SAASD,WAAT,CAAsBT,MAAtB,EAA8BO,GAA9B,EAAmC;MACjC,IAAI,OAAOP,MAAP,KAAkB,UAAtB,EAAkC;QAChC,OAAOA,MAAM,CAACO,GAAD,CAAb;MACD,CAFD,MAEO,IAAIP,MAAM,YAAYW,MAAtB,EAA8B;QACnC,OAAOX,MAAM,CAACY,IAAP,CAAYL,GAAZ,CAAP;MACD,CAFM,MAEA,IAAIP,MAAM,YAAYa,KAAtB,EAA6B;QAClC,OAAOb,MAAM,CAACc,IAAP,CAAYd,MAAM,IAAIS,WAAW,CAACT,MAAD,EAASO,GAAT,CAAjC,CAAP;MACD;;MAED,OAAOP,MAAM,KAAKO,GAAlB;IACD;EACF;;AA5Be,CAAlB;AA+BAQ,MAAM,CAACC,OAAP,GAAiBnB,SAAjB"},"metadata":{},"sourceType":"script"}