{"ast":null,"code":"'use strict';\n\nconst pick = require('lodash.pick');\n\nconst log = require('../../dd-trace/src/log');\n\nmodule.exports = {\n  addMethodTags(span, path, kind) {\n    if (typeof path !== 'string') return;\n    span.addTags({\n      'grpc.method.path': path,\n      'grpc.method.kind': kind\n    });\n    const methodParts = path.split('/');\n\n    if (methodParts.length > 2) {\n      const serviceParts = methodParts[1].split('.');\n      const name = methodParts[2];\n      const service = serviceParts.pop();\n      const pkg = serviceParts.join('.');\n      span.addTags({\n        'grpc.method.name': name,\n        'grpc.method.service': service,\n        'grpc.method.package': pkg\n      });\n    } else {\n      span.addTags({\n        'grpc.method.name': methodParts[methodParts.length - 1]\n      });\n    }\n  },\n\n  addMetadataTags(span, metadata, filter, type) {\n    if (!metadata || typeof metadata.getMap !== 'function') return;\n    const values = filter(metadata.getMap());\n\n    for (const key in values) {\n      span.setTag(`grpc.${type}.metadata.${key}`, values[key]);\n    }\n  },\n\n  // TODO: extract this to shared utils and add unit tests\n  getFilter(config, filter) {\n    if (typeof config[filter] === 'function') {\n      return config[filter];\n    }\n\n    if (config[filter] instanceof Array) {\n      return element => pick(element, config[filter]);\n    }\n\n    if (config.hasOwnProperty(filter)) {\n      log.error(`Expected '${filter}' to be an array or function.`);\n    }\n\n    return () => ({});\n  }\n\n};","map":{"version":3,"names":["pick","require","log","module","exports","addMethodTags","span","path","kind","addTags","methodParts","split","length","serviceParts","name","service","pop","pkg","join","addMetadataTags","metadata","filter","type","getMap","values","key","setTag","getFilter","config","Array","element","hasOwnProperty","error"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-grpc/src/util.js"],"sourcesContent":["'use strict'\n\nconst pick = require('lodash.pick')\nconst log = require('../../dd-trace/src/log')\n\nmodule.exports = {\n  addMethodTags (span, path, kind) {\n    if (typeof path !== 'string') return\n\n    span.addTags({\n      'grpc.method.path': path,\n      'grpc.method.kind': kind\n    })\n\n    const methodParts = path.split('/')\n\n    if (methodParts.length > 2) {\n      const serviceParts = methodParts[1].split('.')\n      const name = methodParts[2]\n      const service = serviceParts.pop()\n      const pkg = serviceParts.join('.')\n\n      span.addTags({\n        'grpc.method.name': name,\n        'grpc.method.service': service,\n        'grpc.method.package': pkg\n      })\n    } else {\n      span.addTags({\n        'grpc.method.name': methodParts[methodParts.length - 1]\n      })\n    }\n  },\n\n  addMetadataTags (span, metadata, filter, type) {\n    if (!metadata || typeof metadata.getMap !== 'function') return\n\n    const values = filter(metadata.getMap())\n\n    for (const key in values) {\n      span.setTag(`grpc.${type}.metadata.${key}`, values[key])\n    }\n  },\n\n  // TODO: extract this to shared utils and add unit tests\n  getFilter (config, filter) {\n    if (typeof config[filter] === 'function') {\n      return config[filter]\n    }\n\n    if (config[filter] instanceof Array) {\n      return element => pick(element, config[filter])\n    }\n\n    if (config.hasOwnProperty(filter)) {\n      log.error(`Expected '${filter}' to be an array or function.`)\n    }\n\n    return () => ({})\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,wBAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;EACfC,aAAa,CAAEC,IAAF,EAAQC,IAAR,EAAcC,IAAd,EAAoB;IAC/B,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;IAE9BD,IAAI,CAACG,OAAL,CAAa;MACX,oBAAoBF,IADT;MAEX,oBAAoBC;IAFT,CAAb;IAKA,MAAME,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAApB;;IAEA,IAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B;MAC1B,MAAMC,YAAY,GAAGH,WAAW,CAAC,CAAD,CAAX,CAAeC,KAAf,CAAqB,GAArB,CAArB;MACA,MAAMG,IAAI,GAAGJ,WAAW,CAAC,CAAD,CAAxB;MACA,MAAMK,OAAO,GAAGF,YAAY,CAACG,GAAb,EAAhB;MACA,MAAMC,GAAG,GAAGJ,YAAY,CAACK,IAAb,CAAkB,GAAlB,CAAZ;MAEAZ,IAAI,CAACG,OAAL,CAAa;QACX,oBAAoBK,IADT;QAEX,uBAAuBC,OAFZ;QAGX,uBAAuBE;MAHZ,CAAb;IAKD,CAXD,MAWO;MACLX,IAAI,CAACG,OAAL,CAAa;QACX,oBAAoBC,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAqB,CAAtB;MADpB,CAAb;IAGD;EACF,CA3Bc;;EA6BfO,eAAe,CAAEb,IAAF,EAAQc,QAAR,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;IAC7C,IAAI,CAACF,QAAD,IAAa,OAAOA,QAAQ,CAACG,MAAhB,KAA2B,UAA5C,EAAwD;IAExD,MAAMC,MAAM,GAAGH,MAAM,CAACD,QAAQ,CAACG,MAAT,EAAD,CAArB;;IAEA,KAAK,MAAME,GAAX,IAAkBD,MAAlB,EAA0B;MACxBlB,IAAI,CAACoB,MAAL,CAAa,QAAOJ,IAAK,aAAYG,GAAI,EAAzC,EAA4CD,MAAM,CAACC,GAAD,CAAlD;IACD;EACF,CArCc;;EAuCf;EACAE,SAAS,CAAEC,MAAF,EAAUP,MAAV,EAAkB;IACzB,IAAI,OAAOO,MAAM,CAACP,MAAD,CAAb,KAA0B,UAA9B,EAA0C;MACxC,OAAOO,MAAM,CAACP,MAAD,CAAb;IACD;;IAED,IAAIO,MAAM,CAACP,MAAD,CAAN,YAA0BQ,KAA9B,EAAqC;MACnC,OAAOC,OAAO,IAAI9B,IAAI,CAAC8B,OAAD,EAAUF,MAAM,CAACP,MAAD,CAAhB,CAAtB;IACD;;IAED,IAAIO,MAAM,CAACG,cAAP,CAAsBV,MAAtB,CAAJ,EAAmC;MACjCnB,GAAG,CAAC8B,KAAJ,CAAW,aAAYX,MAAO,+BAA9B;IACD;;IAED,OAAO,OAAO,EAAP,CAAP;EACD;;AAtDc,CAAjB"},"metadata":{},"sourceType":"script"}