{"ast":null,"code":"'use strict';\n\nvar platform = require('os').platform();\n\nvar spawnSync = require('child_process').spawnSync;\n\nvar readdirSync = require('fs').readdirSync;\n\nvar GLIBC = 'glibc';\nvar MUSL = 'musl';\nvar spawnOptions = {\n  encoding: 'utf8',\n  env: process.env\n};\n\nif (!spawnSync) {\n  spawnSync = function () {\n    return {\n      status: 126,\n      stdout: '',\n      stderr: ''\n    };\n  };\n}\n\nfunction contains(needle) {\n  return function (haystack) {\n    return haystack.indexOf(needle) !== -1;\n  };\n}\n\nfunction versionFromMuslLdd(out) {\n  return out.split(/[\\r\\n]+/)[1].trim().split(/\\s/)[1];\n}\n\nfunction safeReaddirSync(path) {\n  try {\n    return readdirSync(path);\n  } catch (e) {}\n\n  return [];\n}\n\nvar family = '';\nvar version = '';\nvar method = '';\n\nif (platform === 'linux') {\n  // Try getconf\n  var glibc = spawnSync('getconf', ['GNU_LIBC_VERSION'], spawnOptions);\n\n  if (glibc.status === 0) {\n    family = GLIBC;\n    version = glibc.stdout.trim().split(' ')[1];\n    method = 'getconf';\n  } else {\n    // Try ldd\n    var ldd = spawnSync('ldd', ['--version'], spawnOptions);\n\n    if (ldd.status === 0 && ldd.stdout.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stdout);\n      method = 'ldd';\n    } else if (ldd.status === 1 && ldd.stderr.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stderr);\n      method = 'ldd';\n    } else {\n      // Try filesystem (family only)\n      var lib = safeReaddirSync('/lib');\n\n      if (lib.some(contains('-linux-gnu'))) {\n        family = GLIBC;\n        method = 'filesystem';\n      } else if (lib.some(contains('libc.musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else if (lib.some(contains('ld-musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else {\n        var usrSbin = safeReaddirSync('/usr/sbin');\n\n        if (usrSbin.some(contains('glibc'))) {\n          family = GLIBC;\n          method = 'filesystem';\n        }\n      }\n    }\n  }\n}\n\nvar isNonGlibcLinux = family !== '' && family !== GLIBC;\nmodule.exports = {\n  GLIBC: GLIBC,\n  MUSL: MUSL,\n  family: family,\n  version: version,\n  method: method,\n  isNonGlibcLinux: isNonGlibcLinux\n};","map":{"version":3,"names":["platform","require","spawnSync","readdirSync","GLIBC","MUSL","spawnOptions","encoding","env","process","status","stdout","stderr","contains","needle","haystack","indexOf","versionFromMuslLdd","out","split","trim","safeReaddirSync","path","e","family","version","method","glibc","ldd","lib","some","usrSbin","isNonGlibcLinux","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/detect-libc/lib/detect-libc.js"],"sourcesContent":["'use strict';\n\nvar platform = require('os').platform();\nvar spawnSync = require('child_process').spawnSync;\nvar readdirSync = require('fs').readdirSync;\n\nvar GLIBC = 'glibc';\nvar MUSL = 'musl';\n\nvar spawnOptions = {\n  encoding: 'utf8',\n  env: process.env\n};\n\nif (!spawnSync) {\n  spawnSync = function () {\n    return { status: 126, stdout: '', stderr: '' };\n  };\n}\n\nfunction contains (needle) {\n  return function (haystack) {\n    return haystack.indexOf(needle) !== -1;\n  };\n}\n\nfunction versionFromMuslLdd (out) {\n  return out.split(/[\\r\\n]+/)[1].trim().split(/\\s/)[1];\n}\n\nfunction safeReaddirSync (path) {\n  try {\n    return readdirSync(path);\n  } catch (e) {}\n  return [];\n}\n\nvar family = '';\nvar version = '';\nvar method = '';\n\nif (platform === 'linux') {\n  // Try getconf\n  var glibc = spawnSync('getconf', ['GNU_LIBC_VERSION'], spawnOptions);\n  if (glibc.status === 0) {\n    family = GLIBC;\n    version = glibc.stdout.trim().split(' ')[1];\n    method = 'getconf';\n  } else {\n    // Try ldd\n    var ldd = spawnSync('ldd', ['--version'], spawnOptions);\n    if (ldd.status === 0 && ldd.stdout.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stdout);\n      method = 'ldd';\n    } else if (ldd.status === 1 && ldd.stderr.indexOf(MUSL) !== -1) {\n      family = MUSL;\n      version = versionFromMuslLdd(ldd.stderr);\n      method = 'ldd';\n    } else {\n      // Try filesystem (family only)\n      var lib = safeReaddirSync('/lib');\n      if (lib.some(contains('-linux-gnu'))) {\n        family = GLIBC;\n        method = 'filesystem';\n      } else if (lib.some(contains('libc.musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else if (lib.some(contains('ld-musl-'))) {\n        family = MUSL;\n        method = 'filesystem';\n      } else {\n        var usrSbin = safeReaddirSync('/usr/sbin');\n        if (usrSbin.some(contains('glibc'))) {\n          family = GLIBC;\n          method = 'filesystem';\n        }\n      }\n    }\n  }\n}\n\nvar isNonGlibcLinux = (family !== '' && family !== GLIBC);\n\nmodule.exports = {\n  GLIBC: GLIBC,\n  MUSL: MUSL,\n  family: family,\n  version: version,\n  method: method,\n  isNonGlibcLinux: isNonGlibcLinux\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}