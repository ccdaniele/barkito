{"ast":null,"code":"const request = require('../../exporters/common/request');\n\nfunction getSkippableSuites(_ref, done) {\n  let {\n    site,\n    env,\n    service,\n    repositoryUrl,\n    sha,\n    osVersion,\n    osPlatform,\n    osArchitecture,\n    runtimeName,\n    runtimeVersion\n  } = _ref;\n  const url = new URL(`https://api.${site}`);\n  const apiKey = process.env.DATADOG_API_KEY || process.env.DD_API_KEY;\n  const appKey = process.env.DATADOG_APP_KEY || process.env.DD_APP_KEY || process.env.DATADOG_APPLICATION_KEY || process.env.DD_APPLICATION_KEY;\n\n  if (!apiKey || !appKey) {\n    return done(new Error('API key or Application key are undefined.'));\n  }\n\n  const options = {\n    path: '/api/v2/ci/tests/skippable',\n    method: 'POST',\n    headers: {\n      'dd-api-key': apiKey,\n      'dd-application-key': appKey,\n      'Content-Type': 'application/json'\n    },\n    timeout: 15000,\n    protocol: url.protocol,\n    hostname: url.hostname,\n    port: url.port\n  };\n  const data = JSON.stringify({\n    data: {\n      type: 'test_params',\n      attributes: {\n        test_level: 'suite',\n        configurations: {\n          'os.platform': osPlatform,\n          'os.version': osVersion,\n          'os.architecture': osArchitecture,\n          'runtime.name': runtimeName,\n          'runtime.version': runtimeVersion\n        },\n        service,\n        env,\n        repository_url: repositoryUrl,\n        sha\n      }\n    }\n  });\n  request(data, options, (err, res) => {\n    if (err) {\n      done(err);\n    } else {\n      let skippableSuites = [];\n\n      try {\n        skippableSuites = JSON.parse(res).data.filter(_ref2 => {\n          let {\n            type\n          } = _ref2;\n          return type === 'suite';\n        }).map(_ref3 => {\n          let {\n            attributes: {\n              suite\n            }\n          } = _ref3;\n          return suite;\n        });\n        done(null, skippableSuites);\n      } catch (e) {\n        done(e);\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  getSkippableSuites\n};","map":{"version":3,"names":["request","require","getSkippableSuites","done","site","env","service","repositoryUrl","sha","osVersion","osPlatform","osArchitecture","runtimeName","runtimeVersion","url","URL","apiKey","process","DATADOG_API_KEY","DD_API_KEY","appKey","DATADOG_APP_KEY","DD_APP_KEY","DATADOG_APPLICATION_KEY","DD_APPLICATION_KEY","Error","options","path","method","headers","timeout","protocol","hostname","port","data","JSON","stringify","type","attributes","test_level","configurations","repository_url","err","res","skippableSuites","parse","filter","map","suite","e","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/ci-visibility/intelligent-test-runner/get-skippable-suites.js"],"sourcesContent":["const request = require('../../exporters/common/request')\n\nfunction getSkippableSuites ({\n  site,\n  env,\n  service,\n  repositoryUrl,\n  sha,\n  osVersion,\n  osPlatform,\n  osArchitecture,\n  runtimeName,\n  runtimeVersion\n}, done) {\n  const url = new URL(`https://api.${site}`)\n\n  const apiKey = process.env.DATADOG_API_KEY || process.env.DD_API_KEY\n  const appKey = process.env.DATADOG_APP_KEY ||\n    process.env.DD_APP_KEY ||\n    process.env.DATADOG_APPLICATION_KEY ||\n    process.env.DD_APPLICATION_KEY\n\n  if (!apiKey || !appKey) {\n    return done(new Error('API key or Application key are undefined.'))\n  }\n\n  const options = {\n    path: '/api/v2/ci/tests/skippable',\n    method: 'POST',\n    headers: {\n      'dd-api-key': apiKey,\n      'dd-application-key': appKey,\n      'Content-Type': 'application/json'\n    },\n    timeout: 15000,\n    protocol: url.protocol,\n    hostname: url.hostname,\n    port: url.port\n  }\n\n  const data = JSON.stringify({\n    data: {\n      type: 'test_params',\n      attributes: {\n        test_level: 'suite',\n        configurations: {\n          'os.platform': osPlatform,\n          'os.version': osVersion,\n          'os.architecture': osArchitecture,\n          'runtime.name': runtimeName,\n          'runtime.version': runtimeVersion\n        },\n        service,\n        env,\n        repository_url: repositoryUrl,\n        sha\n      }\n    }\n  })\n\n  request(data, options, (err, res) => {\n    if (err) {\n      done(err)\n    } else {\n      let skippableSuites = []\n      try {\n        skippableSuites = JSON.parse(res)\n          .data\n          .filter(({ type }) => type === 'suite')\n          .map(({ attributes: { suite } }) => suite)\n        done(null, skippableSuites)\n      } catch (e) {\n        done(e)\n      }\n    }\n  })\n}\n\nmodule.exports = { getSkippableSuites }\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,gCAAD,CAAvB;;AAEA,SAASC,kBAAT,OAWGC,IAXH,EAWS;EAAA,IAXoB;IAC3BC,IAD2B;IAE3BC,GAF2B;IAG3BC,OAH2B;IAI3BC,aAJ2B;IAK3BC,GAL2B;IAM3BC,SAN2B;IAO3BC,UAP2B;IAQ3BC,cAR2B;IAS3BC,WAT2B;IAU3BC;EAV2B,CAWpB;EACP,MAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAS,eAAcX,IAAK,EAA5B,CAAZ;EAEA,MAAMY,MAAM,GAAGC,OAAO,CAACZ,GAAR,CAAYa,eAAZ,IAA+BD,OAAO,CAACZ,GAAR,CAAYc,UAA1D;EACA,MAAMC,MAAM,GAAGH,OAAO,CAACZ,GAAR,CAAYgB,eAAZ,IACbJ,OAAO,CAACZ,GAAR,CAAYiB,UADC,IAEbL,OAAO,CAACZ,GAAR,CAAYkB,uBAFC,IAGbN,OAAO,CAACZ,GAAR,CAAYmB,kBAHd;;EAKA,IAAI,CAACR,MAAD,IAAW,CAACI,MAAhB,EAAwB;IACtB,OAAOjB,IAAI,CAAC,IAAIsB,KAAJ,CAAU,2CAAV,CAAD,CAAX;EACD;;EAED,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAE,4BADQ;IAEdC,MAAM,EAAE,MAFM;IAGdC,OAAO,EAAE;MACP,cAAcb,MADP;MAEP,sBAAsBI,MAFf;MAGP,gBAAgB;IAHT,CAHK;IAQdU,OAAO,EAAE,KARK;IASdC,QAAQ,EAAEjB,GAAG,CAACiB,QATA;IAUdC,QAAQ,EAAElB,GAAG,CAACkB,QAVA;IAWdC,IAAI,EAAEnB,GAAG,CAACmB;EAXI,CAAhB;EAcA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;IAC1BF,IAAI,EAAE;MACJG,IAAI,EAAE,aADF;MAEJC,UAAU,EAAE;QACVC,UAAU,EAAE,OADF;QAEVC,cAAc,EAAE;UACd,eAAe9B,UADD;UAEd,cAAcD,SAFA;UAGd,mBAAmBE,cAHL;UAId,gBAAgBC,WAJF;UAKd,mBAAmBC;QALL,CAFN;QASVP,OATU;QAUVD,GAVU;QAWVoC,cAAc,EAAElC,aAXN;QAYVC;MAZU;IAFR;EADoB,CAAf,CAAb;EAoBAR,OAAO,CAACkC,IAAD,EAAOR,OAAP,EAAgB,CAACgB,GAAD,EAAMC,GAAN,KAAc;IACnC,IAAID,GAAJ,EAAS;MACPvC,IAAI,CAACuC,GAAD,CAAJ;IACD,CAFD,MAEO;MACL,IAAIE,eAAe,GAAG,EAAtB;;MACA,IAAI;QACFA,eAAe,GAAGT,IAAI,CAACU,KAAL,CAAWF,GAAX,EACfT,IADe,CAEfY,MAFe,CAER;UAAA,IAAC;YAAET;UAAF,CAAD;UAAA,OAAcA,IAAI,KAAK,OAAvB;QAAA,CAFQ,EAGfU,GAHe,CAGX;UAAA,IAAC;YAAET,UAAU,EAAE;cAAEU;YAAF;UAAd,CAAD;UAAA,OAA+BA,KAA/B;QAAA,CAHW,CAAlB;QAIA7C,IAAI,CAAC,IAAD,EAAOyC,eAAP,CAAJ;MACD,CAND,CAME,OAAOK,CAAP,EAAU;QACV9C,IAAI,CAAC8C,CAAD,CAAJ;MACD;IACF;EACF,CAfM,CAAP;AAgBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EAAEjD;AAAF,CAAjB"},"metadata":{},"sourceType":"script"}