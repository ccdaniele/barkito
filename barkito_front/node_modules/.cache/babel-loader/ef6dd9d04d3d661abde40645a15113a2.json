{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('../helpers/instrument');\n\nconst shimmer = require('../../../datadog-shimmer');\n\nconst startServerCh = channel('apm:http:server:request:start');\nconst errorServerCh = channel('apm:http:server:request:error');\nconst finishServerCh = channel('apm:http:server:request:finish');\naddHook({\n  name: 'https'\n}, http => {\n  // http.ServerResponse not present on https\n  shimmer.wrap(http.Server.prototype, 'emit', wrapEmit);\n  return http;\n});\naddHook({\n  name: 'http'\n}, http => {\n  shimmer.wrap(http.ServerResponse.prototype, 'emit', wrapResponseEmit);\n  shimmer.wrap(http.Server.prototype, 'emit', wrapEmit);\n  return http;\n});\n\nfunction wrapResponseEmit(emit) {\n  return function (eventName, event) {\n    if (!startServerCh.hasSubscribers) {\n      return emit.apply(this, arguments);\n    }\n\n    if (eventName === 'close') {\n      finishServerCh.publish({\n        req: this.req\n      });\n    }\n\n    return emit.apply(this, arguments);\n  };\n}\n\nfunction wrapEmit(emit) {\n  return function (eventName, req, res) {\n    if (!startServerCh.hasSubscribers) {\n      return emit.apply(this, arguments);\n    }\n\n    if (eventName === 'request') {\n      res.req = req;\n      const asyncResource = new AsyncResource('bound-anonymous-fn');\n      return asyncResource.runInAsyncScope(() => {\n        startServerCh.publish({\n          req,\n          res\n        });\n\n        try {\n          return emit.apply(this, arguments);\n        } catch (err) {\n          errorServerCh.publish(err);\n          throw err;\n        }\n      });\n    }\n\n    return emit.apply(this, arguments);\n  };\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","shimmer","startServerCh","errorServerCh","finishServerCh","name","http","wrap","Server","prototype","wrapEmit","ServerResponse","wrapResponseEmit","emit","eventName","event","hasSubscribers","apply","arguments","publish","req","res","asyncResource","runInAsyncScope","err"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/http/server.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('../helpers/instrument')\nconst shimmer = require('../../../datadog-shimmer')\n\nconst startServerCh = channel('apm:http:server:request:start')\nconst errorServerCh = channel('apm:http:server:request:error')\nconst finishServerCh = channel('apm:http:server:request:finish')\n\naddHook({ name: 'https' }, http => {\n  // http.ServerResponse not present on https\n  shimmer.wrap(http.Server.prototype, 'emit', wrapEmit)\n  return http\n})\n\naddHook({ name: 'http' }, http => {\n  shimmer.wrap(http.ServerResponse.prototype, 'emit', wrapResponseEmit)\n  shimmer.wrap(http.Server.prototype, 'emit', wrapEmit)\n  return http\n})\n\nfunction wrapResponseEmit (emit) {\n  return function (eventName, event) {\n    if (!startServerCh.hasSubscribers) {\n      return emit.apply(this, arguments)\n    }\n\n    if (eventName === 'close') {\n      finishServerCh.publish({ req: this.req })\n    }\n\n    return emit.apply(this, arguments)\n  }\n}\nfunction wrapEmit (emit) {\n  return function (eventName, req, res) {\n    if (!startServerCh.hasSubscribers) {\n      return emit.apply(this, arguments)\n    }\n\n    if (eventName === 'request') {\n      res.req = req\n\n      const asyncResource = new AsyncResource('bound-anonymous-fn')\n      return asyncResource.runInAsyncScope(() => {\n        startServerCh.publish({ req, res })\n\n        try {\n          return emit.apply(this, arguments)\n        } catch (err) {\n          errorServerCh.publish(err)\n\n          throw err\n        }\n      })\n    }\n    return emit.apply(this, arguments)\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EACJA,OADI;EAEJC,OAFI;EAGJC;AAHI,IAIFC,OAAO,CAAC,uBAAD,CAJX;;AAKA,MAAMC,OAAO,GAAGD,OAAO,CAAC,0BAAD,CAAvB;;AAEA,MAAME,aAAa,GAAGL,OAAO,CAAC,+BAAD,CAA7B;AACA,MAAMM,aAAa,GAAGN,OAAO,CAAC,+BAAD,CAA7B;AACA,MAAMO,cAAc,GAAGP,OAAO,CAAC,gCAAD,CAA9B;AAEAC,OAAO,CAAC;EAAEO,IAAI,EAAE;AAAR,CAAD,EAAoBC,IAAI,IAAI;EACjC;EACAL,OAAO,CAACM,IAAR,CAAaD,IAAI,CAACE,MAAL,CAAYC,SAAzB,EAAoC,MAApC,EAA4CC,QAA5C;EACA,OAAOJ,IAAP;AACD,CAJM,CAAP;AAMAR,OAAO,CAAC;EAAEO,IAAI,EAAE;AAAR,CAAD,EAAmBC,IAAI,IAAI;EAChCL,OAAO,CAACM,IAAR,CAAaD,IAAI,CAACK,cAAL,CAAoBF,SAAjC,EAA4C,MAA5C,EAAoDG,gBAApD;EACAX,OAAO,CAACM,IAAR,CAAaD,IAAI,CAACE,MAAL,CAAYC,SAAzB,EAAoC,MAApC,EAA4CC,QAA5C;EACA,OAAOJ,IAAP;AACD,CAJM,CAAP;;AAMA,SAASM,gBAAT,CAA2BC,IAA3B,EAAiC;EAC/B,OAAO,UAAUC,SAAV,EAAqBC,KAArB,EAA4B;IACjC,IAAI,CAACb,aAAa,CAACc,cAAnB,EAAmC;MACjC,OAAOH,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;IACD;;IAED,IAAIJ,SAAS,KAAK,OAAlB,EAA2B;MACzBV,cAAc,CAACe,OAAf,CAAuB;QAAEC,GAAG,EAAE,KAAKA;MAAZ,CAAvB;IACD;;IAED,OAAOP,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;EACD,CAVD;AAWD;;AACD,SAASR,QAAT,CAAmBG,IAAnB,EAAyB;EACvB,OAAO,UAAUC,SAAV,EAAqBM,GAArB,EAA0BC,GAA1B,EAA+B;IACpC,IAAI,CAACnB,aAAa,CAACc,cAAnB,EAAmC;MACjC,OAAOH,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;IACD;;IAED,IAAIJ,SAAS,KAAK,SAAlB,EAA6B;MAC3BO,GAAG,CAACD,GAAJ,GAAUA,GAAV;MAEA,MAAME,aAAa,GAAG,IAAIvB,aAAJ,CAAkB,oBAAlB,CAAtB;MACA,OAAOuB,aAAa,CAACC,eAAd,CAA8B,MAAM;QACzCrB,aAAa,CAACiB,OAAd,CAAsB;UAAEC,GAAF;UAAOC;QAAP,CAAtB;;QAEA,IAAI;UACF,OAAOR,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;QACD,CAFD,CAEE,OAAOM,GAAP,EAAY;UACZrB,aAAa,CAACgB,OAAd,CAAsBK,GAAtB;UAEA,MAAMA,GAAN;QACD;MACF,CAVM,CAAP;IAWD;;IACD,OAAOX,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;EACD,CAtBD;AAuBD"},"metadata":{},"sourceType":"script"}