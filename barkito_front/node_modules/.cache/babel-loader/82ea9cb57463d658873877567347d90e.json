{"ast":null,"code":"'use strict';\n\nconst {\n  truncateSpan,\n  normalizeSpan\n} = require('./tags-processors');\n\nconst {\n  AgentEncoder\n} = require('./0.4');\n\nconst {\n  version: ddTraceVersion\n} = require('../../../../package.json');\n\nconst id = require('../../../dd-trace/src/id');\n\nconst ENCODING_VERSION = 1;\nconst ALLOWED_CONTENT_TYPES = ['test_session_end', 'test_suite_end', 'test'];\nconst TEST_SUITE_KEYS_LENGTH = 11;\nconst TEST_SESSION_KEYS_LENGTH = 10;\nconst INTAKE_SOFT_LIMIT = 2 * 1024 * 1024; // 2MB\n\nfunction formatSpan(span) {\n  let encodingVersion = ENCODING_VERSION;\n\n  if (span.type === 'test' && span.meta && span.meta.test_session_id) {\n    encodingVersion = 2;\n  }\n\n  return {\n    type: ALLOWED_CONTENT_TYPES.includes(span.type) ? span.type : 'span',\n    version: encodingVersion,\n    content: normalizeSpan(truncateSpan(span))\n  };\n}\n\nclass AgentlessCiVisibilityEncoder extends AgentEncoder {\n  constructor(writer, _ref) {\n    let {\n      runtimeId,\n      service,\n      env\n    } = _ref;\n    super(writer, INTAKE_SOFT_LIMIT);\n    this.runtimeId = runtimeId;\n    this.service = service;\n    this.env = env; // Used to keep track of the number of encoded events to update the\n    // length of `payload.events` when calling `makePayload`\n\n    this._eventCount = 0;\n    this.reset();\n  }\n\n  _encodeTestSuite(bytes, content) {\n    this._encodeMapPrefix(bytes, TEST_SUITE_KEYS_LENGTH);\n\n    this._encodeString(bytes, 'type');\n\n    this._encodeString(bytes, content.type);\n\n    this._encodeString(bytes, 'test_session_id');\n\n    this._encodeId(bytes, content.trace_id);\n\n    this._encodeString(bytes, 'test_suite_id');\n\n    this._encodeId(bytes, content.span_id);\n\n    this._encodeString(bytes, 'error');\n\n    this._encodeNumber(bytes, content.error);\n\n    this._encodeString(bytes, 'name');\n\n    this._encodeString(bytes, content.name);\n\n    this._encodeString(bytes, 'service');\n\n    this._encodeString(bytes, content.service);\n\n    this._encodeString(bytes, 'resource');\n\n    this._encodeString(bytes, content.resource);\n\n    this._encodeString(bytes, 'start');\n\n    this._encodeNumber(bytes, content.start);\n\n    this._encodeString(bytes, 'duration');\n\n    this._encodeNumber(bytes, content.duration);\n\n    this._encodeString(bytes, 'meta');\n\n    this._encodeMap(bytes, content.meta);\n\n    this._encodeString(bytes, 'metrics');\n\n    this._encodeMap(bytes, content.metrics);\n  }\n\n  _encodeTestSession(bytes, content) {\n    this._encodeMapPrefix(bytes, TEST_SESSION_KEYS_LENGTH);\n\n    this._encodeString(bytes, 'type');\n\n    this._encodeString(bytes, content.type);\n\n    this._encodeString(bytes, 'test_session_id');\n\n    this._encodeId(bytes, content.trace_id);\n\n    this._encodeString(bytes, 'error');\n\n    this._encodeNumber(bytes, content.error);\n\n    this._encodeString(bytes, 'name');\n\n    this._encodeString(bytes, content.name);\n\n    this._encodeString(bytes, 'service');\n\n    this._encodeString(bytes, content.service);\n\n    this._encodeString(bytes, 'resource');\n\n    this._encodeString(bytes, content.resource);\n\n    this._encodeString(bytes, 'start');\n\n    this._encodeNumber(bytes, content.start);\n\n    this._encodeString(bytes, 'duration');\n\n    this._encodeNumber(bytes, content.duration);\n\n    this._encodeString(bytes, 'meta');\n\n    this._encodeMap(bytes, content.meta);\n\n    this._encodeString(bytes, 'metrics');\n\n    this._encodeMap(bytes, content.metrics);\n  }\n\n  _encodeEventContent(bytes, content) {\n    const keysLength = Object.keys(content).length;\n\n    if (content.meta.test_session_id) {\n      this._encodeMapPrefix(bytes, keysLength + 2);\n    } else {\n      this._encodeMapPrefix(bytes, keysLength);\n    }\n\n    if (content.type) {\n      this._encodeString(bytes, 'type');\n\n      this._encodeString(bytes, content.type);\n    }\n\n    this._encodeString(bytes, 'trace_id');\n\n    this._encodeId(bytes, content.trace_id);\n\n    this._encodeString(bytes, 'span_id');\n\n    this._encodeId(bytes, content.span_id);\n\n    this._encodeString(bytes, 'parent_id');\n\n    this._encodeId(bytes, content.parent_id);\n\n    this._encodeString(bytes, 'name');\n\n    this._encodeString(bytes, content.name);\n\n    this._encodeString(bytes, 'resource');\n\n    this._encodeString(bytes, content.resource);\n\n    this._encodeString(bytes, 'service');\n\n    this._encodeString(bytes, content.service);\n\n    this._encodeString(bytes, 'error');\n\n    this._encodeNumber(bytes, content.error);\n\n    this._encodeString(bytes, 'start');\n\n    this._encodeNumber(bytes, content.start);\n\n    this._encodeString(bytes, 'duration');\n\n    this._encodeNumber(bytes, content.duration);\n    /**\n     * We include `test_session_id` and `test_suite_id`\n     * in the root of the event by passing them via the `meta` dict.\n     * This is to avoid changing the span format in packages/dd-trace/src/format.js,\n     * which can have undesired side effects in other products.\n     * But `test_session_id` and `test_suite_id` are *not* supposed to be in `meta`,\n     * so we delete them before enconding the dictionary.\n     * TODO: find a better way to do this.\n     */\n\n\n    if (content.meta.test_session_id) {\n      this._encodeString(bytes, 'test_session_id');\n\n      this._encodeId(bytes, id(content.meta.test_session_id, 10));\n\n      delete content.meta.test_session_id;\n\n      this._encodeString(bytes, 'test_suite_id');\n\n      this._encodeId(bytes, id(content.meta.test_suite_id, 10));\n\n      delete content.meta.test_suite_id;\n    }\n\n    this._encodeString(bytes, 'meta');\n\n    this._encodeMap(bytes, content.meta);\n\n    this._encodeString(bytes, 'metrics');\n\n    this._encodeMap(bytes, content.metrics);\n  }\n\n  _encodeEvent(bytes, event) {\n    this._encodeMapPrefix(bytes, Object.keys(event).length);\n\n    this._encodeString(bytes, 'type');\n\n    this._encodeString(bytes, event.type);\n\n    this._encodeString(bytes, 'version');\n\n    this._encodeNumber(bytes, event.version);\n\n    this._encodeString(bytes, 'content');\n\n    if (event.type === 'span' || event.type === 'test') {\n      this._encodeEventContent(bytes, event.content);\n    } else if (event.type === 'test_suite_end') {\n      this._encodeTestSuite(bytes, event.content);\n    } else if (event.type === 'test_session_end') {\n      this._encodeTestSession(bytes, event.content);\n    }\n  }\n\n  _encodeNumber(bytes, value) {\n    if (Math.floor(value) !== value) {\n      // float 64\n      return this._encodeFloat(bytes, value);\n    }\n\n    return this._encodeLong(bytes, value);\n  }\n\n  _encodeLong(bytes, value) {\n    const isPositive = value >= 0;\n    const hi = isPositive ? value / Math.pow(2, 32) >> 0 : Math.floor(value / Math.pow(2, 32));\n    const lo = value >>> 0;\n    const flag = isPositive ? 0xcf : 0xd3;\n    const offset = bytes.length; // int 64\n\n    bytes.reserve(9);\n    bytes.length += 9;\n    bytes.buffer[offset] = flag;\n    bytes.buffer[offset + 1] = hi >> 24;\n    bytes.buffer[offset + 2] = hi >> 16;\n    bytes.buffer[offset + 3] = hi >> 8;\n    bytes.buffer[offset + 4] = hi;\n    bytes.buffer[offset + 5] = lo >> 24;\n    bytes.buffer[offset + 6] = lo >> 16;\n    bytes.buffer[offset + 7] = lo >> 8;\n    bytes.buffer[offset + 8] = lo;\n  }\n\n  _encode(bytes, trace) {\n    this._eventCount += trace.length;\n    const events = trace.map(formatSpan);\n\n    for (const event of events) {\n      this._encodeEvent(bytes, event);\n    }\n  }\n\n  makePayload() {\n    const bytes = this._traceBytes;\n    const eventsOffset = this._eventsOffset;\n    const eventsCount = this._eventCount;\n    bytes.buffer[eventsOffset] = 0xdd;\n    bytes.buffer[eventsOffset + 1] = eventsCount >> 24;\n    bytes.buffer[eventsOffset + 2] = eventsCount >> 16;\n    bytes.buffer[eventsOffset + 3] = eventsCount >> 8;\n    bytes.buffer[eventsOffset + 4] = eventsCount;\n    const traceSize = bytes.length;\n    const buffer = Buffer.allocUnsafe(traceSize);\n    bytes.buffer.copy(buffer, 0, 0, traceSize);\n    this.reset();\n    return buffer;\n  }\n\n  _encodePayloadStart(bytes) {\n    // encodes the payload up to `events`. `events` will be encoded via _encode\n    const payload = {\n      version: ENCODING_VERSION,\n      metadata: {\n        '*': {\n          'language': 'javascript',\n          'library_version': ddTraceVersion\n        }\n      },\n      events: []\n    };\n\n    if (this.env) {\n      payload.metadata['*'].env = this.env;\n    }\n\n    if (this.runtimeId) {\n      payload.metadata['*']['runtime-id'] = this.runtimeId;\n    }\n\n    this._encodeMapPrefix(bytes, Object.keys(payload).length);\n\n    this._encodeString(bytes, 'version');\n\n    this._encodeNumber(bytes, payload.version);\n\n    this._encodeString(bytes, 'metadata');\n\n    this._encodeMapPrefix(bytes, Object.keys(payload.metadata).length);\n\n    this._encodeString(bytes, '*');\n\n    this._encodeMap(bytes, payload.metadata['*']);\n\n    this._encodeString(bytes, 'events'); // Get offset of the events list to update the length of the array when calling `makePayload`\n\n\n    this._eventsOffset = bytes.length;\n    bytes.reserve(5);\n    bytes.length += 5;\n  }\n\n  reset() {\n    this._reset();\n\n    this._eventCount = 0;\n\n    this._encodePayloadStart(this._traceBytes);\n  }\n\n}\n\nmodule.exports = {\n  AgentlessCiVisibilityEncoder\n};","map":{"version":3,"names":["truncateSpan","normalizeSpan","require","AgentEncoder","version","ddTraceVersion","id","ENCODING_VERSION","ALLOWED_CONTENT_TYPES","TEST_SUITE_KEYS_LENGTH","TEST_SESSION_KEYS_LENGTH","INTAKE_SOFT_LIMIT","formatSpan","span","encodingVersion","type","meta","test_session_id","includes","content","AgentlessCiVisibilityEncoder","constructor","writer","runtimeId","service","env","_eventCount","reset","_encodeTestSuite","bytes","_encodeMapPrefix","_encodeString","_encodeId","trace_id","span_id","_encodeNumber","error","name","resource","start","duration","_encodeMap","metrics","_encodeTestSession","_encodeEventContent","keysLength","Object","keys","length","parent_id","test_suite_id","_encodeEvent","event","value","Math","floor","_encodeFloat","_encodeLong","isPositive","hi","pow","lo","flag","offset","reserve","buffer","_encode","trace","events","map","makePayload","_traceBytes","eventsOffset","_eventsOffset","eventsCount","traceSize","Buffer","allocUnsafe","copy","_encodePayloadStart","payload","metadata","_reset","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/dd-trace/src/encode/agentless-ci-visibility.js"],"sourcesContent":["'use strict'\nconst { truncateSpan, normalizeSpan } = require('./tags-processors')\nconst { AgentEncoder } = require('./0.4')\nconst { version: ddTraceVersion } = require('../../../../package.json')\nconst id = require('../../../dd-trace/src/id')\nconst ENCODING_VERSION = 1\n\nconst ALLOWED_CONTENT_TYPES = ['test_session_end', 'test_suite_end', 'test']\n\nconst TEST_SUITE_KEYS_LENGTH = 11\nconst TEST_SESSION_KEYS_LENGTH = 10\n\nconst INTAKE_SOFT_LIMIT = 2 * 1024 * 1024 // 2MB\n\nfunction formatSpan (span) {\n  let encodingVersion = ENCODING_VERSION\n  if (span.type === 'test' && span.meta && span.meta.test_session_id) {\n    encodingVersion = 2\n  }\n  return {\n    type: ALLOWED_CONTENT_TYPES.includes(span.type) ? span.type : 'span',\n    version: encodingVersion,\n    content: normalizeSpan(truncateSpan(span))\n  }\n}\n\nclass AgentlessCiVisibilityEncoder extends AgentEncoder {\n  constructor (writer, { runtimeId, service, env }) {\n    super(writer, INTAKE_SOFT_LIMIT)\n    this.runtimeId = runtimeId\n    this.service = service\n    this.env = env\n\n    // Used to keep track of the number of encoded events to update the\n    // length of `payload.events` when calling `makePayload`\n    this._eventCount = 0\n\n    this.reset()\n  }\n\n  _encodeTestSuite (bytes, content) {\n    this._encodeMapPrefix(bytes, TEST_SUITE_KEYS_LENGTH)\n    this._encodeString(bytes, 'type')\n    this._encodeString(bytes, content.type)\n\n    this._encodeString(bytes, 'test_session_id')\n    this._encodeId(bytes, content.trace_id)\n\n    this._encodeString(bytes, 'test_suite_id')\n    this._encodeId(bytes, content.span_id)\n\n    this._encodeString(bytes, 'error')\n    this._encodeNumber(bytes, content.error)\n    this._encodeString(bytes, 'name')\n    this._encodeString(bytes, content.name)\n    this._encodeString(bytes, 'service')\n    this._encodeString(bytes, content.service)\n    this._encodeString(bytes, 'resource')\n    this._encodeString(bytes, content.resource)\n    this._encodeString(bytes, 'start')\n    this._encodeNumber(bytes, content.start)\n    this._encodeString(bytes, 'duration')\n    this._encodeNumber(bytes, content.duration)\n    this._encodeString(bytes, 'meta')\n    this._encodeMap(bytes, content.meta)\n    this._encodeString(bytes, 'metrics')\n    this._encodeMap(bytes, content.metrics)\n  }\n\n  _encodeTestSession (bytes, content) {\n    this._encodeMapPrefix(bytes, TEST_SESSION_KEYS_LENGTH)\n    this._encodeString(bytes, 'type')\n    this._encodeString(bytes, content.type)\n\n    this._encodeString(bytes, 'test_session_id')\n    this._encodeId(bytes, content.trace_id)\n\n    this._encodeString(bytes, 'error')\n    this._encodeNumber(bytes, content.error)\n    this._encodeString(bytes, 'name')\n    this._encodeString(bytes, content.name)\n    this._encodeString(bytes, 'service')\n    this._encodeString(bytes, content.service)\n    this._encodeString(bytes, 'resource')\n    this._encodeString(bytes, content.resource)\n    this._encodeString(bytes, 'start')\n    this._encodeNumber(bytes, content.start)\n    this._encodeString(bytes, 'duration')\n    this._encodeNumber(bytes, content.duration)\n    this._encodeString(bytes, 'meta')\n    this._encodeMap(bytes, content.meta)\n    this._encodeString(bytes, 'metrics')\n    this._encodeMap(bytes, content.metrics)\n  }\n\n  _encodeEventContent (bytes, content) {\n    const keysLength = Object.keys(content).length\n    if (content.meta.test_session_id) {\n      this._encodeMapPrefix(bytes, keysLength + 2)\n    } else {\n      this._encodeMapPrefix(bytes, keysLength)\n    }\n\n    if (content.type) {\n      this._encodeString(bytes, 'type')\n      this._encodeString(bytes, content.type)\n    }\n    this._encodeString(bytes, 'trace_id')\n    this._encodeId(bytes, content.trace_id)\n    this._encodeString(bytes, 'span_id')\n    this._encodeId(bytes, content.span_id)\n    this._encodeString(bytes, 'parent_id')\n    this._encodeId(bytes, content.parent_id)\n    this._encodeString(bytes, 'name')\n    this._encodeString(bytes, content.name)\n    this._encodeString(bytes, 'resource')\n    this._encodeString(bytes, content.resource)\n    this._encodeString(bytes, 'service')\n    this._encodeString(bytes, content.service)\n    this._encodeString(bytes, 'error')\n    this._encodeNumber(bytes, content.error)\n    this._encodeString(bytes, 'start')\n    this._encodeNumber(bytes, content.start)\n    this._encodeString(bytes, 'duration')\n    this._encodeNumber(bytes, content.duration)\n    /**\n     * We include `test_session_id` and `test_suite_id`\n     * in the root of the event by passing them via the `meta` dict.\n     * This is to avoid changing the span format in packages/dd-trace/src/format.js,\n     * which can have undesired side effects in other products.\n     * But `test_session_id` and `test_suite_id` are *not* supposed to be in `meta`,\n     * so we delete them before enconding the dictionary.\n     * TODO: find a better way to do this.\n     */\n    if (content.meta.test_session_id) {\n      this._encodeString(bytes, 'test_session_id')\n      this._encodeId(bytes, id(content.meta.test_session_id, 10))\n      delete content.meta.test_session_id\n\n      this._encodeString(bytes, 'test_suite_id')\n      this._encodeId(bytes, id(content.meta.test_suite_id, 10))\n      delete content.meta.test_suite_id\n    }\n    this._encodeString(bytes, 'meta')\n    this._encodeMap(bytes, content.meta)\n    this._encodeString(bytes, 'metrics')\n    this._encodeMap(bytes, content.metrics)\n  }\n\n  _encodeEvent (bytes, event) {\n    this._encodeMapPrefix(bytes, Object.keys(event).length)\n    this._encodeString(bytes, 'type')\n    this._encodeString(bytes, event.type)\n\n    this._encodeString(bytes, 'version')\n    this._encodeNumber(bytes, event.version)\n\n    this._encodeString(bytes, 'content')\n    if (event.type === 'span' || event.type === 'test') {\n      this._encodeEventContent(bytes, event.content)\n    } else if (event.type === 'test_suite_end') {\n      this._encodeTestSuite(bytes, event.content)\n    } else if (event.type === 'test_session_end') {\n      this._encodeTestSession(bytes, event.content)\n    }\n  }\n\n  _encodeNumber (bytes, value) {\n    if (Math.floor(value) !== value) { // float 64\n      return this._encodeFloat(bytes, value)\n    }\n    return this._encodeLong(bytes, value)\n  }\n\n  _encodeLong (bytes, value) {\n    const isPositive = value >= 0\n\n    const hi = isPositive ? (value / Math.pow(2, 32)) >> 0 : Math.floor(value / Math.pow(2, 32))\n    const lo = value >>> 0\n    const flag = isPositive ? 0xcf : 0xd3\n\n    const offset = bytes.length\n\n    // int 64\n    bytes.reserve(9)\n    bytes.length += 9\n\n    bytes.buffer[offset] = flag\n    bytes.buffer[offset + 1] = hi >> 24\n    bytes.buffer[offset + 2] = hi >> 16\n    bytes.buffer[offset + 3] = hi >> 8\n    bytes.buffer[offset + 4] = hi\n    bytes.buffer[offset + 5] = lo >> 24\n    bytes.buffer[offset + 6] = lo >> 16\n    bytes.buffer[offset + 7] = lo >> 8\n    bytes.buffer[offset + 8] = lo\n  }\n\n  _encode (bytes, trace) {\n    this._eventCount += trace.length\n    const events = trace.map(formatSpan)\n\n    for (const event of events) {\n      this._encodeEvent(bytes, event)\n    }\n  }\n\n  makePayload () {\n    const bytes = this._traceBytes\n    const eventsOffset = this._eventsOffset\n    const eventsCount = this._eventCount\n\n    bytes.buffer[eventsOffset] = 0xdd\n    bytes.buffer[eventsOffset + 1] = eventsCount >> 24\n    bytes.buffer[eventsOffset + 2] = eventsCount >> 16\n    bytes.buffer[eventsOffset + 3] = eventsCount >> 8\n    bytes.buffer[eventsOffset + 4] = eventsCount\n\n    const traceSize = bytes.length\n    const buffer = Buffer.allocUnsafe(traceSize)\n\n    bytes.buffer.copy(buffer, 0, 0, traceSize)\n\n    this.reset()\n\n    return buffer\n  }\n\n  _encodePayloadStart (bytes) {\n    // encodes the payload up to `events`. `events` will be encoded via _encode\n    const payload = {\n      version: ENCODING_VERSION,\n      metadata: {\n        '*': {\n          'language': 'javascript',\n          'library_version': ddTraceVersion\n        }\n      },\n      events: []\n    }\n\n    if (this.env) {\n      payload.metadata['*'].env = this.env\n    }\n    if (this.runtimeId) {\n      payload.metadata['*']['runtime-id'] = this.runtimeId\n    }\n\n    this._encodeMapPrefix(bytes, Object.keys(payload).length)\n    this._encodeString(bytes, 'version')\n    this._encodeNumber(bytes, payload.version)\n    this._encodeString(bytes, 'metadata')\n    this._encodeMapPrefix(bytes, Object.keys(payload.metadata).length)\n    this._encodeString(bytes, '*')\n    this._encodeMap(bytes, payload.metadata['*'])\n    this._encodeString(bytes, 'events')\n    // Get offset of the events list to update the length of the array when calling `makePayload`\n    this._eventsOffset = bytes.length\n    bytes.reserve(5)\n    bytes.length += 5\n  }\n\n  reset () {\n    this._reset()\n    this._eventCount = 0\n    this._encodePayloadStart(this._traceBytes)\n  }\n}\n\nmodule.exports = { AgentlessCiVisibilityEncoder }\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}