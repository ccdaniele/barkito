{"ast":null,"code":"'use strict';\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument');\n\nconst kebabCase = require('lodash.kebabcase');\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst startCh = channel('apm:amqplib:command:start');\nconst finishCh = channel('apm:amqplib:command:finish');\nconst errorCh = channel('apm:amqplib:command:error');\nlet methods = {};\naddHook({\n  name: 'amqplib',\n  file: 'lib/defs.js',\n  versions: ['>=0.5']\n}, defs => {\n  methods = Object.keys(defs).filter(key => Number.isInteger(defs[key])).filter(key => isCamelCase(key)).reduce((acc, key) => Object.assign(acc, {\n    [defs[key]]: kebabCase(key).replace('-', '.')\n  }), {});\n  return defs;\n});\naddHook({\n  name: 'amqplib',\n  file: 'lib/channel.js',\n  versions: ['>=0.5']\n}, channel => {\n  shimmer.wrap(channel.Channel.prototype, 'sendImmediately', sendImmediately => function (method, fields) {\n    return instrument(sendImmediately, this, arguments, methods[method], fields);\n  });\n  shimmer.wrap(channel.Channel.prototype, 'sendMessage', sendMessage => function (fields) {\n    return instrument(sendMessage, this, arguments, 'basic.publish', fields);\n  });\n  shimmer.wrap(channel.BaseChannel.prototype, 'dispatchMessage', dispatchMessage => function (fields, message) {\n    return instrument(dispatchMessage, this, arguments, 'basic.deliver', fields, message);\n  });\n  return channel;\n});\n\nfunction instrument(send, channel, args, method, fields, message) {\n  if (!startCh.hasSubscribers) {\n    return send.apply(channel, args);\n  }\n\n  const asyncResource = new AsyncResource('bound-anonymous-fn');\n  return asyncResource.runInAsyncScope(() => {\n    startCh.publish({\n      channel,\n      method,\n      fields,\n      message\n    });\n\n    try {\n      return send.apply(channel, args);\n    } catch (err) {\n      errorCh.publish(err);\n      throw err;\n    } finally {\n      finishCh.publish();\n    }\n  });\n}\n\nfunction isCamelCase(str) {\n  return /([A-Z][a-z0-9]+)+/.test(str);\n}","map":{"version":3,"names":["channel","addHook","AsyncResource","require","kebabCase","shimmer","startCh","finishCh","errorCh","methods","name","file","versions","defs","Object","keys","filter","key","Number","isInteger","isCamelCase","reduce","acc","assign","replace","wrap","Channel","prototype","sendImmediately","method","fields","instrument","arguments","sendMessage","BaseChannel","dispatchMessage","message","send","args","hasSubscribers","apply","asyncResource","runInAsyncScope","publish","err","str","test"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/amqplib.js"],"sourcesContent":["'use strict'\n\nconst {\n  channel,\n  addHook,\n  AsyncResource\n} = require('./helpers/instrument')\nconst kebabCase = require('lodash.kebabcase')\nconst shimmer = require('../../datadog-shimmer')\n\nconst startCh = channel('apm:amqplib:command:start')\nconst finishCh = channel('apm:amqplib:command:finish')\nconst errorCh = channel('apm:amqplib:command:error')\n\nlet methods = {}\n\naddHook({ name: 'amqplib', file: 'lib/defs.js', versions: ['>=0.5'] }, defs => {\n  methods = Object.keys(defs)\n    .filter(key => Number.isInteger(defs[key]))\n    .filter(key => isCamelCase(key))\n    .reduce((acc, key) => Object.assign(acc, { [defs[key]]: kebabCase(key).replace('-', '.') }), {})\n  return defs\n})\n\naddHook({ name: 'amqplib', file: 'lib/channel.js', versions: ['>=0.5'] }, channel => {\n  shimmer.wrap(channel.Channel.prototype, 'sendImmediately', sendImmediately => function (method, fields) {\n    return instrument(sendImmediately, this, arguments, methods[method], fields)\n  })\n\n  shimmer.wrap(channel.Channel.prototype, 'sendMessage', sendMessage => function (fields) {\n    return instrument(sendMessage, this, arguments, 'basic.publish', fields)\n  })\n\n  shimmer.wrap(channel.BaseChannel.prototype, 'dispatchMessage', dispatchMessage => function (fields, message) {\n    return instrument(dispatchMessage, this, arguments, 'basic.deliver', fields, message)\n  })\n  return channel\n})\n\nfunction instrument (send, channel, args, method, fields, message) {\n  if (!startCh.hasSubscribers) {\n    return send.apply(channel, args)\n  }\n\n  const asyncResource = new AsyncResource('bound-anonymous-fn')\n  return asyncResource.runInAsyncScope(() => {\n    startCh.publish({ channel, method, fields, message })\n\n    try {\n      return send.apply(channel, args)\n    } catch (err) {\n      errorCh.publish(err)\n\n      throw err\n    } finally {\n      finishCh.publish()\n    }\n  })\n}\n\nfunction isCamelCase (str) {\n  return /([A-Z][a-z0-9]+)+/.test(str)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}