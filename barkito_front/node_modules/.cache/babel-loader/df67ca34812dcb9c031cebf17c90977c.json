{"ast":null,"code":"'use strict';\n\nconst shimmer = require('../../datadog-shimmer');\n\nconst {\n  addHook,\n  channel\n} = require('./helpers/instrument');\n\nconst handlers = ['use', 'pre'];\nconst methods = ['del', 'get', 'head', 'opts', 'post', 'put', 'patch'];\nconst handleChannel = channel('apm:restify:request:handle');\nconst errorChannel = channel('apm:restify:middleware:error');\nconst enterChannel = channel('apm:restify:middleware:enter');\nconst exitChannel = channel('apm:restify:middleware:exit');\nconst nextChannel = channel('apm:restify:middleware:next');\n\nfunction wrapSetupRequest(setupRequest) {\n  return function (req, res) {\n    handleChannel.publish({\n      req,\n      res\n    });\n    return setupRequest.apply(this, arguments);\n  };\n}\n\nfunction wrapMethod(method) {\n  return function (path) {\n    const middleware = wrapMiddleware(Array.prototype.slice.call(arguments, 1));\n    return method.apply(this, [path].concat(middleware));\n  };\n}\n\nfunction wrapHandler(method) {\n  return function () {\n    return method.apply(this, wrapMiddleware(arguments));\n  };\n}\n\nfunction wrapMiddleware(middleware) {\n  return Array.prototype.map.call(middleware, wrapFn);\n}\n\nfunction wrapFn(fn) {\n  if (Array.isArray(fn)) return wrapMiddleware(fn);\n  return function (req, res, next) {\n    if (typeof next === 'function') {\n      arguments[2] = wrapNext(req, next);\n    }\n\n    const route = req.route && req.route.path;\n    enterChannel.publish({\n      req,\n      route\n    });\n\n    try {\n      return fn.apply(this, arguments);\n    } catch (error) {\n      errorChannel.publish({\n        req,\n        error\n      });\n      nextChannel.publish({\n        req\n      });\n      exitChannel.publish({\n        req\n      });\n    }\n  };\n}\n\nfunction wrapNext(req, next) {\n  return function () {\n    nextChannel.publish({\n      req\n    });\n    exitChannel.publish({\n      req\n    });\n    next.apply(this, arguments);\n  };\n}\n\naddHook({\n  name: 'restify',\n  versions: ['>=3'],\n  file: 'lib/server.js'\n}, Server => {\n  shimmer.wrap(Server.prototype, '_setupRequest', wrapSetupRequest);\n  shimmer.massWrap(Server.prototype, handlers, wrapHandler);\n  shimmer.massWrap(Server.prototype, methods, wrapMethod);\n  return Server;\n});","map":{"version":3,"names":["shimmer","require","addHook","channel","handlers","methods","handleChannel","errorChannel","enterChannel","exitChannel","nextChannel","wrapSetupRequest","setupRequest","req","res","publish","apply","arguments","wrapMethod","method","path","middleware","wrapMiddleware","Array","prototype","slice","call","concat","wrapHandler","map","wrapFn","fn","isArray","next","wrapNext","route","error","name","versions","file","Server","wrap","massWrap"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-instrumentations/src/restify.js"],"sourcesContent":["'use strict'\n\nconst shimmer = require('../../datadog-shimmer')\nconst { addHook, channel } = require('./helpers/instrument')\nconst handlers = ['use', 'pre']\nconst methods = ['del', 'get', 'head', 'opts', 'post', 'put', 'patch']\n\nconst handleChannel = channel('apm:restify:request:handle')\nconst errorChannel = channel('apm:restify:middleware:error')\nconst enterChannel = channel('apm:restify:middleware:enter')\nconst exitChannel = channel('apm:restify:middleware:exit')\nconst nextChannel = channel('apm:restify:middleware:next')\n\nfunction wrapSetupRequest (setupRequest) {\n  return function (req, res) {\n    handleChannel.publish({ req, res })\n    return setupRequest.apply(this, arguments)\n  }\n}\n\nfunction wrapMethod (method) {\n  return function (path) {\n    const middleware = wrapMiddleware(Array.prototype.slice.call(arguments, 1))\n\n    return method.apply(this, [path].concat(middleware))\n  }\n}\n\nfunction wrapHandler (method) {\n  return function () {\n    return method.apply(this, wrapMiddleware(arguments))\n  }\n}\n\nfunction wrapMiddleware (middleware) {\n  return Array.prototype.map.call(middleware, wrapFn)\n}\n\nfunction wrapFn (fn) {\n  if (Array.isArray(fn)) return wrapMiddleware(fn)\n\n  return function (req, res, next) {\n    if (typeof next === 'function') {\n      arguments[2] = wrapNext(req, next)\n    }\n\n    const route = req.route && req.route.path\n\n    enterChannel.publish({ req, route })\n\n    try {\n      return fn.apply(this, arguments)\n    } catch (error) {\n      errorChannel.publish({ req, error })\n      nextChannel.publish({ req })\n      exitChannel.publish({ req })\n    }\n  }\n}\n\nfunction wrapNext (req, next) {\n  return function () {\n    nextChannel.publish({ req })\n    exitChannel.publish({ req })\n\n    next.apply(this, arguments)\n  }\n}\n\naddHook({ name: 'restify', versions: ['>=3'], file: 'lib/server.js' }, Server => {\n  shimmer.wrap(Server.prototype, '_setupRequest', wrapSetupRequest)\n  shimmer.massWrap(Server.prototype, handlers, wrapHandler)\n  shimmer.massWrap(Server.prototype, methods, wrapMethod)\n\n  return Server\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}