{"ast":null,"code":"'use strict';\n\nconst CachePlugin = require('../../dd-trace/src/plugins/cache');\n\nclass MemcachedPlugin extends CachePlugin {\n  static get name() {\n    return 'memcached';\n  }\n\n  start(_ref) {\n    let {\n      client,\n      server,\n      query\n    } = _ref;\n    const address = getAddress(client, server, query);\n    this.startSpan('memcached.command', {\n      service: this.config.service,\n      resource: query.type,\n      type: 'memcached',\n      kind: 'client',\n      meta: {\n        'memcached.command': query.command,\n        'out.host': address[0],\n        'out.port': address[1]\n      }\n    });\n  }\n\n}\n\nfunction getAddress(client, server, query) {\n  if (!server) {\n    if (client.servers.length === 1) {\n      server = client.servers[0];\n    } else {\n      let redundancy = client.redundancy && client.redundancy < client.servers.length;\n      const queryRedundancy = query.redundancyEnabled;\n\n      if (redundancy && queryRedundancy) {\n        redundancy = client.HashRing.range(query.key, client.redundancy + 1, true);\n        server = redundancy.shift();\n      } else {\n        server = client.HashRing.get(query.key);\n      }\n    }\n  }\n\n  return server && server.split(':');\n}\n\nmodule.exports = MemcachedPlugin;","map":{"version":3,"names":["CachePlugin","require","MemcachedPlugin","name","start","client","server","query","address","getAddress","startSpan","service","config","resource","type","kind","meta","command","servers","length","redundancy","queryRedundancy","redundancyEnabled","HashRing","range","key","shift","get","split","module","exports"],"sources":["/Users/daniel.calderon/Projects/barkito/barkito_front/node_modules/dd-trace/packages/datadog-plugin-memcached/src/index.js"],"sourcesContent":["'use strict'\n\nconst CachePlugin = require('../../dd-trace/src/plugins/cache')\n\nclass MemcachedPlugin extends CachePlugin {\n  static get name () { return 'memcached' }\n\n  start ({ client, server, query }) {\n    const address = getAddress(client, server, query)\n\n    this.startSpan('memcached.command', {\n      service: this.config.service,\n      resource: query.type,\n      type: 'memcached',\n      kind: 'client',\n      meta: {\n        'memcached.command': query.command,\n        'out.host': address[0],\n        'out.port': address[1]\n      }\n    })\n  }\n}\n\nfunction getAddress (client, server, query) {\n  if (!server) {\n    if (client.servers.length === 1) {\n      server = client.servers[0]\n    } else {\n      let redundancy = client.redundancy && client.redundancy < client.servers.length\n      const queryRedundancy = query.redundancyEnabled\n\n      if (redundancy && queryRedundancy) {\n        redundancy = client.HashRing.range(query.key, (client.redundancy + 1), true)\n        server = redundancy.shift()\n      } else {\n        server = client.HashRing.get(query.key)\n      }\n    }\n  }\n\n  return server && server.split(':')\n}\n\nmodule.exports = MemcachedPlugin\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,kCAAD,CAA3B;;AAEA,MAAMC,eAAN,SAA8BF,WAA9B,CAA0C;EACzB,WAAJG,IAAI,GAAI;IAAE,OAAO,WAAP;EAAoB;;EAEzCC,KAAK,OAA6B;IAAA,IAA3B;MAAEC,MAAF;MAAUC,MAAV;MAAkBC;IAAlB,CAA2B;IAChC,MAAMC,OAAO,GAAGC,UAAU,CAACJ,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAA1B;IAEA,KAAKG,SAAL,CAAe,mBAAf,EAAoC;MAClCC,OAAO,EAAE,KAAKC,MAAL,CAAYD,OADa;MAElCE,QAAQ,EAAEN,KAAK,CAACO,IAFkB;MAGlCA,IAAI,EAAE,WAH4B;MAIlCC,IAAI,EAAE,QAJ4B;MAKlCC,IAAI,EAAE;QACJ,qBAAqBT,KAAK,CAACU,OADvB;QAEJ,YAAYT,OAAO,CAAC,CAAD,CAFf;QAGJ,YAAYA,OAAO,CAAC,CAAD;MAHf;IAL4B,CAApC;EAWD;;AAjBuC;;AAoB1C,SAASC,UAAT,CAAqBJ,MAArB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4C;EAC1C,IAAI,CAACD,MAAL,EAAa;IACX,IAAID,MAAM,CAACa,OAAP,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;MAC/Bb,MAAM,GAAGD,MAAM,CAACa,OAAP,CAAe,CAAf,CAAT;IACD,CAFD,MAEO;MACL,IAAIE,UAAU,GAAGf,MAAM,CAACe,UAAP,IAAqBf,MAAM,CAACe,UAAP,GAAoBf,MAAM,CAACa,OAAP,CAAeC,MAAzE;MACA,MAAME,eAAe,GAAGd,KAAK,CAACe,iBAA9B;;MAEA,IAAIF,UAAU,IAAIC,eAAlB,EAAmC;QACjCD,UAAU,GAAGf,MAAM,CAACkB,QAAP,CAAgBC,KAAhB,CAAsBjB,KAAK,CAACkB,GAA5B,EAAkCpB,MAAM,CAACe,UAAP,GAAoB,CAAtD,EAA0D,IAA1D,CAAb;QACAd,MAAM,GAAGc,UAAU,CAACM,KAAX,EAAT;MACD,CAHD,MAGO;QACLpB,MAAM,GAAGD,MAAM,CAACkB,QAAP,CAAgBI,GAAhB,CAAoBpB,KAAK,CAACkB,GAA1B,CAAT;MACD;IACF;EACF;;EAED,OAAOnB,MAAM,IAAIA,MAAM,CAACsB,KAAP,CAAa,GAAb,CAAjB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB5B,eAAjB"},"metadata":{},"sourceType":"script"}