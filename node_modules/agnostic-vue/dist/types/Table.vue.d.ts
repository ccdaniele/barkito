export declare type SortingType = "none" | "ascending" | "descending" | "other" | undefined;
export interface TableProps {
    headers: any[];
    rows: any[];
    caption: string;
    captionPosition?: "top" | "bottom" | "end" | "hidden";
    tableSize?: "small" | "large" | "xlarge" | "";
    responsiveSize?: "small" | "medium" | "large" | "xlarge" | "";
    isUppercasedHeaders?: boolean;
    isBordered?: boolean;
    isBorderless?: boolean;
    isStriped?: boolean;
    isHoverable?: boolean;
    isStacked?: boolean;
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<TableProps>, {
    rows: () => never[];
    headers: () => never[];
    captionPosition: string;
    tableSize: string;
    responsiveSize: string;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<TableProps>, {
    rows: () => never[];
    headers: () => never[];
    captionPosition: string;
    tableSize: string;
    responsiveSize: string;
}>>>, {
    headers: any[];
    rows: any[];
    captionPosition: "hidden" | "end" | "top" | "bottom";
    tableSize: "" | "small" | "large" | "xlarge";
    responsiveSize: "" | "small" | "large" | "xlarge" | "medium";
}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? P[K] & {
        default: D[K];
    } : P[K];
};
