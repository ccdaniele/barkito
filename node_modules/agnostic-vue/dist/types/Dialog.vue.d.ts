import { DialogClassNames, DialogCloseButtonPositions, DialogDrawerPlacement, DialogRoles } from "./DialogApi";
export interface DialogProps {
    id: string;
    dialogRoot: string;
    classNames?: DialogClassNames;
    role?: DialogRoles;
    titleId?: string;
    closeButtonLabel?: string;
    closeButtonPosition?: DialogCloseButtonPositions;
    isAnimationFadeIn?: boolean;
    isAnimationSlideUp?: boolean;
    drawerPlacement?: DialogDrawerPlacement;
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<DialogProps>, {
    role: string;
    closeButtonLabel: string;
    closeButtonPosition: string;
    isAnimationFadeIn: boolean;
    isAnimationSlideUp: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "instance"[], "instance", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<DialogProps>, {
    role: string;
    closeButtonLabel: string;
    closeButtonPosition: string;
    isAnimationFadeIn: boolean;
    isAnimationSlideUp: boolean;
}>>> & {
    onInstance?: ((...args: any[]) => any) | undefined;
}, {
    isAnimationFadeIn: boolean;
    isAnimationSlideUp: boolean;
    role: DialogRoles;
    closeButtonLabel: string;
    closeButtonPosition: DialogCloseButtonPositions;
}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? P[K] & {
        default: D[K];
    } : P[K];
};
