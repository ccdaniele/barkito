export interface InputProps {
    modelValue?: string;
    label: string;
    id: string;
    placeholder?: string;
    labelCss?: string;
    css?: string;
    helpText?: string;
    invalidText?: string;
    isInvalid?: boolean;
    hasLeftAddon?: boolean;
    hasRightAddon?: boolean;
    isInline?: boolean;
    isDisabled?: boolean;
    isSkinned?: boolean;
    isRounded?: boolean;
    isUnderlined?: boolean;
    isUnderlinedWithBackground?: boolean;
    isLabelHidden?: boolean;
    size?: "small" | "large" | "";
    value?: string | number;
    type?: "text" | "textarea" | "email" | "search" | "password" | "tel" | "number" | "url" | "month" | "time" | "week" | "date" | "datetime-local" | "color";
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<InputProps>, {
    placeholder: string;
    size: string;
    value: string;
    type: string;
    isSkinned: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("input" | "update:modelValue")[], "input" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<InputProps>, {
    placeholder: string;
    size: string;
    value: string;
    type: string;
    isSkinned: boolean;
}>>> & {
    onInput?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    type: "number" | "search" | "textarea" | "time" | "text" | "color" | "email" | "password" | "tel" | "url" | "month" | "week" | "date" | "datetime-local";
    isSkinned: boolean;
    size: "" | "small" | "large";
    placeholder: string;
    value: string | number;
}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? P[K] & {
        default: D[K];
    } : P[K];
};
